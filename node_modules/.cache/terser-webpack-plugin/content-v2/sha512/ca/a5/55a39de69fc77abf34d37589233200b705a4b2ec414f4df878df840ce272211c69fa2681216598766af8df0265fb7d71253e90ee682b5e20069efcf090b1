{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[424],{601:function(e,n){!function(e){var n=/\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;e.languages.sml={comment:/\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,string:{pattern:/#?\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":[{pattern:RegExp(/((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g,(function(){return/\\s*(?:[*,]|->)/.source})).replace(/<TERMINAL>/g,(function(){return/(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/.source})).replace(/<LONG-ID>/g,(function(){return/(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source})).replace(/<KEYWORD>/g,(function(){return n.source})),\"i\"),lookbehind:!0,greedy:!0,inside:null},{pattern:/((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,lookbehind:!0}],function:{pattern:/((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,lookbehind:!0},keyword:n,variable:{pattern:/(^|[^\\w'])'[\\w']*/,lookbehind:!0},number:/~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,word:{pattern:/\\b0w(?:\\d+|x[\\da-f]+)\\b/i,alias:\"constant\"},boolean:/\\b(?:false|true)\\b/i,operator:/\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,punctuation:/[(){}\\[\\].:,;]/},e.languages.sml[\"class-name\"][0].inside=e.languages.sml,e.languages.smlnj=e.languages.sml}(Prism)}}]);","name":"static/js/424.da2adf33.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","keywords","languages","sml","comment","string","pattern","greedy","RegExp","source","replace","lookbehind","inside","function","keyword","variable","number","word","alias","boolean","operator","punctuation","smlnj"],"sources":["static/js/424.da2adf33.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAIxB,SAAWC,GACT,IAAIC,EAAW,0PACfD,EAAME,UAAUC,IAAM,CAEpBC,QAAW,4EACXC,OAAU,CACRC,QAAS,sBACTC,QAAQ,GAEV,aAAc,CAAC,CAObD,QAASE,OAAO,2HAA2HC,OAAOC,QAAQ,eAAe,WACvK,MAAO,iBAAiBD,MAC1B,IAAGC,QAAQ,eAAe,WACxB,MAAO,6FAA6FD,MACtG,IAAGC,QAAQ,cAAc,WACvB,MAAO,+BAA+BD,MACxC,IAAGC,QAAQ,cAAc,WACvB,OAAOT,EAASQ,MAClB,IAAI,KACJE,YAAY,EACZJ,QAAQ,EACRK,OAAQ,MACP,CACDN,QAAS,yFACTK,YAAY,IAEdE,SAAY,CACVP,QAAS,qCACTK,YAAY,GAEdG,QAAWb,EACXc,SAAY,CACVT,QAAS,oBACTK,YAAY,GAEdK,OAAU,iDACVC,KAAQ,CACNX,QAAS,2BACTY,MAAO,YAETC,QAAW,sBACXC,SAAY,4CACZC,YAAe,kBAEjBrB,EAAME,UAAUC,IAAI,cAAc,GAAGS,OAASZ,EAAME,UAAUC,IAC9DH,EAAME,UAAUoB,MAAQtB,EAAME,UAAUC,GACzC,CApDD,CAoDGH,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[424],{\n\n/***/ 601:\n/***/ (function(module, exports) {\n\n// https://smlfamily.github.io/sml97-defn.pdf\n// https://people.mpi-sws.org/~rossberg/sml.html\n(function (Prism) {\n  var keywords = /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;\n  Prism.languages.sml = {\n    // allow one level of nesting\n    'comment': /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n    'string': {\n      pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    'class-name': [{\n      // This is only an approximation since the real grammar is context-free\n      //\n      // Why the main loop so complex?\n      // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n      // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n      // followed by a long identifier.\n      pattern: RegExp(/((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function () {\n        return /\\s*(?:[*,]|->)/.source;\n      }).replace(/<TERMINAL>/g, function () {\n        return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/.source;\n      }).replace(/<LONG-ID>/g, function () {\n        return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source;\n      }).replace(/<KEYWORD>/g, function () {\n        return keywords.source;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    }, {\n      pattern: /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n      lookbehind: true\n    }],\n    'function': {\n      pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n      lookbehind: true\n    },\n    'keyword': keywords,\n    'variable': {\n      pattern: /(^|[^\\w'])'[\\w']*/,\n      lookbehind: true\n    },\n    'number': /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n    'word': {\n      pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n      alias: 'constant'\n    },\n    'boolean': /\\b(?:false|true)\\b/i,\n    'operator': /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n    'punctuation': /[(){}\\[\\].:,;]/\n  };\n  Prism.languages.sml['class-name'][0].inside = Prism.languages.sml;\n  Prism.languages.smlnj = Prism.languages.sml;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-sml.js"],"names":["Prism","keywords","languages","sml","pattern","greedy","RegExp","source","replace","lookbehind","inside","alias","smlnj"],"mappings":";;;;;AAAA;AACA;AACC,WAAUA,KAAK,EAAE;EAEjB,IAAIC,QAAQ,GAAG,yPAAyP;EAExQD,KAAK,CAACE,SAAS,CAACC,GAAG,GAAG;IACrB;IACA,SAAS,EAAE,2EAA2E;IACtF,QAAQ,EAAE;MACTC,OAAO,EAAE,qBAAqB;MAC9BC,MAAM,EAAE;IACT,CAAC;IAED,YAAY,EAAE,CACb;MACC;MACA;MACA;MACA;MACA;MACA;MACAD,OAAO,EAAEE,MAAM,CACd,0HAA0H,CAACC,MAAM,CAC/HC,OAAO,CAAC,aAAa,EAAE,YAAY;QAAE,OAAO,gBAAgB,CAACD,MAAM;MAAE,CAAC,CAAC,CACvEC,OAAO,CAAC,aAAa,EAAE,YAAY;QACnC,OAAO,4FAA4F,CAACD,MAAM;MAC3G,CAAC,CAAC,CACDC,OAAO,CAAC,YAAY,EAAE,YAAY;QAAE,OAAO,8BAA8B,CAACD,MAAM;MAAE,CAAC,CAAC,CACpFC,OAAO,CAAC,YAAY,EAAE,YAAY;QAAE,OAAOP,QAAQ,CAACM,MAAM;MAAE,CAAC,CAAC,EAChE,GACD,CAAC;MACDE,UAAU,EAAE,IAAI;MAChBJ,MAAM,EAAE,IAAI;MACZK,MAAM,EAAE,IAAI,CAAC;IACd,CAAC,EACD;MACCN,OAAO,EAAE,wFAAwF;MACjGK,UAAU,EAAE;IACb,CAAC,CACD;IACD,UAAU,EAAE;MACXL,OAAO,EAAE,oCAAoC;MAC7CK,UAAU,EAAE;IACb,CAAC;IAED,SAAS,EAAER,QAAQ;IACnB,UAAU,EAAE;MACXG,OAAO,EAAE,mBAAmB;MAC5BK,UAAU,EAAE;IACb,CAAC;IAED,QAAQ,EAAE,gDAAgD;IAC1D,MAAM,EAAE;MACPL,OAAO,EAAE,0BAA0B;MACnCO,KAAK,EAAE;IACR,CAAC;IAED,SAAS,EAAE,qBAAqB;IAChC,UAAU,EAAE,2CAA2C;IACvD,aAAa,EAAE;EAChB,CAAC;EAEDX,KAAK,CAACE,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACO,MAAM,GAAGV,KAAK,CAACE,SAAS,CAACC,GAAG;EAEjEH,KAAK,CAACE,SAAS,CAACU,KAAK,GAAGZ,KAAK,CAACE,SAAS,CAACC,GAAG;AAE5C,CAAC,EAACH,KAAK,CAAC,C","file":"x","sourcesContent":["// https://smlfamily.github.io/sml97-defn.pdf\n// https://people.mpi-sws.org/~rossberg/sml.html\n(function (Prism) {\n\n\tvar keywords = /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;\n\n\tPrism.languages.sml = {\n\t\t// allow one level of nesting\n\t\t'comment': /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n\t\t'string': {\n\t\t\tpattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\t// This is only an approximation since the real grammar is context-free\n\t\t\t\t//\n\t\t\t\t// Why the main loop so complex?\n\t\t\t\t// The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n\t\t\t\t// simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n\t\t\t\t// followed by a long identifier.\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\t/((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n\t\t\t\t\t\t.replace(/<NOT-LAST>/g, function () { return /\\s*(?:[*,]|->)/.source; })\n\t\t\t\t\t\t.replace(/<TERMINAL>/g, function () {\n\t\t\t\t\t\t\treturn /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/.source;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.replace(/<LONG-ID>/g, function () { return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source; })\n\t\t\t\t\t\t.replace(/<KEYWORD>/g, function () { return keywords.source; }),\n\t\t\t\t\t'i'\n\t\t\t\t),\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'function': {\n\t\t\tpattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'keyword': keywords,\n\t\t'variable': {\n\t\t\tpattern: /(^|[^\\w'])'[\\w']*/,\n\t\t\tlookbehind: true,\n\t\t},\n\n\t\t'number': /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n\t\t'word': {\n\t\t\tpattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\n\t\t'boolean': /\\b(?:false|true)\\b/i,\n\t\t'operator': /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n\t\t'punctuation': /[(){}\\[\\].:,;]/\n\t};\n\n\tPrism.languages.sml['class-name'][0].inside = Prism.languages.sml;\n\n\tPrism.languages.smlnj = Prism.languages.sml;\n\n}(Prism));\n"]}}