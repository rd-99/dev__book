{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[305],{482:function(a,e){Prism.languages.nevod={comment:/\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,string:{pattern:/(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,greedy:!0,inside:{\"string-attrs\":/!$|!\\*$|\\*$/}},namespace:{pattern:/(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,lookbehind:!0},pattern:{pattern:/(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,lookbehind:!0,inside:{\"pattern-name\":{pattern:/^#?[a-zA-Z0-9\\-.]+/,alias:\"class-name\"},fields:{pattern:/\\(.*\\)/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},punctuation:/[,()]/,operator:{pattern:/~/,alias:\"field-hidden-mark\"}}}}},search:{pattern:/(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,alias:\"function\",lookbehind:!0},keyword:/@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\"standard-pattern\":{pattern:/\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,inside:{\"standard-pattern-name\":{pattern:/^[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},\"standard-pattern-attr\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},punctuation:/[,()]/}},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},operator:[{pattern:/=/,alias:\"pattern-def\"},{pattern:/&/,alias:\"conjunction\"},{pattern:/~/,alias:\"exception\"},{pattern:/\\?/,alias:\"optionality\"},{pattern:/[[\\]]/,alias:\"repetition\"},{pattern:/[{}]/,alias:\"variation\"},{pattern:/[+_]/,alias:\"sequence\"},{pattern:/\\.{2,3}/,alias:\"span\"}],\"field-capture\":[{pattern:/([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,lookbehind:!0,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}},{pattern:/[a-zA-Z0-9\\-.]+\\s*:/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}}],punctuation:/[:;,()]/,name:/[a-zA-Z0-9\\-.]+/}}}]);","name":"static/js/305.58086ed4.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","nevod","comment","string","pattern","greedy","inside","namespace","lookbehind","alias","fields","punctuation","operator","search","keyword","quantifier","colon","name"],"sources":["static/js/305.58086ed4.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,MAAQ,CACtBC,QAAS,oCACTC,OAAQ,CACNC,QAAS,mDACTC,QAAQ,EACRC,OAAQ,CACN,eAAgB,gBAGpBC,UAAW,CACTH,QAAS,0CACTI,YAAY,GAEdJ,QAAS,CACPA,QAAS,qHACTI,YAAY,EACZF,OAAQ,CACN,eAAgB,CACdF,QAAS,qBACTK,MAAO,cAETC,OAAQ,CACNN,QAAS,SACTE,OAAQ,CACN,aAAc,CACZF,QAAS,kBACTK,MAAO,YAETE,YAAa,QACbC,SAAU,CACRR,QAAS,IACTK,MAAO,yBAMjBI,OAAQ,CACNT,QAAS,iDACTK,MAAO,WACPD,YAAY,GAEdM,QAAS,sEACT,mBAAoB,CAClBV,QAAS,gIACTE,OAAQ,CACN,wBAAyB,CACvBF,QAAS,mBACTK,MAAO,WAETM,WAAY,CACVX,QAAS,mCACTK,MAAO,UAET,wBAAyB,CACvBL,QAAS,kBACTK,MAAO,WAETE,YAAa,UAGjBI,WAAY,CACVX,QAAS,mCACTK,MAAO,UAETG,SAAU,CAAC,CACTR,QAAS,IACTK,MAAO,eACN,CACDL,QAAS,IACTK,MAAO,eACN,CACDL,QAAS,IACTK,MAAO,aACN,CACDL,QAAS,KACTK,MAAO,eACN,CACDL,QAAS,QACTK,MAAO,cACN,CACDL,QAAS,OACTK,MAAO,aACN,CACDL,QAAS,OACTK,MAAO,YACN,CACDL,QAAS,UACTK,MAAO,SAET,gBAAiB,CAAC,CAChBL,QAAS,2HACTI,YAAY,EACZF,OAAQ,CACN,aAAc,CACZF,QAAS,kBACTK,MAAO,YAETO,MAAO,MAER,CACDZ,QAAS,sBACTE,OAAQ,CACN,aAAc,CACZF,QAAS,kBACTK,MAAO,YAETO,MAAO,OAGXL,YAAa,UACbM,KAAM,kBAGD"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[305],{\n\n/***/ 482:\n/***/ (function(module, exports) {\n\nPrism.languages.nevod = {\n  comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n  string: {\n    pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n    greedy: !0,\n    inside: {\n      \"string-attrs\": /!$|!\\*$|\\*$/\n    }\n  },\n  namespace: {\n    pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n    lookbehind: !0\n  },\n  pattern: {\n    pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n    lookbehind: !0,\n    inside: {\n      \"pattern-name\": {\n        pattern: /^#?[a-zA-Z0-9\\-.]+/,\n        alias: \"class-name\"\n      },\n      fields: {\n        pattern: /\\(.*\\)/,\n        inside: {\n          \"field-name\": {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: \"variable\"\n          },\n          punctuation: /[,()]/,\n          operator: {\n            pattern: /~/,\n            alias: \"field-hidden-mark\"\n          }\n        }\n      }\n    }\n  },\n  search: {\n    pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n    alias: \"function\",\n    lookbehind: !0\n  },\n  keyword: /@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\n  \"standard-pattern\": {\n    pattern: /\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n    inside: {\n      \"standard-pattern-name\": {\n        pattern: /^[a-zA-Z0-9\\-.]+/,\n        alias: \"builtin\"\n      },\n      quantifier: {\n        pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n        alias: \"number\"\n      },\n      \"standard-pattern-attr\": {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: \"builtin\"\n      },\n      punctuation: /[,()]/\n    }\n  },\n  quantifier: {\n    pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n    alias: \"number\"\n  },\n  operator: [{\n    pattern: /=/,\n    alias: \"pattern-def\"\n  }, {\n    pattern: /&/,\n    alias: \"conjunction\"\n  }, {\n    pattern: /~/,\n    alias: \"exception\"\n  }, {\n    pattern: /\\?/,\n    alias: \"optionality\"\n  }, {\n    pattern: /[[\\]]/,\n    alias: \"repetition\"\n  }, {\n    pattern: /[{}]/,\n    alias: \"variation\"\n  }, {\n    pattern: /[+_]/,\n    alias: \"sequence\"\n  }, {\n    pattern: /\\.{2,3}/,\n    alias: \"span\"\n  }],\n  \"field-capture\": [{\n    pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n    lookbehind: !0,\n    inside: {\n      \"field-name\": {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: \"variable\"\n      },\n      colon: /:/\n    }\n  }, {\n    pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n    inside: {\n      \"field-name\": {\n        pattern: /[a-zA-Z0-9\\-.]+/,\n        alias: \"variable\"\n      },\n      colon: /:/\n    }\n  }],\n  punctuation: /[:;,()]/,\n  name: /[a-zA-Z0-9\\-.]+/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-nevod.min.js"],"names":["Prism","languages","nevod","comment","string","pattern","greedy","inside","namespace","lookbehind","alias","fields","punctuation","operator","search","keyword","quantifier","colon","name"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,KAAK,GAAC;EAACC,OAAO,EAAC,mCAAmC;EAACC,MAAM,EAAC;IAACC,OAAO,EAAC,kDAAkD;IAACC,MAAM,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC;MAAC,cAAc,EAAC;IAAa;EAAC,CAAC;EAACC,SAAS,EAAC;IAACH,OAAO,EAAC,yCAAyC;IAACI,UAAU,EAAC,CAAC;EAAC,CAAC;EAACJ,OAAO,EAAC;IAACA,OAAO,EAAC,oHAAoH;IAACI,UAAU,EAAC,CAAC,CAAC;IAACF,MAAM,EAAC;MAAC,cAAc,EAAC;QAACF,OAAO,EAAC,oBAAoB;QAACK,KAAK,EAAC;MAAY,CAAC;MAACC,MAAM,EAAC;QAACN,OAAO,EAAC,QAAQ;QAACE,MAAM,EAAC;UAAC,YAAY,EAAC;YAACF,OAAO,EAAC,iBAAiB;YAACK,KAAK,EAAC;UAAU,CAAC;UAACE,WAAW,EAAC,OAAO;UAACC,QAAQ,EAAC;YAACR,OAAO,EAAC,GAAG;YAACK,KAAK,EAAC;UAAmB;QAAC;MAAC;IAAC;EAAC,CAAC;EAACI,MAAM,EAAC;IAACT,OAAO,EAAC,gDAAgD;IAACK,KAAK,EAAC,UAAU;IAACD,UAAU,EAAC,CAAC;EAAC,CAAC;EAACM,OAAO,EAAC,qEAAqE;EAAC,kBAAkB,EAAC;IAACV,OAAO,EAAC,+HAA+H;IAACE,MAAM,EAAC;MAAC,uBAAuB,EAAC;QAACF,OAAO,EAAC,kBAAkB;QAACK,KAAK,EAAC;MAAS,CAAC;MAACM,UAAU,EAAC;QAACX,OAAO,EAAC,kCAAkC;QAACK,KAAK,EAAC;MAAQ,CAAC;MAAC,uBAAuB,EAAC;QAACL,OAAO,EAAC,iBAAiB;QAACK,KAAK,EAAC;MAAS,CAAC;MAACE,WAAW,EAAC;IAAO;EAAC,CAAC;EAACI,UAAU,EAAC;IAACX,OAAO,EAAC,kCAAkC;IAACK,KAAK,EAAC;EAAQ,CAAC;EAACG,QAAQ,EAAC,CAAC;IAACR,OAAO,EAAC,GAAG;IAACK,KAAK,EAAC;EAAa,CAAC,EAAC;IAACL,OAAO,EAAC,GAAG;IAACK,KAAK,EAAC;EAAa,CAAC,EAAC;IAACL,OAAO,EAAC,GAAG;IAACK,KAAK,EAAC;EAAW,CAAC,EAAC;IAACL,OAAO,EAAC,IAAI;IAACK,KAAK,EAAC;EAAa,CAAC,EAAC;IAACL,OAAO,EAAC,OAAO;IAACK,KAAK,EAAC;EAAY,CAAC,EAAC;IAACL,OAAO,EAAC,MAAM;IAACK,KAAK,EAAC;EAAW,CAAC,EAAC;IAACL,OAAO,EAAC,MAAM;IAACK,KAAK,EAAC;EAAU,CAAC,EAAC;IAACL,OAAO,EAAC,SAAS;IAACK,KAAK,EAAC;EAAM,CAAC,CAAC;EAAC,eAAe,EAAC,CAAC;IAACL,OAAO,EAAC,0HAA0H;IAACI,UAAU,EAAC,CAAC,CAAC;IAACF,MAAM,EAAC;MAAC,YAAY,EAAC;QAACF,OAAO,EAAC,iBAAiB;QAACK,KAAK,EAAC;MAAU,CAAC;MAACO,KAAK,EAAC;IAAG;EAAC,CAAC,EAAC;IAACZ,OAAO,EAAC,qBAAqB;IAACE,MAAM,EAAC;MAAC,YAAY,EAAC;QAACF,OAAO,EAAC,iBAAiB;QAACK,KAAK,EAAC;MAAU,CAAC;MAACO,KAAK,EAAC;IAAG;EAAC,CAAC,CAAC;EAACL,WAAW,EAAC,SAAS;EAACM,IAAI,EAAC;AAAiB,CAAC,C","file":"x","sourcesContent":["Prism.languages.nevod={comment:/\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,string:{pattern:/(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,greedy:!0,inside:{\"string-attrs\":/!$|!\\*$|\\*$/}},namespace:{pattern:/(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,lookbehind:!0},pattern:{pattern:/(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,lookbehind:!0,inside:{\"pattern-name\":{pattern:/^#?[a-zA-Z0-9\\-.]+/,alias:\"class-name\"},fields:{pattern:/\\(.*\\)/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},punctuation:/[,()]/,operator:{pattern:/~/,alias:\"field-hidden-mark\"}}}}},search:{pattern:/(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,alias:\"function\",lookbehind:!0},keyword:/@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\"standard-pattern\":{pattern:/\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,inside:{\"standard-pattern-name\":{pattern:/^[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},\"standard-pattern-attr\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},punctuation:/[,()]/}},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},operator:[{pattern:/=/,alias:\"pattern-def\"},{pattern:/&/,alias:\"conjunction\"},{pattern:/~/,alias:\"exception\"},{pattern:/\\?/,alias:\"optionality\"},{pattern:/[[\\]]/,alias:\"repetition\"},{pattern:/[{}]/,alias:\"variation\"},{pattern:/[+_]/,alias:\"sequence\"},{pattern:/\\.{2,3}/,alias:\"span\"}],\"field-capture\":[{pattern:/([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,lookbehind:!0,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}},{pattern:/[a-zA-Z0-9\\-.]+\\s*:/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}}],punctuation:/[:;,()]/,name:/[a-zA-Z0-9\\-.]+/};"]}}