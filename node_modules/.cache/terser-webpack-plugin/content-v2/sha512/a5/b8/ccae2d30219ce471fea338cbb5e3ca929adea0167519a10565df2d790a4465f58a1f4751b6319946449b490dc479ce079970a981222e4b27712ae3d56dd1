{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[362],{539:function(e,t){!function(e){e.languages.pug={comment:{pattern:/(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,lookbehind:!0},\"multiline-script\":{pattern:/(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,lookbehind:!0,inside:e.languages.javascript},filter:{pattern:/(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"}}},\"multiline-plain-text\":{pattern:/(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,lookbehind:!0},markup:{pattern:/(^[\\t ]*)<.+/m,lookbehind:!0,inside:e.languages.markup},doctype:{pattern:/((?:^|\\n)[\\t ]*)doctype(?: .+)?/,lookbehind:!0},\"flow-control\":{pattern:/(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,lookbehind:!0,inside:{each:{pattern:/^each .+? in\\b/,inside:{keyword:/\\b(?:each|in)\\b/,punctuation:/,/}},branch:{pattern:/^(?:if|unless|else|case|when|default|while)\\b/,alias:\"keyword\"},rest:e.languages.javascript}},keyword:{pattern:/(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,lookbehind:!0},mixin:[{pattern:/(^[\\t ]*)mixin .+/m,lookbehind:!0,inside:{keyword:/^mixin/,function:/\\w+(?=\\s*\\(|\\s*$)/,punctuation:/[(),.]/}},{pattern:/(^[\\t ]*)\\+.+/m,lookbehind:!0,inside:{name:{pattern:/^\\+\\w+/,alias:\"function\"},rest:e.languages.javascript}}],script:{pattern:/(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,lookbehind:!0,inside:e.languages.javascript},\"plain-text\":{pattern:/(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,lookbehind:!0},tag:{pattern:/(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,lookbehind:!0,inside:{attributes:[{pattern:/&[^(]+\\([^)]+\\)/,inside:e.languages.javascript},{pattern:/\\([^)]+\\)/,inside:{\"attr-value\":{pattern:/(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,lookbehind:!0,inside:e.languages.javascript},\"attr-name\":/[\\w-]+(?=\\s*!?=|\\s*[,)])/,punctuation:/[!=(),]+/}}],punctuation:/:/,\"attr-id\":/#[\\w\\-]+/,\"attr-class\":/\\.[\\w\\-]+/}},code:[{pattern:/(^[\\t ]*(?:-|!?=)).+/m,lookbehind:!0,inside:e.languages.javascript}],punctuation:/[.\\-!=|]+/};for(var t=/(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source,n=[{filter:\"atpl\",language:\"twig\"},{filter:\"coffee\",language:\"coffeescript\"},\"ejs\",\"handlebars\",\"less\",\"livescript\",\"markdown\",{filter:\"sass\",language:\"scss\"},\"stylus\"],a={},i=0,r=n.length;i<r;i++){var s=n[i];s=\"string\"===typeof s?{filter:s,language:s}:s,e.languages[s.language]&&(a[\"filter-\"+s.filter]={pattern:RegExp(t.replace(\"<filter_name>\",(function(){return s.filter})),\"m\"),lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"},rest:e.languages[s.language]}})}e.languages.insertBefore(\"pug\",\"filter\",a)}(Prism)}}]);","name":"static/js/362.9949f910.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","pug","comment","pattern","lookbehind","inside","javascript","filter","alias","markup","doctype","each","keyword","punctuation","branch","rest","mixin","function","name","script","tag","attributes","code","filter_pattern","source","filters","language","all_filters","i","l","length","RegExp","replace","insertBefore"],"sources":["static/js/362.9949f910.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GASTA,EAAMC,UAAUC,IAAM,CAIpBC,QAAW,CACTC,QAAS,+CACTC,YAAY,GAId,mBAAoB,CAClBD,QAAS,sFACTC,YAAY,EACZC,OAAQN,EAAMC,UAAUM,YAG1BC,OAAU,CACRJ,QAAS,uEACTC,YAAY,EACZC,OAAQ,CACN,cAAe,CACbF,QAAS,WACTK,MAAO,cAIb,uBAAwB,CACtBL,QAAS,qFACTC,YAAY,GAEdK,OAAU,CACRN,QAAS,gBACTC,YAAY,EACZC,OAAQN,EAAMC,UAAUS,QAE1BC,QAAW,CACTP,QAAS,kCACTC,YAAY,GAGd,eAAgB,CACdD,QAAS,sEACTC,YAAY,EACZC,OAAQ,CACNM,KAAQ,CACNR,QAAS,iBACTE,OAAQ,CACNO,QAAW,kBACXC,YAAe,MAGnBC,OAAU,CACRX,QAAS,gDACTK,MAAO,WAETO,KAAMhB,EAAMC,UAAUM,aAG1BM,QAAW,CACTT,QAAS,yDACTC,YAAY,GAEdY,MAAS,CAET,CACEb,QAAS,qBACTC,YAAY,EACZC,OAAQ,CACNO,QAAW,SACXK,SAAY,oBACZJ,YAAe,WAInB,CACEV,QAAS,iBACTC,YAAY,EACZC,OAAQ,CACNa,KAAQ,CACNf,QAAS,SACTK,MAAO,YAETO,KAAMhB,EAAMC,UAAUM,cAG1Ba,OAAU,CACRhB,QAAS,mDACTC,YAAY,EACZC,OAAQN,EAAMC,UAAUM,YAE1B,aAAc,CACZH,QAAS,oEACTC,YAAY,GAEdgB,IAAO,CACLjB,QAAS,+DACTC,YAAY,EACZC,OAAQ,CACNgB,WAAc,CAAC,CACblB,QAAS,kBACTE,OAAQN,EAAMC,UAAUM,YACvB,CACDH,QAAS,YACTE,OAAQ,CACN,aAAc,CACZF,QAAS,uCACTC,YAAY,EACZC,OAAQN,EAAMC,UAAUM,YAE1B,YAAa,2BACbO,YAAe,cAGnBA,YAAe,IACf,UAAW,WACX,aAAc,cAGlBS,KAAQ,CAAC,CACPnB,QAAS,wBACTC,YAAY,EACZC,OAAQN,EAAMC,UAAUM,aAE1BO,YAAe,aAgBjB,IAdA,IAAIU,EAAiB,iFAAiFC,OAGlGC,EAAU,CAAC,CACblB,OAAQ,OACRmB,SAAU,QACT,CACDnB,OAAQ,SACRmB,SAAU,gBACT,MAAO,aAAc,OAAQ,aAAc,WAAY,CACxDnB,OAAQ,OACRmB,SAAU,QACT,UACCC,EAAc,CAAC,EACVC,EAAI,EAAGC,EAAIJ,EAAQK,OAAQF,EAAIC,EAAGD,IAAK,CAC9C,IAAIrB,EAASkB,EAAQG,GACrBrB,EAA2B,kBAAXA,EAAsB,CACpCA,OAAQA,EACRmB,SAAUnB,GACRA,EACAR,EAAMC,UAAUO,EAAOmB,YACzBC,EAAY,UAAYpB,EAAOA,QAAU,CACvCJ,QAAS4B,OAAOR,EAAeS,QAAQ,iBAAiB,WACtD,OAAOzB,EAAOA,MAChB,IAAI,KACJH,YAAY,EACZC,OAAQ,CACN,cAAe,CACbF,QAAS,WACTK,MAAO,YAETO,KAAMhB,EAAMC,UAAUO,EAAOmB,YAIrC,CACA3B,EAAMC,UAAUiC,aAAa,MAAO,SAAUN,EAC/C,CA3KD,CA2KG5B,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[362],{\n\n/***/ 539:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // TODO:\n  // - Add CSS highlighting inside <style> tags\n  // - Add support for multi-line code blocks\n  // - Add support for interpolation #{} and !{}\n  // - Add support for tag interpolation #[]\n  // - Add explicit support for plain text using |\n  // - Add support for markup embedded in plain text\n\n  Prism.languages.pug = {\n    // Multiline stuff should appear before the rest\n\n    // This handles both single-line and multi-line comments\n    'comment': {\n      pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n      lookbehind: true\n    },\n    // All the tag-related part is in lookbehind\n    // so that it can be highlighted by the \"tag\" pattern\n    'multiline-script': {\n      pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    // See at the end of the file for known filters\n    'filter': {\n      pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true,\n      inside: {\n        'filter-name': {\n          pattern: /^:[\\w-]+/,\n          alias: 'variable'\n        }\n      }\n    },\n    'multiline-plain-text': {\n      pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true\n    },\n    'markup': {\n      pattern: /(^[\\t ]*)<.+/m,\n      lookbehind: true,\n      inside: Prism.languages.markup\n    },\n    'doctype': {\n      pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n      lookbehind: true\n    },\n    // This handle all conditional and loop keywords\n    'flow-control': {\n      pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n      lookbehind: true,\n      inside: {\n        'each': {\n          pattern: /^each .+? in\\b/,\n          inside: {\n            'keyword': /\\b(?:each|in)\\b/,\n            'punctuation': /,/\n          }\n        },\n        'branch': {\n          pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n          alias: 'keyword'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    'keyword': {\n      pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n      lookbehind: true\n    },\n    'mixin': [\n    // Declaration\n    {\n      pattern: /(^[\\t ]*)mixin .+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^mixin/,\n        'function': /\\w+(?=\\s*\\(|\\s*$)/,\n        'punctuation': /[(),.]/\n      }\n    },\n    // Usage\n    {\n      pattern: /(^[\\t ]*)\\+.+/m,\n      lookbehind: true,\n      inside: {\n        'name': {\n          pattern: /^\\+\\w+/,\n          alias: 'function'\n        },\n        rest: Prism.languages.javascript\n      }\n    }],\n    'script': {\n      pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'plain-text': {\n      pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n      lookbehind: true\n    },\n    'tag': {\n      pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n      lookbehind: true,\n      inside: {\n        'attributes': [{\n          pattern: /&[^(]+\\([^)]+\\)/,\n          inside: Prism.languages.javascript\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            'attr-value': {\n              pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n              lookbehind: true,\n              inside: Prism.languages.javascript\n            },\n            'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n            'punctuation': /[!=(),]+/\n          }\n        }],\n        'punctuation': /:/,\n        'attr-id': /#[\\w\\-]+/,\n        'attr-class': /\\.[\\w\\-]+/\n      }\n    },\n    'code': [{\n      pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    'punctuation': /[.\\-!=|]+/\n  };\n  var filter_pattern = /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source;\n\n  // Non exhaustive list of available filters and associated languages\n  var filters = [{\n    filter: 'atpl',\n    language: 'twig'\n  }, {\n    filter: 'coffee',\n    language: 'coffeescript'\n  }, 'ejs', 'handlebars', 'less', 'livescript', 'markdown', {\n    filter: 'sass',\n    language: 'scss'\n  }, 'stylus'];\n  var all_filters = {};\n  for (var i = 0, l = filters.length; i < l; i++) {\n    var filter = filters[i];\n    filter = typeof filter === 'string' ? {\n      filter: filter,\n      language: filter\n    } : filter;\n    if (Prism.languages[filter.language]) {\n      all_filters['filter-' + filter.filter] = {\n        pattern: RegExp(filter_pattern.replace('<filter_name>', function () {\n          return filter.filter;\n        }), 'm'),\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          rest: Prism.languages[filter.language]\n        }\n      };\n    }\n  }\n  Prism.languages.insertBefore('pug', 'filter', all_filters);\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-pug.js"],"names":["Prism","languages","pug","pattern","lookbehind","inside","javascript","alias","markup","rest","filter_pattern","source","filters","filter","language","all_filters","i","l","length","RegExp","replace","insertBefore"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\t// TODO:\n\t// - Add CSS highlighting inside <style> tags\n\t// - Add support for multi-line code blocks\n\t// - Add support for interpolation #{} and !{}\n\t// - Add support for tag interpolation #[]\n\t// - Add explicit support for plain text using |\n\t// - Add support for markup embedded in plain text\n\n\tPrism.languages.pug = {\n\n\t\t// Multiline stuff should appear before the rest\n\n\t\t// This handles both single-line and multi-line comments\n\t\t'comment': {\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// All the tag-related part is in lookbehind\n\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t'multiline-script': {\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'multiline-plain-text': {\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'markup': {\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.markup\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// This handle all conditional and loop keywords\n\t\t'flow-control': {\n\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'each': {\n\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'branch': {\n\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'mixin': [\n\t\t\t// Declaration\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t\t'punctuation': /[(),.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Usage\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'script': {\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\n\t\t'plain-text': {\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\t\tinside: Prism.languages.javascript\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: Prism.languages.javascript\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/,\n\t\t\t\t'attr-id': /#[\\w\\-]+/,\n\t\t\t\t'attr-class': /\\.[\\w\\-]+/\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[.\\-!=|]+/\n\t};\n\n\tvar filter_pattern = /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source;\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t{ filter: 'atpl', language: 'twig' },\n\t\t{ filter: 'coffee', language: 'coffeescript' },\n\t\t'ejs',\n\t\t'handlebars',\n\t\t'less',\n\t\t'livescript',\n\t\t'markdown',\n\t\t{ filter: 'sass', language: 'scss' },\n\t\t'stylus'\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('<filter_name>', function () { return filter.filter; }), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('pug', 'filter', all_filters);\n\n}(Prism));\n"]}}