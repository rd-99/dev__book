{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[116],{293:function(e,r){!function(e){var r=/\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source,n=/(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g,(function(){return r})),o=/\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source,t=/--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g,(function(){return o})),i={pattern:RegExp(o),greedy:!0},s={pattern:/(^[ \\t]*)#.*/m,lookbehind:!0,greedy:!0};function c(e,r){return e=e.replace(/<OPT>/g,(function(){return t})).replace(/<SP>/g,(function(){return n})),RegExp(e,r)}e.languages.docker={instruction:{pattern:/(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,lookbehind:!0,greedy:!0,inside:{options:{pattern:c(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\"i\"),lookbehind:!0,greedy:!0,inside:{property:{pattern:/(^|\\s)--[\\w-]+/,lookbehind:!0},string:[i,{pattern:/(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,lookbehind:!0}],operator:/\\\\$/m,punctuation:/=/}},keyword:[{pattern:c(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source,\"i\"),lookbehind:!0,greedy:!0},{pattern:c(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source,\"i\"),lookbehind:!0,greedy:!0},{pattern:c(/(^ONBUILD<SP>)\\w+/.source,\"i\"),lookbehind:!0,greedy:!0},{pattern:/^\\w+/,greedy:!0}],comment:s,string:i,variable:/\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,operator:/\\\\$/m}},comment:s},e.languages.dockerfile=e.languages.docker}(Prism)}}]);","name":"static/js/116.3f66f88a.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","spaceAfterBackSlash","source","space","replace","string","option","stringRule","pattern","RegExp","greedy","commentRule","lookbehind","re","flags","languages","docker","instruction","inside","options","property","operator","punctuation","keyword","comment","variable","dockerfile"],"sources":["static/js/116.3f66f88a.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAIT,IAAIC,EAAsB,sDAAsDC,OAE5EC,EAAQ,0CAA0CD,OAAOE,QAAQ,YAAY,WAC/E,OAAOH,CACT,IACII,EAAS,0EAA0EH,OACnFI,EAAS,8CAA8CJ,OAAOE,QAAQ,UAAU,WAClF,OAAOC,CACT,IACIE,EAAa,CACfC,QAASC,OAAOJ,GAChBK,QAAQ,GAENC,EAAc,CAChBH,QAAS,gBACTI,YAAY,EACZF,QAAQ,GAQV,SAASG,EAAGX,EAAQY,GAMlB,OALAZ,EAASA,EAAOE,QAAQ,UAAU,WAChC,OAAOE,CACT,IAAGF,QAAQ,SAAS,WAClB,OAAOD,CACT,IACOM,OAAOP,EAAQY,EACxB,CACAd,EAAMe,UAAUC,OAAS,CACvBC,YAAe,CACbT,QAAS,kNACTI,YAAY,EACZF,QAAQ,EACRQ,OAAQ,CACNC,QAAW,CACTX,QAASK,EAAG,gDAAgDX,OAAQ,KACpEU,YAAY,EACZF,QAAQ,EACRQ,OAAQ,CACNE,SAAY,CACVZ,QAAS,iBACTI,YAAY,GAEdP,OAAU,CAACE,EAAY,CACrBC,QAAS,8BACTI,YAAY,IAEdS,SAAY,OACZC,YAAe,MAGnBC,QAAW,CAAC,CAEVf,QAASK,EAAG,iEAAiEX,OAAQ,KACrFU,YAAY,EACZF,QAAQ,GACP,CAEDF,QAASK,EAAG,iEAAiEX,OAAQ,KACrFU,YAAY,EACZF,QAAQ,GACP,CAEDF,QAASK,EAAG,oBAAoBX,OAAQ,KACxCU,YAAY,EACZF,QAAQ,GACP,CACDF,QAAS,OACTE,QAAQ,IAEVc,QAAWb,EACXN,OAAUE,EACVkB,SAAY,2BACZJ,SAAY,SAGhBG,QAAWb,GAEbX,EAAMe,UAAUW,WAAa1B,EAAMe,UAAUC,MAC9C,CAvFD,CAuFGhB,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[116],{\n\n/***/ 293:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n  // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n\n  var spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\n  // At least one space, comment, or line break\n  var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function () {\n    return spaceAfterBackSlash;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n  var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function () {\n    return string;\n  });\n  var stringRule = {\n    pattern: RegExp(string),\n    greedy: true\n  };\n  var commentRule = {\n    pattern: /(^[ \\t]*)#.*/m,\n    lookbehind: true,\n    greedy: true\n  };\n\n  /**\n   * @param {string} source\n   * @param {string} flags\n   * @returns {RegExp}\n   */\n  function re(source, flags) {\n    source = source.replace(/<OPT>/g, function () {\n      return option;\n    }).replace(/<SP>/g, function () {\n      return space;\n    });\n    return RegExp(source, flags);\n  }\n  Prism.languages.docker = {\n    'instruction': {\n      pattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'options': {\n          pattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, 'i'),\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            'property': {\n              pattern: /(^|\\s)--[\\w-]+/,\n              lookbehind: true\n            },\n            'string': [stringRule, {\n              pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n              lookbehind: true\n            }],\n            'operator': /\\\\$/m,\n            'punctuation': /=/\n          }\n        },\n        'keyword': [{\n          // https://docs.docker.com/engine/reference/builder/#healthcheck\n          pattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, 'i'),\n          lookbehind: true,\n          greedy: true\n        }, {\n          // https://docs.docker.com/engine/reference/builder/#from\n          pattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, 'i'),\n          lookbehind: true,\n          greedy: true\n        }, {\n          // https://docs.docker.com/engine/reference/builder/#onbuild\n          pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n          lookbehind: true,\n          greedy: true\n        }, {\n          pattern: /^\\w+/,\n          greedy: true\n        }],\n        'comment': commentRule,\n        'string': stringRule,\n        'variable': /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n        'operator': /\\\\$/m\n      }\n    },\n    'comment': commentRule\n  };\n  Prism.languages.dockerfile = Prism.languages.docker;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-docker.js"],"names":["Prism","spaceAfterBackSlash","source","space","replace","string","option","stringRule","pattern","RegExp","greedy","commentRule","lookbehind","re","flags","languages","docker","inside","dockerfile"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EAEjB;EACA;;EAEA,IAAIC,mBAAmB,GAAG,qDAAqD,CAACC,MAAM;EACtF;EACA,IAAIC,KAAK,GAAG,yCAAyC,CAACD,MAAM,CAC1DE,OAAO,CAAC,UAAU,EAAE,YAAY;IAAE,OAAOH,mBAAmB;EAAE,CAAC,CAAC;EAElE,IAAII,MAAM,GAAG,yEAAyE,CAACH,MAAM;EAC7F,IAAII,MAAM,GAAG,6CAA6C,CAACJ,MAAM,CAACE,OAAO,CAAC,QAAQ,EAAE,YAAY;IAAE,OAAOC,MAAM;EAAE,CAAC,CAAC;EAEnH,IAAIE,UAAU,GAAG;IAChBC,OAAO,EAAEC,MAAM,CAACJ,MAAM,CAAC;IACvBK,MAAM,EAAE;EACT,CAAC;EACD,IAAIC,WAAW,GAAG;IACjBH,OAAO,EAAE,eAAe;IACxBI,UAAU,EAAE,IAAI;IAChBF,MAAM,EAAE;EACT,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC,SAASG,EAAEA,CAACX,MAAM,EAAEY,KAAK,EAAE;IAC1BZ,MAAM,GAAGA,MAAM,CACbE,OAAO,CAAC,QAAQ,EAAE,YAAY;MAAE,OAAOE,MAAM;IAAE,CAAC,CAAC,CACjDF,OAAO,CAAC,OAAO,EAAE,YAAY;MAAE,OAAOD,KAAK;IAAE,CAAC,CAAC;IAEjD,OAAOM,MAAM,CAACP,MAAM,EAAEY,KAAK,CAAC;EAC7B;EAEAd,KAAK,CAACe,SAAS,CAACC,MAAM,GAAG;IACxB,aAAa,EAAE;MACdR,OAAO,EAAE,iNAAiN;MAC1NI,UAAU,EAAE,IAAI;MAChBF,MAAM,EAAE,IAAI;MACZO,MAAM,EAAE;QACP,SAAS,EAAE;UACVT,OAAO,EAAEK,EAAE,CAAC,+CAA+C,CAACX,MAAM,EAAE,GAAG,CAAC;UACxEU,UAAU,EAAE,IAAI;UAChBF,MAAM,EAAE,IAAI;UACZO,MAAM,EAAE;YACP,UAAU,EAAE;cACXT,OAAO,EAAE,gBAAgB;cACzBI,UAAU,EAAE;YACb,CAAC;YACD,QAAQ,EAAE,CACTL,UAAU,EACV;cACCC,OAAO,EAAE,6BAA6B;cACtCI,UAAU,EAAE;YACb,CAAC,CACD;YACD,UAAU,EAAE,MAAM;YAClB,aAAa,EAAE;UAChB;QACD,CAAC;QACD,SAAS,EAAE,CACV;UACC;UACAJ,OAAO,EAAEK,EAAE,CAAC,gEAAgE,CAACX,MAAM,EAAE,GAAG,CAAC;UACzFU,UAAU,EAAE,IAAI;UAChBF,MAAM,EAAE;QACT,CAAC,EACD;UACC;UACAF,OAAO,EAAEK,EAAE,CAAC,gEAAgE,CAACX,MAAM,EAAE,GAAG,CAAC;UACzFU,UAAU,EAAE,IAAI;UAChBF,MAAM,EAAE;QACT,CAAC,EACD;UACC;UACAF,OAAO,EAAEK,EAAE,CAAC,mBAAmB,CAACX,MAAM,EAAE,GAAG,CAAC;UAC5CU,UAAU,EAAE,IAAI;UAChBF,MAAM,EAAE;QACT,CAAC,EACD;UACCF,OAAO,EAAE,MAAM;UACfE,MAAM,EAAE;QACT,CAAC,CACD;QACD,SAAS,EAAEC,WAAW;QACtB,QAAQ,EAAEJ,UAAU;QACpB,UAAU,EAAE,0BAA0B;QACtC,UAAU,EAAE;MACb;IACD,CAAC;IACD,SAAS,EAAEI;EACZ,CAAC;EAEDX,KAAK,CAACe,SAAS,CAACG,UAAU,GAAGlB,KAAK,CAACe,SAAS,CAACC,MAAM;AAEpD,CAAC,EAAChB,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\n\t// Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n\t// that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n\n\tvar spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\n\t// At least one space, comment, or line break\n\tvar space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source\n\t\t.replace(/<SP_BS>/g, function () { return spaceAfterBackSlash; });\n\n\tvar string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n\tvar option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function () { return string; });\n\n\tvar stringRule = {\n\t\tpattern: RegExp(string),\n\t\tgreedy: true\n\t};\n\tvar commentRule = {\n\t\tpattern: /(^[ \\t]*)#.*/m,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t};\n\n\t/**\n\t * @param {string} source\n\t * @param {string} flags\n\t * @returns {RegExp}\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<OPT>/g, function () { return option; })\n\t\t\t.replace(/<SP>/g, function () { return space; });\n\n\t\treturn RegExp(source, flags);\n\t}\n\n\tPrism.languages.docker = {\n\t\t'instruction': {\n\t\t\tpattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'options': {\n\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, 'i'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'property': {\n\t\t\t\t\t\t\tpattern: /(^|\\s)--[\\w-]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'string': [\n\t\t\t\t\t\t\tstringRule,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'operator': /\\\\$/m,\n\t\t\t\t\t\t'punctuation': /=/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'keyword': [\n\t\t\t\t\t{\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#healthcheck\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#from\n\t\t\t\t\t\tpattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t// https://docs.docker.com/engine/reference/builder/#onbuild\n\t\t\t\t\t\tpattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /^\\w+/,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'comment': commentRule,\n\t\t\t\t'string': stringRule,\n\t\t\t\t'variable': /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n\t\t\t\t'operator': /\\\\$/m\n\t\t\t}\n\t\t},\n\t\t'comment': commentRule\n\t};\n\n\tPrism.languages.dockerfile = Prism.languages.docker;\n\n}(Prism));\n"]}}