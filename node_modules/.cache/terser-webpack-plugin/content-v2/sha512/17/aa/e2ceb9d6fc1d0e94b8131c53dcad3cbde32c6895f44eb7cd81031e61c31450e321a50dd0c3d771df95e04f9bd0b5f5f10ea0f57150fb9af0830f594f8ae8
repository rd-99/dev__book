{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[289],{466:function(e,t){Prism.languages.monkey={string:/\"[^\"\\r\\n]*\"/,comment:[{pattern:/^#Rem\\s[\\s\\S]*?^#End/im,greedy:!0},{pattern:/'.+/,greedy:!0}],preprocessor:{pattern:/(^[ \\t]*)#.+/m,lookbehind:!0,alias:\"comment\"},function:/\\b\\w+(?=\\()/,\"type-char\":{pattern:/(\\w)[?%#$]/,lookbehind:!0,alias:\"variable\"},number:{pattern:/((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,lookbehind:!0},keyword:/\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,operator:/\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,punctuation:/[.,:;()\\[\\]]/}}}]);","name":"static/js/289.f584b9bc.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","monkey","string","comment","pattern","greedy","preprocessor","lookbehind","alias","function","number","keyword","operator","punctuation"],"sources":["static/js/289.f584b9bc.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,OAAS,CACvBC,OAAQ,cACRC,QAAS,CAAC,CACRC,QAAS,yBACTC,QAAQ,GACP,CACDD,QAAS,MACTC,QAAQ,IAEVC,aAAc,CACZF,QAAS,gBACTG,YAAY,EACZC,MAAO,WAETC,SAAU,cACV,YAAa,CACXL,QAAS,aACTG,YAAY,EACZC,MAAO,YAETE,OAAQ,CACNN,QAAS,qEACTG,YAAY,GAEdI,QAAS,uXACTC,SAAU,gFACVC,YAAa,eAGR"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[289],{\n\n/***/ 466:\n/***/ (function(module, exports) {\n\nPrism.languages.monkey = {\n  string: /\"[^\"\\r\\n]*\"/,\n  comment: [{\n    pattern: /^#Rem\\s[\\s\\S]*?^#End/im,\n    greedy: !0\n  }, {\n    pattern: /'.+/,\n    greedy: !0\n  }],\n  preprocessor: {\n    pattern: /(^[ \\t]*)#.+/m,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  function: /\\b\\w+(?=\\()/,\n  \"type-char\": {\n    pattern: /(\\w)[?%#$]/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: {\n    pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n  operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n  punctuation: /[.,:;()\\[\\]]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-monkey.min.js"],"names":["Prism","languages","monkey","string","comment","pattern","greedy","preprocessor","lookbehind","alias","function","number","keyword","operator","punctuation"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAC;EAACC,MAAM,EAAC,aAAa;EAACC,OAAO,EAAC,CAAC;IAACC,OAAO,EAAC,wBAAwB;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC,EAAC;IAACD,OAAO,EAAC,KAAK;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC,CAAC;EAACC,YAAY,EAAC;IAACF,OAAO,EAAC,eAAe;IAACG,UAAU,EAAC,CAAC,CAAC;IAACC,KAAK,EAAC;EAAS,CAAC;EAACC,QAAQ,EAAC,aAAa;EAAC,WAAW,EAAC;IAACL,OAAO,EAAC,YAAY;IAACG,UAAU,EAAC,CAAC,CAAC;IAACC,KAAK,EAAC;EAAU,CAAC;EAACE,MAAM,EAAC;IAACN,OAAO,EAAC,oEAAoE;IAACG,UAAU,EAAC,CAAC;EAAC,CAAC;EAACI,OAAO,EAAC,sXAAsX;EAACC,QAAQ,EAAC,+EAA+E;EAACC,WAAW,EAAC;AAAc,CAAC,C","file":"x","sourcesContent":["Prism.languages.monkey={string:/\"[^\"\\r\\n]*\"/,comment:[{pattern:/^#Rem\\s[\\s\\S]*?^#End/im,greedy:!0},{pattern:/'.+/,greedy:!0}],preprocessor:{pattern:/(^[ \\t]*)#.+/m,lookbehind:!0,alias:\"comment\"},function:/\\b\\w+(?=\\()/,\"type-char\":{pattern:/(\\w)[?%#$]/,lookbehind:!0,alias:\"variable\"},number:{pattern:/((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,lookbehind:!0},keyword:/\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,operator:/\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,punctuation:/[.,:;()\\[\\]]/};"]}}