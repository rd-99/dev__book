{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[402],{579:function(e,n){!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:[/#.*/,{pattern:/^=begin\\s[\\s\\S]*?^=end/m,greedy:!0}],\"class-name\":{pattern:/(\\b(?:class)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/});var n={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"tag\"},rest:e.languages.ruby}};delete e.languages.ruby.function,e.languages.insertBefore(\"ruby\",\"keyword\",{regex:[{pattern:RegExp(/%r/.source+\"(?:\"+[/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,/\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,/\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,/<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source].join(\"|\")+\")\"+/[egimnosux]{0,6}/.source),greedy:!0,inside:{interpolation:n}},{pattern:/(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation:n}}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,lookbehind:!0},\"method-definition\":{pattern:/(\\bdef\\s+)[\\w.]+/,lookbehind:!0,inside:{function:/\\w+$/,rest:e.languages.ruby}}}),e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z]\\w*(?:[?!]|\\b)/}),e.languages.ruby.string=[{pattern:RegExp(/%[qQiIwWxs]?/.source+\"(?:\"+[/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,/\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,/\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,/<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source].join(\"|\")+\")\"),greedy:!0,inside:{interpolation:n}},{pattern:/(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,greedy:!0,inside:{interpolation:n}},{pattern:/<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\\w*|[a-z_]\\w*$/i,alias:\"symbol\",inside:{punctuation:/^<<[-~]?/}},interpolation:n}},{pattern:/<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\\w*'|[a-z_]\\w*$/i,alias:\"symbol\",inside:{punctuation:/^<<[-~]?'|'$/}}}}],e.languages.rb=e.languages.ruby}(Prism)}}]);","name":"static/js/402.2aaebbf5.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","ruby","extend","comment","pattern","greedy","lookbehind","inside","punctuation","keyword","interpolation","delimiter","alias","rest","function","insertBefore","regex","RegExp","source","join","variable","symbol","builtin","constant","string","rb"],"sources":["static/js/402.2aaebbf5.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAQxB,SAAWC,GACTA,EAAMC,UAAUC,KAAOF,EAAMC,UAAUE,OAAO,QAAS,CACrDC,QAAW,CAAC,MAAO,CACjBC,QAAS,0BACTC,QAAQ,IAEV,aAAc,CACZD,QAAS,yCACTE,YAAY,EACZC,OAAQ,CACNC,YAAe,UAGnBC,QAAW,qSAEb,IAAIC,EAAgB,CAClBN,QAAS,aACTG,OAAQ,CACNI,UAAa,CACXP,QAAS,WACTQ,MAAO,OAETC,KAAMd,EAAMC,UAAUC,cAGnBF,EAAMC,UAAUC,KAAKa,SAC5Bf,EAAMC,UAAUe,aAAa,OAAQ,UAAW,CAC9CC,MAAS,CAAC,CACRZ,QAASa,OAAO,KAAKC,OAAS,MAAQ,CAAC,mDAAmDA,OAAQ,4BAA4BA,OAE9H,6CAA6CA,OAAQ,8BAA8BA,OAAQ,0BAA0BA,QAAQC,KAAK,KAAO,IAAM,mBAAmBD,QAClKb,QAAQ,EACRE,OAAQ,CACNG,cAAiBA,IAElB,CACDN,QAAS,iGACTE,YAAY,EACZD,QAAQ,EACRE,OAAQ,CACNG,cAAiBA,KAGrBU,SAAY,+BACZC,OAAU,CACRjB,QAAS,mCACTE,YAAY,GAEd,oBAAqB,CACnBF,QAAS,mBACTE,YAAY,EACZC,OAAQ,CACNO,SAAY,OACZD,KAAMd,EAAMC,UAAUC,SAI5BF,EAAMC,UAAUe,aAAa,OAAQ,SAAU,CAC7CO,QAAW,+OACXC,SAAY,0BAEdxB,EAAMC,UAAUC,KAAKuB,OAAS,CAAC,CAC7BpB,QAASa,OAAO,eAAeC,OAAS,MAAQ,CAAC,mDAAmDA,OAAQ,4BAA4BA,OAExI,6CAA6CA,OAAQ,8BAA8BA,OAAQ,0BAA0BA,QAAQC,KAAK,KAAO,KACzId,QAAQ,EACRE,OAAQ,CACNG,cAAiBA,IAElB,CACDN,QAAS,oEACTC,QAAQ,EACRE,OAAQ,CACNG,cAAiBA,IAElB,CACDN,QAAS,kDACTQ,MAAO,iBACPP,QAAQ,EACRE,OAAQ,CACNI,UAAa,CACXP,QAAS,gCACTQ,MAAO,SACPL,OAAQ,CACNC,YAAe,aAGnBE,cAAiBA,IAElB,CACDN,QAAS,oDACTQ,MAAO,iBACPP,QAAQ,EACRE,OAAQ,CACNI,UAAa,CACXP,QAAS,kCACTQ,MAAO,SACPL,OAAQ,CACNC,YAAe,oBAKvBT,EAAMC,UAAUyB,GAAK1B,EAAMC,UAAUC,IACtC,CAxGD,CAwGGF,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[402],{\n\n/***/ 579:\n/***/ (function(module, exports) {\n\n/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n *     constant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': [/#.*/, {\n      pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: true\n    }],\n    'class-name': {\n      pattern: /(\\b(?:class)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.\\\\]/\n      }\n    },\n    'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/\n  });\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'tag'\n      },\n      rest: Prism.languages.ruby\n    }\n  };\n  delete Prism.languages.ruby.function;\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex': [{\n      pattern: RegExp(/%r/.source + '(?:' + [/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n      // Here we need to specifically allow interpolation\n      /\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source].join('|') + ')' + /[egimnosux]{0,6}/.source),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: true\n    },\n    'method-definition': {\n      pattern: /(\\bdef\\s+)[\\w.]+/,\n      lookbehind: true,\n      inside: {\n        'function': /\\w+$/,\n        rest: Prism.languages.ruby\n      }\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  });\n  Prism.languages.ruby.string = [{\n    pattern: RegExp(/%[qQiIwWxs]?/.source + '(?:' + [/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n    // Here we need to specifically allow interpolation\n    /\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source].join('|') + ')'),\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<[-~]?[a-z_]\\w*|[a-z_]\\w*$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<[-~]?/\n        }\n      },\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<[-~]?'[a-z_]\\w*'|[a-z_]\\w*$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<[-~]?'|'$/\n        }\n      }\n    }\n  }];\n  Prism.languages.rb = Prism.languages.ruby;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-ruby.js"],"names":["Prism","languages","ruby","extend","pattern","greedy","lookbehind","inside","interpolation","alias","rest","function","insertBefore","RegExp","source","join","string","rb"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACC,WAAUA,KAAK,EAAE;EACjBA,KAAK,CAACC,SAAS,CAACC,IAAI,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;IACtD,SAAS,EAAE,CACV,KAAK,EACL;MACCC,OAAO,EAAE,yBAAyB;MAClCC,MAAM,EAAE;IACT,CAAC,CACD;IACD,YAAY,EAAE;MACbD,OAAO,EAAE,wCAAwC;MACjDE,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,SAAS,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIC,aAAa,GAAG;IACnBJ,OAAO,EAAE,YAAY;IACrBG,MAAM,EAAE;MACP,WAAW,EAAE;QACZH,OAAO,EAAE,UAAU;QACnBK,KAAK,EAAE;MACR,CAAC;MACDC,IAAI,EAAEV,KAAK,CAACC,SAAS,CAACC;IACvB;EACD,CAAC;EAED,OAAOF,KAAK,CAACC,SAAS,CAACC,IAAI,CAACS,QAAQ;EAEpCX,KAAK,CAACC,SAAS,CAACW,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE;IAC/C,OAAO,EAAE,CACR;MACCR,OAAO,EAAES,MAAM,CAAC,IAAI,CAACC,MAAM,GAAG,KAAK,GAAG,CACrC,kDAAkD,CAACA,MAAM,EACzD,2BAA2B,CAACA,MAAM;MAClC;MACA,4CAA4C,CAACA,MAAM,EACnD,6BAA6B,CAACA,MAAM,EACpC,yBAAyB,CAACA,MAAM,CAChC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAACD,MAAM,CAAC;MAC9CT,MAAM,EAAE,IAAI;MACZE,MAAM,EAAE;QACP,eAAe,EAAEC;MAClB;IACD,CAAC,EACD;MACCJ,OAAO,EAAE,gGAAgG;MACzGE,UAAU,EAAE,IAAI;MAChBD,MAAM,EAAE,IAAI;MACZE,MAAM,EAAE;QACP,eAAe,EAAEC;MAClB;IACD,CAAC,CACD;IACD,UAAU,EAAE,8BAA8B;IAC1C,QAAQ,EAAE;MACTJ,OAAO,EAAE,kCAAkC;MAC3CE,UAAU,EAAE;IACb,CAAC;IACD,mBAAmB,EAAE;MACpBF,OAAO,EAAE,kBAAkB;MAC3BE,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACP,UAAU,EAAE,MAAM;QAClBG,IAAI,EAAEV,KAAK,CAACC,SAAS,CAACC;MACvB;IACD;EACD,CAAC,CAAC;EAEFF,KAAK,CAACC,SAAS,CAACW,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE;IAC9C,SAAS,EAAE,8OAA8O;IACzP,UAAU,EAAE;EACb,CAAC,CAAC;EAEFZ,KAAK,CAACC,SAAS,CAACC,IAAI,CAACc,MAAM,GAAG,CAC7B;IACCZ,OAAO,EAAES,MAAM,CAAC,cAAc,CAACC,MAAM,GAAG,KAAK,GAAG,CAC/C,kDAAkD,CAACA,MAAM,EACzD,2BAA2B,CAACA,MAAM;IAClC;IACA,4CAA4C,CAACA,MAAM,EACnD,6BAA6B,CAACA,MAAM,EACpC,yBAAyB,CAACA,MAAM,CAChC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAClBV,MAAM,EAAE,IAAI;IACZE,MAAM,EAAE;MACP,eAAe,EAAEC;IAClB;EACD,CAAC,EACD;IACCJ,OAAO,EAAE,mEAAmE;IAC5EC,MAAM,EAAE,IAAI;IACZE,MAAM,EAAE;MACP,eAAe,EAAEC;IAClB;EACD,CAAC,EACD;IACCJ,OAAO,EAAE,iDAAiD;IAC1DK,KAAK,EAAE,gBAAgB;IACvBJ,MAAM,EAAE,IAAI;IACZE,MAAM,EAAE;MACP,WAAW,EAAE;QACZH,OAAO,EAAE,+BAA+B;QACxCK,KAAK,EAAE,QAAQ;QACfF,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD,CAAC;MACD,eAAe,EAAEC;IAClB;EACD,CAAC,EACD;IACCJ,OAAO,EAAE,mDAAmD;IAC5DK,KAAK,EAAE,gBAAgB;IACvBJ,MAAM,EAAE,IAAI;IACZE,MAAM,EAAE;MACP,WAAW,EAAE;QACZH,OAAO,EAAE,iCAAiC;QAC1CK,KAAK,EAAE,QAAQ;QACfF,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD;IACD;EACD,CAAC,CACD;EAEDP,KAAK,CAACC,SAAS,CAACgB,EAAE,GAAGjB,KAAK,CAACC,SAAS,CAACC,IAAI;AAC1C,CAAC,EAACF,KAAK,CAAC,C","file":"x","sourcesContent":["/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n *     constant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n\tPrism.languages.ruby = Prism.languages.extend('clike', {\n\t\t'comment': [\n\t\t\t/#.*/,\n\t\t\t{\n\t\t\t\tpattern: /^=begin\\s[\\s\\S]*?^=end/m,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[.\\\\]/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/\n\t});\n\n\tvar interpolation = {\n\t\tpattern: /#\\{[^}]+\\}/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\trest: Prism.languages.ruby\n\t\t}\n\t};\n\n\tdelete Prism.languages.ruby.function;\n\n\tPrism.languages.insertBefore('ruby', 'keyword', {\n\t\t'regex': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/%r/.source + '(?:' + [\n\t\t\t\t\t/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n\t\t\t\t\t/\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n\t\t\t\t\t// Here we need to specifically allow interpolation\n\t\t\t\t\t/\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n\t\t\t\t\t/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n\t\t\t\t\t/<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n\t\t\t\t].join('|') + ')' + /[egimnosux]{0,6}/.source),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n\t\t'symbol': {\n\t\t\tpattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'method-definition': {\n\t\t\tpattern: /(\\bdef\\s+)[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'function': /\\w+$/,\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('ruby', 'number', {\n\t\t'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n\t\t'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n\t});\n\n\tPrism.languages.ruby.string = [\n\t\t{\n\t\t\tpattern: RegExp(/%[qQiIwWxs]?/.source + '(?:' + [\n\t\t\t\t/([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n\t\t\t\t/\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n\t\t\t\t// Here we need to specifically allow interpolation\n\t\t\t\t/\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n\t\t\t\t/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n\t\t\t\t/<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n\t\t\t].join('|') + ')'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n\t\t\talias: 'heredoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<[-~]?[a-z_]\\w*|[a-z_]\\w*$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<[-~]?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n\t\t\talias: 'heredoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<[-~]?'[a-z_]\\w*'|[a-z_]\\w*$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<[-~]?'|'$/,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t];\n\n\tPrism.languages.rb = Prism.languages.ruby;\n}(Prism));\n"]}}