{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[472],{649:function(n,E){!function(n){var E=/\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;n.languages.typoscript={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\"'])#.*/,lookbehind:!0,greedy:!0}],function:[{pattern:/<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,inside:{string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,inside:{keyword:E}},keyword:{pattern:/INCLUDE_TYPOSCRIPT/}}},{pattern:/@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,inside:{string:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/}}],string:{pattern:/^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,lookbehind:!0,inside:{function:/\\{\\$.*\\}/,keyword:E,number:/^[0-9]+$/,punctuation:/[,|:]/}},keyword:E,number:{pattern:/\\b[0-9]+\\s*[.{=]/,inside:{operator:/[.{=]/}},tag:{pattern:/\\.?[-\\w\\\\]+\\.?/,inside:{punctuation:/\\./}},punctuation:/[{}[\\];(),.:|]/,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/},n.languages.tsconfig=n.languages.typoscript}(Prism)}}]);","name":"static/js/472.4e2ab324.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","keywords","languages","typoscript","comment","pattern","lookbehind","greedy","function","inside","string","keyword","number","punctuation","operator","tag","tsconfig"],"sources":["static/js/472.4e2ab324.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACT,IAAIC,EAAW,gcACfD,EAAME,UAAUC,WAAa,CAC3BC,QAAW,CAAC,CAEVC,QAAS,kCACTC,YAAY,GACX,CAGDD,QAAS,2CACTC,YAAY,EACZC,QAAQ,GACP,CAEDF,QAAS,eACTC,YAAY,EACZC,QAAQ,IAEVC,SAAY,CAAC,CAEXH,QAAS,sEACTI,OAAQ,CACNC,OAAU,CACRL,QAAS,0BACTI,OAAQ,CACNE,QAAWV,IAGfU,QAAW,CACTN,QAAS,wBAGZ,CAEDA,QAAS,wCACTI,OAAQ,CACNC,OAAU,6BAGdA,OAAU,CACRL,QAAS,+BACTC,YAAY,EACZG,OAAQ,CACND,SAAY,WAEZG,QAAWV,EACXW,OAAU,WACVC,YAAe,UAGnBF,QAAWV,EACXW,OAAU,CAERP,QAAS,mBACTI,OAAQ,CACNK,SAAY,UAGhBC,IAAO,CACLV,QAAS,iBACTI,OAAQ,CACNI,YAAe,OAGnBA,YAAe,iBACfC,SAAY,gDAEdd,EAAME,UAAUc,SAAWhB,EAAME,UAAUC,UAC5C,CArED,CAqEGH,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[472],{\n\n/***/ 649:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n  Prism.languages.typoscript = {\n    'comment': [{\n      // multiline comments /* */\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      // double-slash comments - ignored when backslashes or colon is found in front\n      // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n      pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // hash comments - ignored when leading quote is found for hex colors in strings\n      pattern: /(^|[^\"'])#.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'function': [{\n      // old include style\n      pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n      inside: {\n        'string': {\n          pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n          inside: {\n            'keyword': keywords\n          }\n        },\n        'keyword': {\n          pattern: /INCLUDE_TYPOSCRIPT/\n        }\n      }\n    }, {\n      // new include style\n      pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n      inside: {\n        'string': /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n      }\n    }],\n    'string': {\n      pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n      lookbehind: true,\n      inside: {\n        'function': /\\{\\$.*\\}/,\n        // constants include\n        'keyword': keywords,\n        'number': /^[0-9]+$/,\n        'punctuation': /[,|:]/\n      }\n    },\n    'keyword': keywords,\n    'number': {\n      // special highlighting for indexes of arrays in tags\n      pattern: /\\b[0-9]+\\s*[.{=]/,\n      inside: {\n        'operator': /[.{=]/\n      }\n    },\n    'tag': {\n      pattern: /\\.?[-\\w\\\\]+\\.?/,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'punctuation': /[{}[\\];(),.:|]/,\n    'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n  };\n  Prism.languages.tsconfig = Prism.languages.typoscript;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-typoscript.js"],"names":["Prism","keywords","languages","typoscript","pattern","lookbehind","greedy","inside","tsconfig"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EAEjB,IAAIC,QAAQ,GAAG,+bAA+b;EAE9cD,KAAK,CAACE,SAAS,CAACC,UAAU,GAAG;IAC5B,SAAS,EAAE,CACV;MACC;MACAC,OAAO,EAAE,iCAAiC;MAC1CC,UAAU,EAAE;IACb,CAAC,EACD;MACC;MACA;MACAD,OAAO,EAAE,0CAA0C;MACnDC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACT,CAAC,EACD;MACC;MACAF,OAAO,EAAE,cAAc;MACvBC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACT,CAAC,CACD;IACD,UAAU,EAAE,CACX;MACC;MACAF,OAAO,EAAE,qEAAqE;MAC9EG,MAAM,EAAE;QACP,QAAQ,EAAE;UACTH,OAAO,EAAE,yBAAyB;UAClCG,MAAM,EAAE;YACP,SAAS,EAAEN;UACZ;QACD,CAAC;QACD,SAAS,EAAE;UACVG,OAAO,EAAE;QACV;MACD;IACD,CAAC,EACD;MACC;MACAA,OAAO,EAAE,uCAAuC;MAChDG,MAAM,EAAE;QACP,QAAQ,EAAE;MACX;IACD,CAAC,CACD;IACD,QAAQ,EAAE;MACTH,OAAO,EAAE,8BAA8B;MACvCC,UAAU,EAAE,IAAI;MAChBE,MAAM,EAAE;QACP,UAAU,EAAE,UAAU;QAAE;QACxB,SAAS,EAAEN,QAAQ;QACnB,QAAQ,EAAE,UAAU;QACpB,aAAa,EAAE;MAChB;IACD,CAAC;IACD,SAAS,EAAEA,QAAQ;IACnB,QAAQ,EAAE;MACT;MACAG,OAAO,EAAE,kBAAkB;MAC3BG,MAAM,EAAE;QACP,UAAU,EAAE;MACb;IACD,CAAC;IACD,KAAK,EAAE;MACNH,OAAO,EAAE,gBAAgB;MACzBG,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,aAAa,EAAE,gBAAgB;IAC/B,UAAU,EAAE;EACb,CAAC;EAEDP,KAAK,CAACE,SAAS,CAACM,QAAQ,GAAGR,KAAK,CAACE,SAAS,CAACC,UAAU;AAEtD,CAAC,EAACH,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n\n\tPrism.languages.typoscript = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\t// multiline comments /* */\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// double-slash comments - ignored when backslashes or colon is found in front\n\t\t\t\t// also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n\t\t\t\tpattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// hash comments - ignored when leading quote is found for hex colors in strings\n\t\t\t\tpattern: /(^|[^\"'])#.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'function': [\n\t\t\t{\n\t\t\t\t// old include style\n\t\t\t\tpattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n\t\t\t\tinside: {\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'keyword': keywords,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t'keyword': {\n\t\t\t\t\t\tpattern: /INCLUDE_TYPOSCRIPT/,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t// new include style\n\t\t\t\tpattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n\t\t\t\tinside: {\n\t\t\t\t\t'string': /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n\t\t\t\t},\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'function': /\\{\\$.*\\}/, // constants include\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'number': /^[0-9]+$/,\n\t\t\t\t'punctuation': /[,|:]/,\n\t\t\t}\n\t\t},\n\t\t'keyword': keywords,\n\t\t'number': {\n\t\t\t// special highlighting for indexes of arrays in tags\n\t\t\tpattern: /\\b[0-9]+\\s*[.{=]/,\n\t\t\tinside: {\n\t\t\t\t'operator': /[.{=]/,\n\t\t\t}\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /\\.?[-\\w\\\\]+\\.?/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t},\n\t\t'punctuation': /[{}[\\];(),.:|]/,\n\t\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t};\n\n\tPrism.languages.tsconfig = Prism.languages.typoscript;\n\n}(Prism));\n"]}}