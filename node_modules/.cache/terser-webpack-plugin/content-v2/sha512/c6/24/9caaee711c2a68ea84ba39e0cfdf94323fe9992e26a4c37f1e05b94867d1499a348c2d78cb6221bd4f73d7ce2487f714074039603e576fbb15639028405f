{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[190],{367:function(t,a){!function(t){t.languages.http={\"request-line\":{pattern:/^(?:GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH|PRI|SEARCH)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[0-9.]+/m,inside:{method:{pattern:/^[A-Z]+\\b/,alias:\"property\"},\"request-target\":{pattern:/^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,lookbehind:!0,alias:\"url\",inside:t.languages.uri},\"http-version\":{pattern:/^(\\s)HTTP\\/[0-9.]+/,lookbehind:!0,alias:\"property\"}}},\"response-status\":{pattern:/^HTTP\\/[0-9.]+ \\d+ .+/m,inside:{\"http-version\":{pattern:/^HTTP\\/[0-9.]+/,alias:\"property\"},\"status-code\":{pattern:/^(\\s)\\d+(?=\\s)/,lookbehind:!0,alias:\"number\"},\"reason-phrase\":{pattern:/^(\\s).+/,lookbehind:!0,alias:\"string\"}}},\"header-name\":{pattern:/^[\\w-]+:(?=.)/m,alias:\"keyword\"}};var a,e=t.languages,n={\"application/javascript\":e.javascript,\"application/json\":e.json||e.javascript,\"application/xml\":e.xml,\"text/xml\":e.xml,\"text/html\":e.html,\"text/css\":e.css},s={\"application/json\":!0,\"application/xml\":!0};function i(t){var a=t.replace(/^[a-z]+\\//,\"\");return\"(?:\"+t+\"|\"+(\"\\\\w+/(?:[\\\\w.-]+\\\\+)+\"+a+\"(?![+\\\\w.-])\")+\")\"}for(var r in n)if(n[r]){a=a||{};var p=s[r]?i(r):r;a[r.replace(/\\//g,\"-\")]={pattern:RegExp(\"(content-type:\\\\s*\"+p+\"(?:(?:\\\\r\\\\n?|\\\\n).+)*)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*\",\"i\"),lookbehind:!0,inside:n[r]}}a&&t.languages.insertBefore(\"http\",\"header-name\",a)}(Prism)}}]);","name":"static/js/190.bb9cf15f.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","http","pattern","inside","method","alias","lookbehind","uri","options","langs","httpLanguages","javascript","json","xml","html","css","suffixTypes","getSuffixPattern","contentType","suffix","replace","RegExp","insertBefore"],"sources":["static/js/190.bb9cf15f.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACTA,EAAMC,UAAUC,KAAO,CACrB,eAAgB,CACdC,QAAS,8GACTC,OAAQ,CAENC,OAAU,CACRF,QAAS,YACTG,MAAO,YAGT,iBAAkB,CAChBH,QAAS,mCACTI,YAAY,EACZD,MAAO,MACPF,OAAQJ,EAAMC,UAAUO,KAG1B,eAAgB,CACdL,QAAS,qBACTI,YAAY,EACZD,MAAO,cAIb,kBAAmB,CACjBH,QAAS,yBACTC,OAAQ,CAEN,eAAgB,CACdD,QAAS,iBACTG,MAAO,YAGT,cAAe,CACbH,QAAS,iBACTI,YAAY,EACZD,MAAO,UAGT,gBAAiB,CACfH,QAAS,UACTI,YAAY,EACZD,MAAO,YAKb,cAAe,CACbH,QAAS,iBACTG,MAAO,YAKX,IA8BIG,EA9BAC,EAAQV,EAAMC,UACdU,EAAgB,CAClB,yBAA0BD,EAAME,WAChC,mBAAoBF,EAAMG,MAAQH,EAAME,WACxC,kBAAmBF,EAAMI,IACzB,WAAYJ,EAAMI,IAClB,YAAaJ,EAAMK,KACnB,WAAYL,EAAMM,KAIhBC,EAAc,CAChB,oBAAoB,EACpB,mBAAmB,GASrB,SAASC,EAAiBC,GACxB,IAAIC,EAASD,EAAYE,QAAQ,YAAa,IAE9C,MAAO,MAAQF,EAAc,KADT,wBAA0BC,EAAS,gBACJ,GACrD,CAKA,IAAK,IAAID,KAAeR,EACtB,GAAIA,EAAcQ,GAAc,CAC9BV,EAAUA,GAAW,CAAC,EACtB,IAAIN,EAAUc,EAAYE,GAAeD,EAAiBC,GAAeA,EACzEV,EAAQU,EAAYE,QAAQ,MAAO,MAAQ,CACzClB,QAASmB,OAAO,qBAAuBnB,EAAU,qDAAsD,KACvGI,YAAY,EACZH,OAAQO,EAAcQ,GAE1B,CAEEV,GACFT,EAAMC,UAAUsB,aAAa,OAAQ,cAAed,EAEvD,CApGD,CAoGGT,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[190],{\n\n/***/ 367:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  Prism.languages.http = {\n    'request-line': {\n      pattern: /^(?:GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH|PRI|SEARCH)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[0-9.]+/m,\n      inside: {\n        // HTTP Method\n        'method': {\n          pattern: /^[A-Z]+\\b/,\n          alias: 'property'\n        },\n        // Request Target e.g. http://example.com, /path/to/file\n        'request-target': {\n          pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n          lookbehind: true,\n          alias: 'url',\n          inside: Prism.languages.uri\n        },\n        // HTTP Version\n        'http-version': {\n          pattern: /^(\\s)HTTP\\/[0-9.]+/,\n          lookbehind: true,\n          alias: 'property'\n        }\n      }\n    },\n    'response-status': {\n      pattern: /^HTTP\\/[0-9.]+ \\d+ .+/m,\n      inside: {\n        // HTTP Version\n        'http-version': {\n          pattern: /^HTTP\\/[0-9.]+/,\n          alias: 'property'\n        },\n        // Status Code\n        'status-code': {\n          pattern: /^(\\s)\\d+(?=\\s)/,\n          lookbehind: true,\n          alias: 'number'\n        },\n        // Reason Phrase\n        'reason-phrase': {\n          pattern: /^(\\s).+/,\n          lookbehind: true,\n          alias: 'string'\n        }\n      }\n    },\n    // HTTP header name\n    'header-name': {\n      pattern: /^[\\w-]+:(?=.)/m,\n      alias: 'keyword'\n    }\n  };\n\n  // Create a mapping of Content-Type headers to language definitions\n  var langs = Prism.languages;\n  var httpLanguages = {\n    'application/javascript': langs.javascript,\n    'application/json': langs.json || langs.javascript,\n    'application/xml': langs.xml,\n    'text/xml': langs.xml,\n    'text/html': langs.html,\n    'text/css': langs.css\n  };\n\n  // Declare which types can also be suffixes\n  var suffixTypes = {\n    'application/json': true,\n    'application/xml': true\n  };\n\n  /**\n   * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n   *\n   * @param {string} contentType\n   * @returns {string}\n   */\n  function getSuffixPattern(contentType) {\n    var suffix = contentType.replace(/^[a-z]+\\//, '');\n    var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])';\n    return '(?:' + contentType + '|' + suffixPattern + ')';\n  }\n\n  // Insert each content type parser that has its associated language\n  // currently loaded.\n  var options;\n  for (var contentType in httpLanguages) {\n    if (httpLanguages[contentType]) {\n      options = options || {};\n      var pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n      options[contentType.replace(/\\//g, '-')] = {\n        pattern: RegExp('(content-type:\\\\s*' + pattern + '(?:(?:\\\\r\\\\n?|\\\\n).+)*)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*', 'i'),\n        lookbehind: true,\n        inside: httpLanguages[contentType]\n      };\n    }\n  }\n  if (options) {\n    Prism.languages.insertBefore('http', 'header-name', options);\n  }\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-http.js"],"names":["Prism","languages","http","pattern","inside","alias","lookbehind","uri","langs","httpLanguages","javascript","json","xml","html","css","suffixTypes","getSuffixPattern","contentType","suffix","replace","suffixPattern","options","RegExp","insertBefore"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\tPrism.languages.http = {\n\t\t'request-line': {\n\t\t\tpattern: /^(?:GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH|PRI|SEARCH)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[0-9.]+/m,\n\t\t\tinside: {\n\t\t\t\t// HTTP Method\n\t\t\t\t'method': {\n\t\t\t\t\tpattern: /^[A-Z]+\\b/,\n\t\t\t\t\talias: 'property'\n\t\t\t\t},\n\t\t\t\t// Request Target e.g. http://example.com, /path/to/file\n\t\t\t\t'request-target': {\n\t\t\t\t\tpattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'url',\n\t\t\t\t\tinside: Prism.languages.uri\n\t\t\t\t},\n\t\t\t\t// HTTP Version\n\t\t\t\t'http-version': {\n\t\t\t\t\tpattern: /^(\\s)HTTP\\/[0-9.]+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'property'\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\t'response-status': {\n\t\t\tpattern: /^HTTP\\/[0-9.]+ \\d+ .+/m,\n\t\t\tinside: {\n\t\t\t\t// HTTP Version\n\t\t\t\t'http-version': {\n\t\t\t\t\tpattern: /^HTTP\\/[0-9.]+/,\n\t\t\t\t\talias: 'property'\n\t\t\t\t},\n\t\t\t\t// Status Code\n\t\t\t\t'status-code': {\n\t\t\t\t\tpattern: /^(\\s)\\d+(?=\\s)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'number'\n\t\t\t\t},\n\t\t\t\t// Reason Phrase\n\t\t\t\t'reason-phrase': {\n\t\t\t\t\tpattern: /^(\\s).+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// HTTP header name\n\t\t'header-name': {\n\t\t\tpattern: /^[\\w-]+:(?=.)/m,\n\t\t\talias: 'keyword'\n\t\t}\n\t};\n\n\t// Create a mapping of Content-Type headers to language definitions\n\tvar langs = Prism.languages;\n\tvar httpLanguages = {\n\t\t'application/javascript': langs.javascript,\n\t\t'application/json': langs.json || langs.javascript,\n\t\t'application/xml': langs.xml,\n\t\t'text/xml': langs.xml,\n\t\t'text/html': langs.html,\n\t\t'text/css': langs.css\n\t};\n\n\t// Declare which types can also be suffixes\n\tvar suffixTypes = {\n\t\t'application/json': true,\n\t\t'application/xml': true\n\t};\n\n\t/**\n\t * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n\t *\n\t * @param {string} contentType\n\t * @returns {string}\n\t */\n\tfunction getSuffixPattern(contentType) {\n\t\tvar suffix = contentType.replace(/^[a-z]+\\//, '');\n\t\tvar suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])';\n\t\treturn '(?:' + contentType + '|' + suffixPattern + ')';\n\t}\n\n\t// Insert each content type parser that has its associated language\n\t// currently loaded.\n\tvar options;\n\tfor (var contentType in httpLanguages) {\n\t\tif (httpLanguages[contentType]) {\n\t\t\toptions = options || {};\n\n\t\t\tvar pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n\t\t\toptions[contentType.replace(/\\//g, '-')] = {\n\t\t\t\tpattern: RegExp('(content-type:\\\\s*' + pattern + '(?:(?:\\\\r\\\\n?|\\\\n).+)*)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*', 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: httpLanguages[contentType]\n\t\t\t};\n\t\t}\n\t}\n\tif (options) {\n\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t}\n\n}(Prism));\n"]}}