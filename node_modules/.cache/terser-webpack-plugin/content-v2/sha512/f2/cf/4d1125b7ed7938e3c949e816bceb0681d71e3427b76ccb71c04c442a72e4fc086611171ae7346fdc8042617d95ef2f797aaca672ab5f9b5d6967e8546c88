{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[28],{205:function(t,n){!function(t){var n={pattern:/(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,lookbehind:!0,inside:{quoted:{pattern:/([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,inside:{punctuation:/^[$`]|[$`]$/}},interpreted:{pattern:/'(?:[^'\\\\]|\\\\.)*'/,inside:{punctuation:/^'|'$/}},string:/\"(?:[^\"\\\\]|\\\\.)*\"/,variable:/\\w+(?==)/,punctuation:/^\\[|\\]$|,/,operator:/=/,\"attr-value\":/(?!^\\s+$).+/}},i=t.languages.asciidoc={\"comment-block\":{pattern:/^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,alias:\"comment\"},table:{pattern:/^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,inside:{specifiers:{pattern:/(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,alias:\"attr-value\"},punctuation:{pattern:/(^|[^\\\\])[|!]=*/,lookbehind:!0}}},\"passthrough-block\":{pattern:/^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,inside:{punctuation:/^\\++|\\++$/}},\"literal-block\":{pattern:/^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,inside:{punctuation:/^(?:-+|\\.+)|(?:-+|\\.+)$/}},\"other-block\":{pattern:/^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,inside:{punctuation:/^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/}},\"list-punctuation\":{pattern:/(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,lookbehind:!0,alias:\"punctuation\"},\"list-label\":{pattern:/(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,lookbehind:!0,alias:\"symbol\"},\"indented-block\":{pattern:/((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,lookbehind:!0},comment:/^\\/\\/.*/m,title:{pattern:/^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,alias:\"important\",inside:{punctuation:/^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/}},\"attribute-entry\":{pattern:/^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,alias:\"tag\"},attributes:n,hr:{pattern:/^'{3,}$/m,alias:\"punctuation\"},\"page-break\":{pattern:/^<{3,}$/m,alias:\"punctuation\"},admonition:{pattern:/^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,alias:\"keyword\"},callout:[{pattern:/(^[ \\t]*)<?\\d*>/m,lookbehind:!0,alias:\"symbol\"},{pattern:/<\\d+>/,alias:\"symbol\"}],macro:{pattern:/\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,inside:{function:/^[a-z\\d-]+(?=:)/,punctuation:/^::?/,attributes:{pattern:/(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,inside:n.inside}}},inline:{pattern:/(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,lookbehind:!0,inside:{attributes:n,url:{pattern:/^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,inside:{punctuation:/^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/}},\"attribute-ref\":{pattern:/^\\{.+\\}$/,inside:{variable:{pattern:/(^\\{)[a-z\\d,+_-]+/,lookbehind:!0},operator:/^[=?!#%@$]|!(?=[:}])/,punctuation:/^\\{|\\}$|::?/}},italic:{pattern:/^(['_])[\\s\\S]+\\1$/,inside:{punctuation:/^(?:''?|__?)|(?:''?|__?)$/}},bold:{pattern:/^\\*[\\s\\S]+\\*$/,inside:{punctuation:/^\\*\\*?|\\*\\*?$/}},punctuation:/^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/}},replacement:{pattern:/\\((?:C|TM|R)\\)/,alias:\"builtin\"},entity:/&#?[\\da-z]{1,8};/i,\"line-continuation\":{pattern:/(^| )\\+$/m,lookbehind:!0,alias:\"punctuation\"}};function e(t){for(var n={},e=0,a=(t=t.split(\" \")).length;e<a;e++)n[t[e]]=i[t[e]];return n}n.inside.interpreted.inside.rest=e(\"macro inline replacement entity\"),i[\"passthrough-block\"].inside.rest=e(\"macro\"),i[\"literal-block\"].inside.rest=e(\"callout\"),i.table.inside.rest=e(\"comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation\"),i[\"other-block\"].inside.rest=e(\"table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation\"),i.title.inside.rest=e(\"macro inline replacement entity\"),t.hooks.add(\"wrap\",(function(t){\"entity\"===t.type&&(t.attributes.title=t.content.replace(/&amp;/,\"&\"))})),t.languages.adoc=t.languages.asciidoc}(Prism)}}]);","name":"static/js/28.9d2c4639.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","attributes","pattern","lookbehind","inside","quoted","punctuation","interpreted","string","variable","operator","asciidoc","languages","alias","table","specifiers","comment","title","hr","admonition","callout","macro","function","inline","url","italic","bold","replacement","entity","copyFromAsciiDoc","keys","o","i","l","split","length","rest","hooks","add","env","type","content","replace","adoc"],"sources":["static/js/28.9d2c4639.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACT,IAAIC,EAAa,CACfC,QAAS,mGACTC,YAAY,EACZC,OAAQ,CACNC,OAAU,CACRH,QAAS,+BACTE,OAAQ,CACNE,YAAe,gBAGnBC,YAAe,CACbL,QAAS,oBACTE,OAAQ,CACNE,YAAe,UAKnBE,OAAU,oBACVC,SAAY,WACZH,YAAe,YACfI,SAAY,IAEZ,aAAc,gBAGdC,EAAWX,EAAMY,UAAUD,SAAW,CACxC,gBAAiB,CACfT,QAAS,oDACTW,MAAO,WAETC,MAAS,CACPZ,QAAS,0DACTE,OAAQ,CACNW,WAAc,CACZb,QAAS,uFACTW,MAAO,cAETP,YAAe,CACbJ,QAAS,kBACTC,YAAY,KAMlB,oBAAqB,CACnBD,QAAS,qDACTE,OAAQ,CACNE,YAAe,cAMnB,gBAAiB,CACfJ,QAAS,2DACTE,OAAQ,CACNE,YAAe,4BAMnB,cAAe,CACbJ,QAAS,oEACTE,OAAQ,CACNE,YAAe,wCAMnB,mBAAoB,CAClBJ,QAAS,iEACTC,YAAY,EACZU,MAAO,eAET,aAAc,CACZX,QAAS,0CACTC,YAAY,EACZU,MAAO,UAET,iBAAkB,CAChBX,QAAS,6DACTC,YAAY,GAEda,QAAW,WACXC,MAAS,CACPf,QAAS,iFACTW,MAAO,YACPT,OAAQ,CACNE,YAAe,qCAKnB,kBAAmB,CACjBJ,QAAS,iDACTW,MAAO,OAETZ,WAAcA,EACdiB,GAAM,CACJhB,QAAS,WACTW,MAAO,eAET,aAAc,CACZX,QAAS,WACTW,MAAO,eAETM,WAAc,CACZjB,QAAS,4CACTW,MAAO,WAETO,QAAW,CAAC,CACVlB,QAAS,mBACTC,YAAY,EACZU,MAAO,UACN,CACDX,QAAS,QACTW,MAAO,WAETQ,MAAS,CACPnB,QAAS,yFACTE,OAAQ,CACNkB,SAAY,kBACZhB,YAAe,OACfL,WAAc,CACZC,QAAS,0DACTE,OAAQH,EAAWG,UAIzBmB,OAAU,CAYRrB,QAAS,wiBACTC,YAAY,EACZC,OAAQ,CACNH,WAAcA,EACduB,IAAO,CACLtB,QAAS,kCACTE,OAAQ,CACNE,YAAe,oCAGnB,gBAAiB,CACfJ,QAAS,WACTE,OAAQ,CACNK,SAAY,CACVP,QAAS,oBACTC,YAAY,GAEdO,SAAY,uBACZJ,YAAe,gBAGnBmB,OAAU,CACRvB,QAAS,oBACTE,OAAQ,CACNE,YAAe,8BAGnBoB,KAAQ,CACNxB,QAAS,gBACTE,OAAQ,CACNE,YAAa,kBAGjBA,YAAe,mFAGnBqB,YAAe,CACbzB,QAAS,iBACTW,MAAO,WAETe,OAAU,oBACV,oBAAqB,CACnB1B,QAAS,YACTC,YAAY,EACZU,MAAO,gBAMX,SAASgB,EAAiBC,GAGxB,IADA,IAAIC,EAAI,CAAC,EACAC,EAAI,EAAGC,GAFhBH,EAAOA,EAAKI,MAAM,MAEOC,OAAQH,EAAIC,EAAGD,IACtCD,EAAED,EAAKE,IAAMrB,EAASmB,EAAKE,IAE7B,OAAOD,CACT,CACA9B,EAAWG,OAAoB,YAAEA,OAAOgC,KAAOP,EAAiB,mCAChElB,EAAS,qBAAqBP,OAAOgC,KAAOP,EAAiB,SAC7DlB,EAAS,iBAAiBP,OAAOgC,KAAOP,EAAiB,WACzDlB,EAAgB,MAAEP,OAAOgC,KAAOP,EAAiB,oOACjDlB,EAAS,eAAeP,OAAOgC,KAAOP,EAAiB,kKACvDlB,EAAgB,MAAEP,OAAOgC,KAAOP,EAAiB,mCAGjD7B,EAAMqC,MAAMC,IAAI,QAAQ,SAAUC,GACf,WAAbA,EAAIC,OACND,EAAItC,WAAkB,MAAIsC,EAAIE,QAAQC,QAAQ,QAAS,KAE3D,IACA1C,EAAMY,UAAU+B,KAAO3C,EAAMY,UAAUD,QACxC,CA1ND,CA0NGX,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[28],{\n\n/***/ 205:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var attributes = {\n    pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n    lookbehind: true,\n    inside: {\n      'quoted': {\n        pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n        inside: {\n          'punctuation': /^[$`]|[$`]$/\n        }\n      },\n      'interpreted': {\n        pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n        inside: {\n          'punctuation': /^'|'$/\n          // See rest below\n        }\n      },\n\n      'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      'variable': /\\w+(?==)/,\n      'punctuation': /^\\[|\\]$|,/,\n      'operator': /=/,\n      // The negative look-ahead prevents blank matches\n      'attr-value': /(?!^\\s+$).+/\n    }\n  };\n  var asciidoc = Prism.languages.asciidoc = {\n    'comment-block': {\n      pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n      alias: 'comment'\n    },\n    'table': {\n      pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n      inside: {\n        'specifiers': {\n          pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n          alias: 'attr-value'\n        },\n        'punctuation': {\n          pattern: /(^|[^\\\\])[|!]=*/,\n          lookbehind: true\n        }\n        // See rest below\n      }\n    },\n\n    'passthrough-block': {\n      pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        'punctuation': /^\\++|\\++$/\n        // See rest below\n      }\n    },\n\n    // Literal blocks and listing blocks\n    'literal-block': {\n      pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/\n        // See rest below\n      }\n    },\n\n    // Sidebar blocks, quote blocks, example blocks and open blocks\n    'other-block': {\n      pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n        // See rest below\n      }\n    },\n\n    // list-punctuation and list-label must appear before indented-block\n    'list-punctuation': {\n      pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list-label': {\n      pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'indented-block': {\n      pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n      lookbehind: true\n    },\n    'comment': /^\\/\\/.*/m,\n    'title': {\n      pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n      alias: 'important',\n      inside: {\n        'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n        // See rest below\n      }\n    },\n\n    'attribute-entry': {\n      pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n      alias: 'tag'\n    },\n    'attributes': attributes,\n    'hr': {\n      pattern: /^'{3,}$/m,\n      alias: 'punctuation'\n    },\n    'page-break': {\n      pattern: /^<{3,}$/m,\n      alias: 'punctuation'\n    },\n    'admonition': {\n      pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n      alias: 'keyword'\n    },\n    'callout': [{\n      pattern: /(^[ \\t]*)<?\\d*>/m,\n      lookbehind: true,\n      alias: 'symbol'\n    }, {\n      pattern: /<\\d+>/,\n      alias: 'symbol'\n    }],\n    'macro': {\n      pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n      inside: {\n        'function': /^[a-z\\d-]+(?=:)/,\n        'punctuation': /^::?/,\n        'attributes': {\n          pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: attributes.inside\n        }\n      }\n    },\n    'inline': {\n      /*\n      The initial look-behind prevents the highlighting of escaped quoted text.\n      \tQuoted text can be multi-line but cannot span an empty line.\n      All quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n      \tFirst, we handle the constrained quotes.\n      Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n      They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n      \tThen we handle the unconstrained quotes.\n      Those do not have the restrictions of the constrained quotes.\n      They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n       */\n      pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n      lookbehind: true,\n      inside: {\n        'attributes': attributes,\n        'url': {\n          pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n          inside: {\n            'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n          }\n        },\n        'attribute-ref': {\n          pattern: /^\\{.+\\}$/,\n          inside: {\n            'variable': {\n              pattern: /(^\\{)[a-z\\d,+_-]+/,\n              lookbehind: true\n            },\n            'operator': /^[=?!#%@$]|!(?=[:}])/,\n            'punctuation': /^\\{|\\}$|::?/\n          }\n        },\n        'italic': {\n          pattern: /^(['_])[\\s\\S]+\\1$/,\n          inside: {\n            'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\n          }\n        },\n        'bold': {\n          pattern: /^\\*[\\s\\S]+\\*$/,\n          inside: {\n            punctuation: /^\\*\\*?|\\*\\*?$/\n          }\n        },\n        'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n      }\n    },\n    'replacement': {\n      pattern: /\\((?:C|TM|R)\\)/,\n      alias: 'builtin'\n    },\n    'entity': /&#?[\\da-z]{1,8};/i,\n    'line-continuation': {\n      pattern: /(^| )\\+$/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  };\n\n  // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n  function copyFromAsciiDoc(keys) {\n    keys = keys.split(' ');\n    var o = {};\n    for (var i = 0, l = keys.length; i < l; i++) {\n      o[keys[i]] = asciidoc[keys[i]];\n    }\n    return o;\n  }\n  attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n  asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro');\n  asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout');\n  asciidoc['table'].inside.rest = copyFromAsciiDoc('comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation');\n  asciidoc['other-block'].inside.rest = copyFromAsciiDoc('table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation');\n  asciidoc['title'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.replace(/&amp;/, '&');\n    }\n  });\n  Prism.languages.adoc = Prism.languages.asciidoc;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-asciidoc.js"],"names":["Prism","attributes","pattern","lookbehind","inside","asciidoc","languages","alias","punctuation","copyFromAsciiDoc","keys","split","o","i","l","length","rest","hooks","add","env","type","content","replace","adoc"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar attributes = {\n\t\tpattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'quoted': {\n\t\t\t\tpattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^[$`]|[$`]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'interpreted': {\n\t\t\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^'|'$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\t'variable': /\\w+(?==)/,\n\t\t\t'punctuation': /^\\[|\\]$|,/,\n\t\t\t'operator': /=/,\n\t\t\t// The negative look-ahead prevents blank matches\n\t\t\t'attr-value': /(?!^\\s+$).+/\n\t\t}\n\t};\n\n\tvar asciidoc = Prism.languages.asciidoc = {\n\t\t'comment-block': {\n\t\t\tpattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n\t\t\tinside: {\n\t\t\t\t'specifiers': {\n\t\t\t\t\tpattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n\t\t\t\t\talias: 'attr-value'\n\t\t\t\t},\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /(^|[^\\\\])[|!]=*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\n\t\t'passthrough-block': {\n\t\t\tpattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\++|\\++$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// Literal blocks and listing blocks\n\t\t'literal-block': {\n\t\t\tpattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// Sidebar blocks, quote blocks, example blocks and open blocks\n\t\t'other-block': {\n\t\t\tpattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\n\t\t// list-punctuation and list-label must appear before indented-block\n\t\t'list-punctuation': {\n\t\t\tpattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list-label': {\n\t\t\tpattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'indented-block': {\n\t\t\tpattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'comment': /^\\/\\/.*/m,\n\t\t'title': {\n\t\t\tpattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'attribute-entry': {\n\t\t\tpattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n\t\t\talias: 'tag'\n\t\t},\n\t\t'attributes': attributes,\n\t\t'hr': {\n\t\t\tpattern: /^'{3,}$/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'page-break': {\n\t\t\tpattern: /^<{3,}$/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'admonition': {\n\t\t\tpattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'callout': [\n\t\t\t{\n\t\t\t\tpattern: /(^[ \\t]*)<?\\d*>/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'symbol'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /<\\d+>/,\n\t\t\t\talias: 'symbol'\n\t\t\t}\n\t\t],\n\t\t'macro': {\n\t\t\tpattern: /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\tinside: {\n\t\t\t\t'function': /^[a-z\\d-]+(?=:)/,\n\t\t\t\t'punctuation': /^::?/,\n\t\t\t\t'attributes': {\n\t\t\t\t\tpattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\t\t\tinside: attributes.inside\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'inline': {\n\t\t\t/*\n\t\t\tThe initial look-behind prevents the highlighting of escaped quoted text.\n\n\t\t\tQuoted text can be multi-line but cannot span an empty line.\n\t\t\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n\n\t\t\tFirst, we handle the constrained quotes.\n\t\t\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n\t\t\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n\n\t\t\tThen we handle the unconstrained quotes.\n\t\t\tThose do not have the restrictions of the constrained quotes.\n\t\t\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n\t\t\t */\n\t\t\tpattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': attributes,\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attribute-ref': {\n\t\t\t\t\tpattern: /^\\{.+\\}$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'variable': {\n\t\t\t\t\t\t\tpattern: /(^\\{)[a-z\\d,+_-]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'operator': /^[=?!#%@$]|!(?=[:}])/,\n\t\t\t\t\t\t'punctuation': /^\\{|\\}$|::?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'italic': {\n\t\t\t\t\tpattern: /^(['_])[\\s\\S]+\\1$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bold': {\n\t\t\t\t\tpattern: /^\\*[\\s\\S]+\\*$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tpunctuation: /^\\*\\*?|\\*\\*?$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n\t\t\t}\n\t\t},\n\t\t'replacement': {\n\t\t\tpattern: /\\((?:C|TM|R)\\)/,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i,\n\t\t'line-continuation': {\n\t\t\tpattern: /(^| )\\+$/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t}\n\t};\n\n\n\t// Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n\tfunction copyFromAsciiDoc(keys) {\n\t\tkeys = keys.split(' ');\n\n\t\tvar o = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\to[keys[i]] = asciidoc[keys[i]];\n\t\t}\n\t\treturn o;\n\t}\n\n\tattributes.inside['interpreted'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\tasciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro');\n\n\tasciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout');\n\n\tasciidoc['table'].inside.rest = copyFromAsciiDoc('comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation');\n\n\tasciidoc['other-block'].inside.rest = copyFromAsciiDoc('table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation');\n\n\tasciidoc['title'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\n\tPrism.languages.adoc = Prism.languages.asciidoc;\n}(Prism));\n"]}}