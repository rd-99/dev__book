{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[280],{457:function(e,n){Prism.languages.matlab={comment:[/%\\{[\\s\\S]*?\\}%/,/%.+/],string:{pattern:/\\B'(?:''|[^'\\r\\n])*'/,greedy:!0},number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,keyword:/\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,function:/\\b(?!\\d)\\w+(?=\\s*\\()/,operator:/\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,punctuation:/\\.{3}|[.,;\\[\\](){}!]/}}}]);","name":"static/js/280.80a49403.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","matlab","comment","string","pattern","greedy","number","keyword","function","operator","punctuation"],"sources":["static/js/280.80a49403.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,OAAS,CACvBC,QAAW,CAAC,iBAAkB,OAC9BC,OAAU,CACRC,QAAS,uBACTC,QAAQ,GAGVC,OAAU,iEACVC,QAAW,8HACXC,SAAY,uBACZC,SAAY,0CACZC,YAAe,uBAGV"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[280],{\n\n/***/ 457:\n/***/ (function(module, exports) {\n\nPrism.languages.matlab = {\n  'comment': [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n  'string': {\n    pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n    greedy: true\n  },\n  // FIXME We could handle imaginary numbers as a whole\n  'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n  'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n  'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n  'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n  'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-matlab.js"],"names":["Prism","languages","matlab","pattern","greedy"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAG;EACxB,SAAS,EAAE,CACV,gBAAgB,EAChB,KAAK,CACL;EACD,QAAQ,EAAE;IACTC,OAAO,EAAE,sBAAsB;IAC/BC,MAAM,EAAE;EACT,CAAC;EACD;EACA,QAAQ,EAAE,gEAAgE;EAC1E,SAAS,EAAE,6HAA6H;EACxI,UAAU,EAAE,sBAAsB;EAClC,UAAU,EAAE,yCAAyC;EACrD,aAAa,EAAE;AAChB,CAAC,C","file":"x","sourcesContent":["Prism.languages.matlab = {\n\t'comment': [\n\t\t/%\\{[\\s\\S]*?\\}%/,\n\t\t/%.+/\n\t],\n\t'string': {\n\t\tpattern: /\\B'(?:''|[^'\\r\\n])*'/,\n\t\tgreedy: true\n\t},\n\t// FIXME We could handle imaginary numbers as a whole\n\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n\t'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};\n"]}}