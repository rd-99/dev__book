{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[242],{419:function(t,n){!function(t){var n=t.util.clone(t.languages.javascript),e=/(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source,a=/(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source,s=/(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;function o(t,n){return t=t.replace(/<S>/g,(function(){return e})).replace(/<BRACES>/g,(function(){return a})).replace(/<SPREAD>/g,(function(){return s})),RegExp(t,n)}s=o(s).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=o(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:o(/<SPREAD>/.source),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:o(/=<BRACES>/.source),inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx},alias:\"language-javascript\"}},t.languages.jsx.tag);var g=function t(n){return n?\"string\"===typeof n?n:\"string\"===typeof n.content?n.content:n.content.map(t).join(\"\"):\"\"},c=function n(e){for(var a=[],s=0;s<e.length;s++){var o=e[s],c=!1;if(\"string\"!==typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?a.length>0&&a[a.length-1].tagName===g(o.content[0].content[1])&&a.pop():\"/>\"===o.content[o.content.length-1].content||a.push({tagName:g(o.content[0].content[1]),openedBraces:0}):a.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?a[a.length-1].openedBraces++:a.length>0&&a[a.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?a[a.length-1].openedBraces--:c=!0),(c||\"string\"===typeof o)&&a.length>0&&0===a[a.length-1].openedBraces){var i=g(o);s<e.length-1&&(\"string\"===typeof e[s+1]||\"plain-text\"===e[s+1].type)&&(i+=g(e[s+1]),e.splice(s+1,1)),s>0&&(\"string\"===typeof e[s-1]||\"plain-text\"===e[s-1].type)&&(i=g(e[s-1])+i,e.splice(s-1,1),s--),e[s]=new t.Token(\"plain-text\",i,null,i)}o.content&&\"string\"!==typeof o.content&&n(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||c(t.tokens)}))}(Prism)}}]);","name":"static/js/242.6532f352.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","javascript","util","clone","languages","space","source","braces","spread","re","flags","replace","RegExp","jsx","extend","tag","pattern","inside","insertBefore","script","alias","rest","stringifyToken","token","content","map","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","openedBraces","plainText","splice","Token","hooks","add","env","language"],"sources":["static/js/242.6532f352.chunk.js"],"mappings":"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"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[242],{\n\n/***/ 419:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag);\n\n  // The following will handle plain text inside tags\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n    if (typeof token === 'string') {\n      return token;\n    }\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n    return token.content.map(stringifyToken).join('');\n  };\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {\n              // Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token);\n\n          // And merge text with adjacent text\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n    walkTokens(env.tokens);\n  });\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-jsx.js"],"names":["Prism","javascript","util","clone","languages","space","source","braces","spread","re","flags","replace","RegExp","jsx","extend","tag","pattern","inside","insertBefore","alias","rest","stringifyToken","token","content","map","join","walkTokens","tokens","openedTags","i","length","notTagNorBrace","type","tagName","pop","push","openedBraces","plainText","splice","Token","hooks","add","env","language"],"mappings":"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","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar javascript = Prism.util.clone(Prism.languages.javascript);\n\n\tvar space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n\tvar braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n\tvar spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction re(source, flags) {\n\t\tsource = source\n\t\t\t.replace(/<S>/g, function () { return space; })\n\t\t\t.replace(/<BRACES>/g, function () { return braces; })\n\t\t\t.replace(/<SPREAD>/g, function () { return spread; });\n\t\treturn RegExp(source, flags);\n\t}\n\n\tspread = re(spread).source;\n\n\n\tPrism.languages.jsx = Prism.languages.extend('markup', javascript);\n\tPrism.languages.jsx.tag.pattern = re(\n\t\t/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source\n\t);\n\n\tPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n\tPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i;\n\tPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\tPrism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n\n\tPrism.languages.insertBefore('inside', 'attr-name', {\n\t\t'spread': {\n\t\t\tpattern: re(/<SPREAD>/.source),\n\t\t\tinside: Prism.languages.jsx\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\tPrism.languages.insertBefore('inside', 'special-attr', {\n\t\t'script': {\n\t\t\t// Allow for two levels of nesting\n\t\t\tpattern: re(/=<BRACES>/.source),\n\t\t\tinside: {\n\t\t\t\t'script-punctuation': {\n\t\t\t\t\tpattern: /^=(?=\\{)/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.jsx\n\t\t\t},\n\t\t\t'alias': 'language-javascript'\n\t\t}\n\t}, Prism.languages.jsx.tag);\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (!token) {\n\t\t\treturn '';\n\t\t}\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else {\n\t\t\t\t\tnotTagNorBrace = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));\n"]}}