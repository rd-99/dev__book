{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[22],{199:function(e,n){Prism.languages.aql={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,property:{pattern:/([{,]\\s*)(?:(?!\\d)\\w+|([\"'\\xb4`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/([\"'\\xb4`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,greedy:!0},variable:/@@?\\w+/,keyword:[{pattern:/(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,lookbehind:!0},/\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,{pattern:/(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,lookbehind:!0},{pattern:/(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,lookbehind:!0},{pattern:/\\bOPTIONS(?=\\s*\\{)/i}],function:/\\b(?!\\d)\\w+(?=\\s*\\()/,boolean:/\\b(?:true|false)\\b/i,range:{pattern:/\\.\\./,alias:\"operator\"},number:[/\\b0b[01]+/i,/\\b0x[0-9a-f]+/i,/(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i],operator:/\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,punctuation:/::|[?.:,;()[\\]{}]/}}}]);","name":"static/js/22.b4c2f04d.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","aql","comment","property","pattern","lookbehind","greedy","string","variable","keyword","function","boolean","range","alias","number","operator","punctuation"],"sources":["static/js/22.b4c2f04d.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErG,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,IAAM,CACpBC,QAAW,0BACXC,SAAY,CACVC,QAAS,uEACTC,YAAY,EACZC,QAAQ,GAEVC,OAAU,CACRH,QAAS,wCACTE,QAAQ,GAEVE,SAAY,SACZC,QAAW,CAAC,CACVL,QAAS,iCACTC,YAAY,GACX,wOAEH,CACED,QAAS,yCACTC,YAAY,GACX,CACDD,QAAS,mCACTC,YAAY,GACX,CACDD,QAAS,wBAEXM,SAAY,uBACZC,QAAW,sBACXC,MAAS,CACPR,QAAS,OACTS,MAAO,YAETC,OAAU,CAAC,aAAc,iBAAkB,yDAC3CC,SAAY,wCACZC,YAAe,oBAGV"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[22],{\n\n/***/ 199:\n/***/ (function(module, exports) {\n\nPrism.languages.aql = {\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  'property': {\n    pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n    greedy: true\n  },\n  'variable': /@@?\\w+/,\n  'keyword': [{\n    pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n    lookbehind: true\n  }, /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n  // pseudo keywords get a lookbehind to avoid false positives\n  {\n    pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /\\bOPTIONS(?=\\s*\\{)/i\n  }],\n  'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'range': {\n    pattern: /\\.\\./,\n    alias: 'operator'\n  },\n  'number': [/\\b0b[01]+/i, /\\b0x[0-9a-f]+/i, /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i],\n  'operator': /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n  'punctuation': /::|[?.:,;()[\\]{}]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-aql.js"],"names":["Prism","languages","aql","pattern","lookbehind","greedy","alias"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,GAAG,GAAG;EACrB,SAAS,EAAE,yBAAyB;EACpC,UAAU,EAAE;IACXC,OAAO,EAAE,mEAAmE;IAC5EC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;EACT,CAAC;EACD,QAAQ,EAAE;IACTF,OAAO,EAAE,oCAAoC;IAC7CE,MAAM,EAAE;EACT,CAAC;EACD,UAAU,EAAE,QAAQ;EACpB,SAAS,EAAE,CACV;IACCF,OAAO,EAAE,gCAAgC;IACzCC,UAAU,EAAE;EACb,CAAC,EACD,uOAAuO;EACvO;EACA;IACCD,OAAO,EAAE,wCAAwC;IACjDC,UAAU,EAAE;EACb,CAAC,EACD;IACCD,OAAO,EAAE,kCAAkC;IAC3CC,UAAU,EAAE;EACb,CAAC,EACD;IACCD,OAAO,EAAE;EACV,CAAC,CACD;EACD,UAAU,EAAE,sBAAsB;EAClC,SAAS,EAAE,qBAAqB;EAChC,OAAO,EAAE;IACRA,OAAO,EAAE,MAAM;IACfG,KAAK,EAAE;EACR,CAAC;EACD,QAAQ,EAAE,CACT,YAAY,EACZ,gBAAgB,EAChB,uDAAuD,CACvD;EACD,UAAU,EAAE,uCAAuC;EACnD,aAAa,EAAE;AAChB,CAAC,C","file":"x","sourcesContent":["Prism.languages.aql = {\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n\t'property': {\n\t\tpattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n\t\tgreedy: true\n\t},\n\t'variable': /@@?\\w+/,\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n\t\t// pseudo keywords get a lookbehind to avoid false positives\n\t\t{\n\t\t\tpattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /\\bOPTIONS(?=\\s*\\{)/i\n\t\t}\n\t],\n\t'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\n\t'boolean': /\\b(?:true|false)\\b/i,\n\t'range': {\n\t\tpattern: /\\.\\./,\n\t\talias: 'operator'\n\t},\n\t'number': [\n\t\t/\\b0b[01]+/i,\n\t\t/\\b0x[0-9a-f]+/i,\n\t\t/(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n\t],\n\t'operator': /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n\t'punctuation': /::|[?.:,;()[\\]{}]/\n};\n"]}}