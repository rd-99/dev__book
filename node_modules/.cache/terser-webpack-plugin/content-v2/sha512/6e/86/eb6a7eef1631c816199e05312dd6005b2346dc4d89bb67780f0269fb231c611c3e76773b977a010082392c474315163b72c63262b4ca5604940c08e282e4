{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[321],{498:function(e,n){Prism.languages.openqasm={comment:/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,string:{pattern:/\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,greedy:!0},keyword:/\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\"class-name\":/\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,function:/\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,constant:/\\b(?:pi|tau|euler)\\b|\\u03c0|\\ud835\\udf0f|\\u2107/,number:{pattern:/(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|\\xb5s|ms|s)?/i,lookbehind:!0},operator:/->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,punctuation:/[(){}\\[\\];,:.]/},Prism.languages.qasm=Prism.languages.openqasm}}]);","name":"static/js/321.db11db0f.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","openqasm","comment","string","pattern","greedy","keyword","function","constant","number","lookbehind","operator","punctuation","qasm"],"sources":["static/js/321.db11db0f.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,SAAW,CACzBC,QAAS,0BACTC,OAAQ,CACNC,QAAS,8BACTC,QAAQ,GAEVC,QAAS,+NACT,aAAc,6EACdC,SAAU,8DACVC,SAAU,kDACVC,OAAQ,CACNL,QAAS,4EACTM,YAAY,GAEdC,SAAU,oDACVC,YAAa,kBACZb,MAAMC,UAAUa,KAAOd,MAAMC,UAAUC,QAEnC"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[321],{\n\n/***/ 498:\n/***/ (function(module, exports) {\n\nPrism.languages.openqasm = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n  string: {\n    pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n    greedy: !0\n  },\n  keyword: /\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\n  \"class-name\": /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n  function: /\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,\n  constant: /\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,\n  number: {\n    pattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n    lookbehind: !0\n  },\n  operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n  punctuation: /[(){}\\[\\];,:.]/\n}, Prism.languages.qasm = Prism.languages.openqasm;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-openqasm.min.js"],"names":["Prism","languages","openqasm","comment","string","pattern","greedy","keyword","function","constant","number","lookbehind","operator","punctuation","qasm"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,QAAQ,GAAC;EAACC,OAAO,EAAC,yBAAyB;EAACC,MAAM,EAAC;IAACC,OAAO,EAAC,6BAA6B;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC;EAACC,OAAO,EAAC,8NAA8N;EAAC,YAAY,EAAC,4EAA4E;EAACC,QAAQ,EAAC,6DAA6D;EAACC,QAAQ,EAAC,6BAA6B;EAACC,MAAM,EAAC;IAACL,OAAO,EAAC,wEAAwE;IAACM,UAAU,EAAC,CAAC;EAAC,CAAC;EAACC,QAAQ,EAAC,mDAAmD;EAACC,WAAW,EAAC;AAAgB,CAAC,EAACb,KAAK,CAACC,SAAS,CAACa,IAAI,GAACd,KAAK,CAACC,SAAS,CAACC,QAAQ,C","file":"x","sourcesContent":["Prism.languages.openqasm={comment:/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,string:{pattern:/\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,greedy:!0},keyword:/\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\"class-name\":/\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,function:/\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,constant:/\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,number:{pattern:/(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,lookbehind:!0},operator:/->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,punctuation:/[(){}\\[\\];,:.]/},Prism.languages.qasm=Prism.languages.openqasm;"]}}