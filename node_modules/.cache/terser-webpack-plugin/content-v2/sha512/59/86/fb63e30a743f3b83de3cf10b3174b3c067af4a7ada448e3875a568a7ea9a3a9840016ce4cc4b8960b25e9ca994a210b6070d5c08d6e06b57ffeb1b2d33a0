{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[42],{219:function(e,r){!function(e){var r=/%%?[~:\\w]+%?|!\\S+!/,n={pattern:/\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,alias:\"attr-name\",inside:{punctuation:/:/}},t=/\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/,i=/(?:\\b|-)\\d+\\b/;e.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:\"property\"},command:[{pattern:/((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,lookbehind:!0,inside:{keyword:/^for\\b|\\b(?:in|do)\\b/i,string:t,parameter:n,variable:r,number:i,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,lookbehind:!0,inside:{keyword:/^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,string:t,parameter:n,variable:r,number:i,operator:/\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i}},{pattern:/((?:^|[&()])[ \\t]*)else\\b/im,lookbehind:!0,inside:{keyword:/^else\\b/i}},{pattern:/((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^set\\b/i,string:t,parameter:n,variable:[r,/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],number:i,operator:/[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^\\w+\\b/i,string:t,parameter:n,label:{pattern:/(^\\s*):\\S+/m,lookbehind:!0,alias:\"property\"},variable:r,number:i,operator:/\\^/}}],operator:/[&@]/,punctuation:/[()']/}}(Prism)}}]);","name":"static/js/42.4465d650.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","variable","parameter","pattern","alias","inside","punctuation","string","number","languages","batch","comment","lookbehind","label","command","keyword","operator"],"sources":["static/js/42.4465d650.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACT,IAAIC,EAAW,qBACXC,EAAY,CACdC,QAAS,+CACTC,MAAO,YACPC,OAAQ,CACNC,YAAe,MAGfC,EAAS,0BACTC,EAAS,gBACbR,EAAMS,UAAUC,MAAQ,CACtBC,QAAW,CAAC,SAAU,CACpBR,QAAS,6DACTS,YAAY,IAEdC,MAAS,CACPV,QAAS,QACTC,MAAO,YAETU,QAAW,CAAC,CAEVX,QAAS,2FACTS,YAAY,EACZP,OAAQ,CACNU,QAAW,wBACXR,OAAUA,EACVL,UAAaA,EACbD,SAAYA,EACZO,OAAUA,EACVF,YAAe,WAEhB,CAEDH,QAAS,mOACTS,YAAY,EACZP,OAAQ,CACNU,QAAW,4DACXR,OAAUA,EACVL,UAAaA,EACbD,SAAYA,EACZO,OAAUA,EACVQ,SAAY,2CAEb,CAEDb,QAAS,8BACTS,YAAY,EACZP,OAAQ,CACNU,QAAW,aAEZ,CAEDZ,QAAS,wGACTS,YAAY,EACZP,OAAQ,CACNU,QAAW,UACXR,OAAUA,EACVL,UAAaA,EACbD,SAAY,CAACA,EAAU,mCACvBO,OAAUA,EACVQ,SAAY,kCACZV,YAAe,WAEhB,CAEDH,QAAS,wFACTS,YAAY,EACZP,OAAQ,CACNU,QAAW,UACXR,OAAUA,EACVL,UAAaA,EACbW,MAAS,CACPV,QAAS,cACTS,YAAY,EACZR,MAAO,YAETH,SAAYA,EACZO,OAAUA,EACVQ,SAAY,QAGhBA,SAAY,OACZV,YAAe,QAElB,CArFD,CAqFGN,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[42],{\n\n/***/ 219:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var variable = /%%?[~:\\w]+%?|!\\S+!/;\n  var parameter = {\n    pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n    alias: 'attr-name',\n    inside: {\n      'punctuation': /:/\n    }\n  };\n  var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n  var number = /(?:\\b|-)\\d+\\b/;\n  Prism.languages.batch = {\n    'comment': [/^::.*/m, {\n      pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true\n    }],\n    'label': {\n      pattern: /^:.*/m,\n      alias: 'property'\n    },\n    'command': [{\n      // FOR command\n      pattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': variable,\n        'number': number,\n        'punctuation': /[()',]/\n      }\n    }, {\n      // IF command\n      pattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': variable,\n        'number': number,\n        'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n      }\n    }, {\n      // ELSE command\n      pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^else\\b/i\n      }\n    }, {\n      // SET command\n      pattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^set\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n        'number': number,\n        'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n        'punctuation': /[()',]/\n      }\n    }, {\n      // Other commands\n      pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\w+\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'label': {\n          pattern: /(^\\s*):\\S+/m,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'variable': variable,\n        'number': number,\n        'operator': /\\^/\n      }\n    }],\n    'operator': /[&@]/,\n    'punctuation': /[()']/\n  };\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-batch.js"],"names":["Prism","variable","parameter","pattern","alias","inside","string","number","languages","batch","lookbehind"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EACjB,IAAIC,QAAQ,GAAG,oBAAoB;EACnC,IAAIC,SAAS,GAAG;IACfC,OAAO,EAAE,8CAA8C;IACvDC,KAAK,EAAE,WAAW;IAClBC,MAAM,EAAE;MACP,aAAa,EAAE;IAChB;EACD,CAAC;EACD,IAAIC,MAAM,GAAG,yBAAyB;EACtC,IAAIC,MAAM,GAAG,eAAe;EAE5BP,KAAK,CAACQ,SAAS,CAACC,KAAK,GAAG;IACvB,SAAS,EAAE,CACV,QAAQ,EACR;MACCN,OAAO,EAAE,4DAA4D;MACrEO,UAAU,EAAE;IACb,CAAC,CACD;IACD,OAAO,EAAE;MACRP,OAAO,EAAE,OAAO;MAChBC,KAAK,EAAE;IACR,CAAC;IACD,SAAS,EAAE,CACV;MACC;MACAD,OAAO,EAAE,0FAA0F;MACnGO,UAAU,EAAE,IAAI;MAChBL,MAAM,EAAE;QACP,SAAS,EAAE,uBAAuB;QAClC,QAAQ,EAAEC,MAAM;QAChB,WAAW,EAAEJ,SAAS;QACtB,UAAU,EAAED,QAAQ;QACpB,QAAQ,EAAEM,MAAM;QAChB,aAAa,EAAE;MAChB;IACD,CAAC,EACD;MACC;MACAJ,OAAO,EAAE,kOAAkO;MAC3OO,UAAU,EAAE,IAAI;MAChBL,MAAM,EAAE;QACP,SAAS,EAAE,2DAA2D;QACtE,QAAQ,EAAEC,MAAM;QAChB,WAAW,EAAEJ,SAAS;QACtB,UAAU,EAAED,QAAQ;QACpB,QAAQ,EAAEM,MAAM;QAChB,UAAU,EAAE;MACb;IACD,CAAC,EACD;MACC;MACAJ,OAAO,EAAE,6BAA6B;MACtCO,UAAU,EAAE,IAAI;MAChBL,MAAM,EAAE;QACP,SAAS,EAAE;MACZ;IACD,CAAC,EACD;MACC;MACAF,OAAO,EAAE,uGAAuG;MAChHO,UAAU,EAAE,IAAI;MAChBL,MAAM,EAAE;QACP,SAAS,EAAE,SAAS;QACpB,QAAQ,EAAEC,MAAM;QAChB,WAAW,EAAEJ,SAAS;QACtB,UAAU,EAAE,CACXD,QAAQ,EACR,iCAAiC,CACjC;QACD,QAAQ,EAAEM,MAAM;QAChB,UAAU,EAAE,iCAAiC;QAC7C,aAAa,EAAE;MAChB;IACD,CAAC,EACD;MACC;MACAJ,OAAO,EAAE,uFAAuF;MAChGO,UAAU,EAAE,IAAI;MAChBL,MAAM,EAAE;QACP,SAAS,EAAE,SAAS;QACpB,QAAQ,EAAEC,MAAM;QAChB,WAAW,EAAEJ,SAAS;QACtB,OAAO,EAAE;UACRC,OAAO,EAAE,aAAa;UACtBO,UAAU,EAAE,IAAI;UAChBN,KAAK,EAAE;QACR,CAAC;QACD,UAAU,EAAEH,QAAQ;QACpB,QAAQ,EAAEM,MAAM;QAChB,UAAU,EAAE;MACb;IACD,CAAC,CACD;IACD,UAAU,EAAE,MAAM;IAClB,aAAa,EAAE;EAChB,CAAC;AACF,CAAC,EAACP,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;\n\tvar parameter = {\n\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n\t\talias: 'attr-name',\n\t\tinside: {\n\t\t\t'punctuation': /:/\n\t\t}\n\t};\n\tvar string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n\tvar number = /(?:\\b|-)\\d+\\b/;\n\n\tPrism.languages.batch = {\n\t\t'comment': [\n\t\t\t/^::.*/m,\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'label': {\n\t\t\tpattern: /^:.*/m,\n\t\t\talias: 'property'\n\t\t},\n\t\t'command': [\n\t\t\t{\n\t\t\t\t// FOR command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// IF command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ELSE command\n\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^else\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// SET command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^set\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\tvariable,\n\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n\t\t\t\t\t],\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Other commands\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^\\w+\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'label': {\n\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'operator': /[&@]/,\n\t\t'punctuation': /[()']/\n\t};\n}(Prism));\n"]}}