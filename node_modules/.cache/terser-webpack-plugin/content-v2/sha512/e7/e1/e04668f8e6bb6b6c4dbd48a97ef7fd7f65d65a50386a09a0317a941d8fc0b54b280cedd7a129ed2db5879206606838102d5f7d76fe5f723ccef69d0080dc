{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[80],{257:function(e,t){!function(e){for(var t=/\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source,i=0;i<2;i++)t=t.replace(/<self>/g,(function(){return t}));t=t.replace(/<self>/g,\"[]\"),e.languages.coq={comment:RegExp(t),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},attribute:[{pattern:RegExp(/#\\[(?:[^\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(/<comment>/g,(function(){return t}))),greedy:!0,alias:\"attr-name\",inside:{comment:RegExp(t),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},operator:/=/,punctuation:/^#\\[|\\]$|[,()]/}},{pattern:/\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,alias:\"attr-name\"}],keyword:/\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,number:/\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,punct:{pattern:/@\\{|\\{\\||\\[=|:>/,alias:\"punctuation\"},operator:/\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,punctuation:/\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/}}(Prism)}}]);","name":"static/js/80.e3083c32.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","commentSource","source","i","replace","languages","coq","comment","RegExp","string","pattern","greedy","attribute","alias","inside","operator","punctuation","keyword","number","punct"],"sources":["static/js/80.e3083c32.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GAIT,IADA,IAAIC,EAAgB,8CAA8CC,OACzDC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAgBA,EAAcG,QAAQ,WAAW,WAC/C,OAAOH,CACT,IAEFA,EAAgBA,EAAcG,QAAQ,UAAW,MACjDJ,EAAMK,UAAUC,IAAM,CACpBC,QAAWC,OAAOP,GAClBQ,OAAU,CACRC,QAAS,sBACTC,QAAQ,GAEVC,UAAa,CAAC,CACZF,QAASF,OAAO,2DAA2DN,OAAOE,QAAQ,cAAc,WACtG,OAAOH,CACT,KACAU,QAAQ,EACRE,MAAO,YACPC,OAAQ,CACNP,QAAWC,OAAOP,GAClBQ,OAAU,CACRC,QAAS,sBACTC,QAAQ,GAEVI,SAAY,IACZC,YAAe,mBAEhB,CACDN,QAAS,wFACTG,MAAO,cAETI,QAAW,0/DACXC,OAAU,6GACVC,MAAS,CACPT,QAAS,kBACTG,MAAO,eAETE,SAAY,8FACZC,YAAe,8CAElB,CA5CD,CA4CGhB,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[80],{\n\n/***/ 257:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  // https://github.com/coq/coq\n\n  var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source;\n  for (var i = 0; i < 2; i++) {\n    commentSource = commentSource.replace(/<self>/g, function () {\n      return commentSource;\n    });\n  }\n  commentSource = commentSource.replace(/<self>/g, '[]');\n  Prism.languages.coq = {\n    'comment': RegExp(commentSource),\n    'string': {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'attribute': [{\n      pattern: RegExp(/#\\[(?:[^\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(/<comment>/g, function () {\n        return commentSource;\n      })),\n      greedy: true,\n      alias: 'attr-name',\n      inside: {\n        'comment': RegExp(commentSource),\n        'string': {\n          pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n          greedy: true\n        },\n        'operator': /=/,\n        'punctuation': /^#\\[|\\]$|[,()]/\n      }\n    }, {\n      pattern: /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n      alias: 'attr-name'\n    }],\n    'keyword': /\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,\n    'number': /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n    'punct': {\n      pattern: /@\\{|\\{\\||\\[=|:>/,\n      alias: 'punctuation'\n    },\n    'operator': /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n    'punctuation': /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n  };\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-coq.js"],"names":["Prism","commentSource","source","i","replace","languages","coq","RegExp","pattern","greedy","alias","inside"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EAEjB;;EAEA,IAAIC,aAAa,GAAG,6CAA6C,CAACC,MAAM;EACxE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3BF,aAAa,GAAGA,aAAa,CAACG,OAAO,CAAC,SAAS,EAAE,YAAY;MAAE,OAAOH,aAAa;IAAE,CAAC,CAAC;EACxF;EACAA,aAAa,GAAGA,aAAa,CAACG,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;EAEtDJ,KAAK,CAACK,SAAS,CAACC,GAAG,GAAG;IACrB,SAAS,EAAEC,MAAM,CAACN,aAAa,CAAC;IAChC,QAAQ,EAAE;MACTO,OAAO,EAAE,qBAAqB;MAC9BC,MAAM,EAAE;IACT,CAAC;IACD,WAAW,EAAE,CACZ;MACCD,OAAO,EAAED,MAAM,CACd,0DAA0D,CAACL,MAAM,CAC/DE,OAAO,CAAC,YAAY,EAAE,YAAY;QAAE,OAAOH,aAAa;MAAE,CAAC,CAC9D,CAAC;MACDQ,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,WAAW;MAClBC,MAAM,EAAE;QACP,SAAS,EAAEJ,MAAM,CAACN,aAAa,CAAC;QAChC,QAAQ,EAAE;UACTO,OAAO,EAAE,qBAAqB;UAC9BC,MAAM,EAAE;QACT,CAAC;QAED,UAAU,EAAE,GAAG;QACf,aAAa,EAAE;MAChB;IACD,CAAC,EACD;MACCD,OAAO,EAAE,uFAAuF;MAChGE,KAAK,EAAE;IACR,CAAC,CACD;IAED,SAAS,EAAE,y/DAAy/D;IAEpgE,QAAQ,EAAE,4GAA4G;IAEtH,OAAO,EAAE;MACRF,OAAO,EAAE,iBAAiB;MAC1BE,KAAK,EAAE;IACR,CAAC;IACD,UAAU,EAAE,6FAA6F;IACzG,aAAa,EAAE;EAChB,CAAC;AAEF,CAAC,EAACV,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\n\t// https://github.com/coq/coq\n\n\tvar commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source;\n\tfor (var i = 0; i < 2; i++) {\n\t\tcommentSource = commentSource.replace(/<self>/g, function () { return commentSource; });\n\t}\n\tcommentSource = commentSource.replace(/<self>/g, '[]');\n\n\tPrism.languages.coq = {\n\t\t'comment': RegExp(commentSource),\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'attribute': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\t/#\\[(?:[^\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source\n\t\t\t\t\t\t.replace(/<comment>/g, function () { return commentSource; })\n\t\t\t\t),\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'attr-name',\n\t\t\t\tinside: {\n\t\t\t\t\t'comment': RegExp(commentSource),\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n\t\t\t\t\t\tgreedy: true\n\t\t\t\t\t},\n\n\t\t\t\t\t'operator': /=/,\n\t\t\t\t\t'punctuation': /^#\\[|\\]$|[,()]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n\t\t\t\talias: 'attr-name'\n\t\t\t}\n\t\t],\n\n\t\t'keyword': /\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,\n\n\t\t'number': /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n\n\t\t'punct': {\n\t\t\tpattern: /@\\{|\\{\\||\\[=|:>/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'operator': /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n\t\t'punctuation': /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n\t};\n\n}(Prism));\n"]}}