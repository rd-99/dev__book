{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[364],{541:function(e,n){!function(e){e.languages.puppet={heredoc:[{pattern:/(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,lookbehind:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,lookbehind:!0,greedy:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,alias:\"string\",inside:{punctuation:{pattern:/(\\().+?(?=\\))/,lookbehind:!0}}}],\"multiline-comment\":{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0,greedy:!0,alias:\"comment\"},regex:{pattern:/((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,lookbehind:!0,greedy:!0,inside:{\"extended-regex\":{pattern:/^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,inside:{comment:/#.*/}}}},comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,greedy:!0},string:{pattern:/([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{\"double-quoted\":{pattern:/^\"[\\s\\S]*\"$/,inside:{}}}},variable:{pattern:/\\$(?:::)?\\w+(?:::\\w+)*/,inside:{punctuation:/::/}},\"attr-name\":/(?:\\b\\w+|\\*)(?=\\s*=>)/,function:[{pattern:/(\\.)(?!\\d)\\w+/,lookbehind:!0},/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],number:/\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,datatype:{pattern:/\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,alias:\"symbol\"},operator:/=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,punctuation:/[\\[\\]{}().,;]|:+/};var n=[{pattern:/(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,lookbehind:!0,inside:{\"short-variable\":{pattern:/(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}},delimiter:{pattern:/^\\$/,alias:\"variable\"},rest:e.languages.puppet}},{pattern:/(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}}];e.languages.puppet.heredoc[0].inside.interpolation=n,e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation=n}(Prism)}}]);","name":"static/js/364.e6be3d4a.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","puppet","heredoc","pattern","lookbehind","alias","inside","punctuation","greedy","regex","comment","string","variable","function","number","boolean","keyword","datatype","operator","interpolation","delimiter","rest"],"sources":["static/js/364.e6be3d4a.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACTA,EAAMC,UAAUC,OAAS,CACvBC,QAAW,CAEX,CACEC,QAAS,qHACTC,YAAY,EACZC,MAAO,SACPC,OAAQ,CAENC,YAAe,sBAKnB,CACEJ,QAAS,mHACTC,YAAY,EACZI,QAAQ,EACRH,MAAO,SACPC,OAAQ,CAENC,YAAe,sBAInB,CACEJ,QAAS,8CACTE,MAAO,SACPC,OAAQ,CACNC,YAAe,CACbJ,QAAS,gBACTC,YAAY,MAIlB,oBAAqB,CACnBD,QAAS,4BACTC,YAAY,EACZI,QAAQ,EACRH,MAAO,WAETI,MAAS,CAEPN,QAAS,uFACTC,YAAY,EACZI,QAAQ,EACRF,OAAQ,CAEN,iBAAkB,CAChBH,QAAS,yCACTG,OAAQ,CACNI,QAAW,UAKnBA,QAAW,CACTP,QAAS,eACTC,YAAY,EACZI,QAAQ,GAEVG,OAAU,CAERR,QAAS,kGACTK,QAAQ,EACRF,OAAQ,CACN,gBAAiB,CACfH,QAAS,cACTG,OAAQ,CAER,KAINM,SAAY,CACVT,QAAS,yBACTG,OAAQ,CACNC,YAAe,OAGnB,YAAa,wBACbM,SAAY,CAAC,CACXV,QAAS,gBACTC,YAAY,GACX,oGACHU,OAAU,+CACVC,QAAW,qBAEXC,QAAW,6IACXC,SAAY,CACVd,QAAS,gNACTE,MAAO,UAETa,SAAY,mFACZX,YAAe,oBAEjB,IAAIY,EAAgB,CAAC,CAEnBhB,QAAS,0EACTC,YAAY,EACZE,OAAQ,CACN,iBAAkB,CAEhBH,QAAS,uCACTC,YAAY,EACZC,MAAO,WACPC,OAAQ,CACNC,YAAe,OAGnBa,UAAa,CACXjB,QAAS,MACTE,MAAO,YAETgB,KAAMtB,EAAMC,UAAUC,SAEvB,CACDE,QAAS,kCACTC,YAAY,EACZC,MAAO,WACPC,OAAQ,CACNC,YAAe,QAGnBR,EAAMC,UAAUC,OAAgB,QAAE,GAAGK,OAAOa,cAAgBA,EAC5DpB,EAAMC,UAAUC,OAAe,OAAEK,OAAO,iBAAiBA,OAAOa,cAAgBA,CACjF,CA/HD,CA+HGpB,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[364],{\n\n/***/ 541:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  Prism.languages.puppet = {\n    'heredoc': [\n    // Matches the content of a quoted heredoc string (subject to interpolation)\n    {\n      pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        // Matches the end tag\n        'punctuation': /(?=\\S).*\\S(?= *$)/\n        // See interpolation below\n      }\n    },\n    // Matches the content of an unquoted heredoc string (no interpolation)\n    {\n      pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        // Matches the end tag\n        'punctuation': /(?=\\S).*\\S(?= *$)/\n      }\n    },\n    // Matches the start tag of heredoc strings\n    {\n      pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n      alias: 'string',\n      inside: {\n        'punctuation': {\n          pattern: /(\\().+?(?=\\))/,\n          lookbehind: true\n        }\n      }\n    }],\n    'multiline-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    },\n    'regex': {\n      // Must be prefixed with the keyword \"node\" or a non-word char\n      pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        // Extended regexes must have the x flag. They can contain single-line comments.\n        'extended-regex': {\n          pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n          inside: {\n            'comment': /#.*/\n          }\n        }\n      }\n    },\n    'comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string': {\n      // Allow for one nested level of double quotes inside interpolation\n      pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        'double-quoted': {\n          pattern: /^\"[\\s\\S]*\"$/,\n          inside: {\n            // See interpolation below\n          }\n        }\n      }\n    },\n    'variable': {\n      pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n      inside: {\n        'punctuation': /::/\n      }\n    },\n    'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n    'function': [{\n      pattern: /(\\.)(?!\\d)\\w+/,\n      lookbehind: true\n    }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n    'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n    'boolean': /\\b(?:true|false)\\b/,\n    // Includes words reserved for future use\n    'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n    'datatype': {\n      pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n      alias: 'symbol'\n    },\n    'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n    'punctuation': /[\\[\\]{}().,;]|:+/\n  };\n  var interpolation = [{\n    // Allow for one nested level of braces inside interpolation\n    pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n    lookbehind: true,\n    inside: {\n      'short-variable': {\n        // Negative look-ahead prevent wrong highlighting of functions\n        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          'punctuation': /::/\n        }\n      },\n      'delimiter': {\n        pattern: /^\\$/,\n        alias: 'variable'\n      },\n      rest: Prism.languages.puppet\n    }\n  }, {\n    pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n    lookbehind: true,\n    alias: 'variable',\n    inside: {\n      'punctuation': /::/\n    }\n  }];\n  Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\n  Prism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-puppet.js"],"names":["Prism","languages","puppet","pattern","lookbehind","alias","inside","greedy","interpolation","rest"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EACjBA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAG;IACxB,SAAS,EAAE;IACV;IACA;MACCC,OAAO,EAAE,oHAAoH;MAC7HC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE;QACP;QACA,aAAa,EAAE;QACf;MACD;IACD,CAAC;IACD;IACA;MACCH,OAAO,EAAE,kHAAkH;MAC3HC,UAAU,EAAE,IAAI;MAChBG,MAAM,EAAE,IAAI;MACZF,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE;QACP;QACA,aAAa,EAAE;MAChB;IACD,CAAC;IACD;IACA;MACCH,OAAO,EAAE,6CAA6C;MACtDE,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE;QACP,aAAa,EAAE;UACdH,OAAO,EAAE,eAAe;UACxBC,UAAU,EAAE;QACb;MACD;IACD,CAAC,CACD;IACD,mBAAmB,EAAE;MACpBD,OAAO,EAAE,2BAA2B;MACpCC,UAAU,EAAE,IAAI;MAChBG,MAAM,EAAE,IAAI;MACZF,KAAK,EAAE;IACR,CAAC;IACD,OAAO,EAAE;MACR;MACAF,OAAO,EAAE,sFAAsF;MAC/FC,UAAU,EAAE,IAAI;MAChBG,MAAM,EAAE,IAAI;MACZD,MAAM,EAAE;QACP;QACA,gBAAgB,EAAE;UACjBH,OAAO,EAAE,wCAAwC;UACjDG,MAAM,EAAE;YACP,SAAS,EAAE;UACZ;QACD;MACD;IACD,CAAC;IACD,SAAS,EAAE;MACVH,OAAO,EAAE,cAAc;MACvBC,UAAU,EAAE,IAAI;MAChBG,MAAM,EAAE;IACT,CAAC;IACD,QAAQ,EAAE;MACT;MACAJ,OAAO,EAAE,iGAAiG;MAC1GI,MAAM,EAAE,IAAI;MACZD,MAAM,EAAE;QACP,eAAe,EAAE;UAChBH,OAAO,EAAE,aAAa;UACtBG,MAAM,EAAE;YACP;UAAA;QAEF;MACD;IACD,CAAC;IACD,UAAU,EAAE;MACXH,OAAO,EAAE,wBAAwB;MACjCG,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,WAAW,EAAE,uBAAuB;IACpC,UAAU,EAAE,CACX;MACCH,OAAO,EAAE,eAAe;MACxBC,UAAU,EAAE;IACb,CAAC,EACD,kGAAkG,CAClG;IACD,QAAQ,EAAE,8CAA8C;IACxD,SAAS,EAAE,oBAAoB;IAC/B;IACA,SAAS,EAAE,4IAA4I;IACvJ,UAAU,EAAE;MACXD,OAAO,EAAE,+MAA+M;MACxNE,KAAK,EAAE;IACR,CAAC;IACD,UAAU,EAAE,kFAAkF;IAC9F,aAAa,EAAE;EAChB,CAAC;EAED,IAAIG,aAAa,GAAG,CACnB;IACC;IACAL,OAAO,EAAE,yEAAyE;IAClFC,UAAU,EAAE,IAAI;IAChBE,MAAM,EAAE;MACP,gBAAgB,EAAE;QACjB;QACAH,OAAO,EAAE,sCAAsC;QAC/CC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE,UAAU;QACjBC,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD,CAAC;MACD,WAAW,EAAE;QACZH,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE;MACR,CAAC;MACDI,IAAI,EAAET,KAAK,CAACC,SAAS,CAACC;IACvB;EACD,CAAC,EACD;IACCC,OAAO,EAAE,iCAAiC;IAC1CC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAE;MACP,aAAa,EAAE;IAChB;EACD,CAAC,CACD;EACDN,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAACI,MAAM,CAACE,aAAa,GAAGA,aAAa;EACzER,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAACI,MAAM,CAAC,eAAe,CAAC,CAACA,MAAM,CAACE,aAAa,GAAGA,aAAa;AAC9F,CAAC,EAACR,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\tPrism.languages.puppet = {\n\t\t'heredoc': [\n\t\t\t// Matches the content of a quoted heredoc string (subject to interpolation)\n\t\t\t{\n\t\t\t\tpattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t// Matches the end tag\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\n\t\t\t\t\t// See interpolation below\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Matches the content of an unquoted heredoc string (no interpolation)\n\t\t\t{\n\t\t\t\tpattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t// Matches the end tag\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Matches the start tag of heredoc strings\n\t\t\t{\n\t\t\t\tpattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\tpattern: /(\\().+?(?=\\))/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'multiline-comment': {\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'regex': {\n\t\t\t// Must be prefixed with the keyword \"node\" or a non-word char\n\t\t\tpattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t// Extended regexes must have the x flag. They can contain single-line comments.\n\t\t\t\t'extended-regex': {\n\t\t\t\t\tpattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': /#.*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t},\n\t\t'string': {\n\t\t\t// Allow for one nested level of double quotes inside interpolation\n\t\t\tpattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'double-quoted': {\n\t\t\t\t\tpattern: /^\"[\\s\\S]*\"$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// See interpolation below\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t},\n\t\t'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(\\.)(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n\t\t],\n\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t// Includes words reserved for future use\n\t\t'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n\t\t'datatype': {\n\t\t\tpattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n\t\t'punctuation': /[\\[\\]{}().,;]|:+/\n\t};\n\n\tvar interpolation = [\n\t\t{\n\t\t\t// Allow for one nested level of braces inside interpolation\n\t\t\tpattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'short-variable': {\n\t\t\t\t\t// Negative look-ahead prevent wrong highlighting of functions\n\t\t\t\t\tpattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /::/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^\\$/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.puppet\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t}\n\t];\n\tPrism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\n\tPrism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\n}(Prism));\n"]}}