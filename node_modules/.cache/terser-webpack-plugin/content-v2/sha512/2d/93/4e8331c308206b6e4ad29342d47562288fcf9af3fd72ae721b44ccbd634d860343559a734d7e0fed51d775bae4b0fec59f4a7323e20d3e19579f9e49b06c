{"code":"(this[\"webpackJsonp@dev-book/local-client\"]=this[\"webpackJsonp@dev-book/local-client\"]||[]).push([[254],{431:function(a,t){!function(a){a.languages.latte={comment:/^\\{\\*[\\s\\S]*/,ld:{pattern:/^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,inside:{punctuation:/^\\{\\/?/,tag:{pattern:/.+/,alias:\"important\"}}},rd:{pattern:/\\}$/,inside:{punctuation:/.+/}},php:{pattern:/\\S(?:[\\s\\S]*\\S)?/,alias:\"language-php\",inside:a.languages.php}};var t=a.languages.extend(\"markup\",{});a.languages.insertBefore(\"inside\",\"attr-value\",{\"n-attr\":{pattern:/n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,inside:{\"attr-name\":{pattern:/^[^\\s=]+/,alias:\"important\"},\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{punctuation:[/^=/,{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:!0}],php:{pattern:/\\S(?:[\\s\\S]*\\S)?/,inside:a.languages.php}}}}}},t.tag),a.hooks.add(\"before-tokenize\",(function(e){if(\"latte\"===e.language){a.languages[\"markup-templating\"].buildPlaceholders(e,\"latte\",/\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g),e.grammar=t}})),a.hooks.add(\"after-tokenize\",(function(t){a.languages[\"markup-templating\"].tokenizePlaceholders(t,\"latte\")}))}(Prism)}}]);","name":"static/js/254.9e56dd97.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","latte","comment","ld","pattern","inside","punctuation","tag","alias","rd","php","markupLatte","extend","insertBefore","lookbehind","hooks","add","env","language","buildPlaceholders","grammar","tokenizePlaceholders"],"sources":["static/js/254.9e56dd97.chunk.js"],"mappings":"CAACA,KAAK,sCAAwCA,KAAK,uCAAyC,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtG,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACTA,EAAMC,UAAUC,MAAQ,CACtBC,QAAW,eACXC,GAAM,CACJC,QAAS,kCACTC,OAAQ,CACNC,YAAe,SACfC,IAAO,CACLH,QAAS,KACTI,MAAO,eAIbC,GAAM,CACJL,QAAS,MACTC,OAAQ,CACNC,YAAe,OAGnBI,IAAO,CACLN,QAAS,mBACTI,MAAO,eACPH,OAAQN,EAAMC,UAAUU,MAG5B,IAAIC,EAAcZ,EAAMC,UAAUY,OAAO,SAAU,CAAC,GACpDb,EAAMC,UAAUa,aAAa,SAAU,aAAc,CACnD,SAAU,CACRT,QAAS,qDACTC,OAAQ,CACN,YAAa,CACXD,QAAS,WACTI,MAAO,aAET,aAAc,CACZJ,QAAS,WACTC,OAAQ,CACNC,YAAe,CAAC,KAAM,CACpBF,QAAS,mBACTU,YAAY,IAEdJ,IAAO,CACLN,QAAS,mBACTC,OAAQN,EAAMC,UAAUU,UAMjCC,EAAYJ,KACfR,EAAMgB,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,GAAqB,UAAjBA,EAAIC,SAAR,CAIAnB,EAAMC,UAAU,qBAAqBmB,kBAAkBF,EAAK,QADzC,yHAEnBA,EAAIG,QAAUT,CAHd,CAIF,IACAZ,EAAMgB,MAAMC,IAAI,kBAAkB,SAAUC,GAC1ClB,EAAMC,UAAU,qBAAqBqB,qBAAqBJ,EAAK,QACjE,GACD,CA7DD,CA6DGlB,MAEI"},"input":"(this[\"webpackJsonp@dev-book/local-client\"] = this[\"webpackJsonp@dev-book/local-client\"] || []).push([[254],{\n\n/***/ 431:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  Prism.languages.latte = {\n    'comment': /^\\{\\*[\\s\\S]*/,\n    'ld': {\n      pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,\n      inside: {\n        'punctuation': /^\\{\\/?/,\n        'tag': {\n          pattern: /.+/,\n          alias: 'important'\n        }\n      }\n    },\n    'rd': {\n      pattern: /\\}$/,\n      inside: {\n        'punctuation': /.+/\n      }\n    },\n    'php': {\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      alias: 'language-php',\n      inside: Prism.languages.php\n    }\n  };\n  var markupLatte = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'n-attr': {\n      pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n      inside: {\n        'attr-name': {\n          pattern: /^[^\\s=]+/,\n          alias: 'important'\n        },\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'punctuation': [/^=/, {\n              pattern: /^(\\s*)[\"']|[\"']$/,\n              lookbehind: true\n            }],\n            'php': {\n              pattern: /\\S(?:[\\s\\S]*\\S)?/,\n              inside: Prism.languages.php\n            }\n          }\n        }\n      }\n    }\n  }, markupLatte.tag);\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'latte') {\n      return;\n    }\n    var lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'latte', lattePattern);\n    env.grammar = markupLatte;\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte');\n  });\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-latte.js"],"names":["Prism","languages","latte","pattern","inside","alias","php","markupLatte","extend","insertBefore","lookbehind","tag","hooks","add","env","language","lattePattern","buildPlaceholders","grammar","tokenizePlaceholders"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EACjBA,KAAK,CAACC,SAAS,CAACC,KAAK,GAAG;IACvB,SAAS,EAAE,cAAc;IACzB,IAAI,EAAE;MACLC,OAAO,EAAE,iCAAiC;MAC1CC,MAAM,EAAE;QACP,aAAa,EAAE,QAAQ;QACvB,KAAK,EAAE;UACND,OAAO,EAAE,IAAI;UACbE,KAAK,EAAE;QACR;MACD;IACD,CAAC;IACD,IAAI,EAAE;MACLF,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,KAAK,EAAE;MACND,OAAO,EAAE,kBAAkB;MAC3BE,KAAK,EAAE,cAAc;MACrBD,MAAM,EAAEJ,KAAK,CAACC,SAAS,CAACK;IACzB;EACD,CAAC;EAED,IAAIC,WAAW,GAAGP,KAAK,CAACC,SAAS,CAACO,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;EACtDR,KAAK,CAACC,SAAS,CAACQ,YAAY,CAAC,QAAQ,EAAE,YAAY,EAAE;IACpD,QAAQ,EAAE;MACTN,OAAO,EAAE,oDAAoD;MAC7DC,MAAM,EAAE;QACP,WAAW,EAAE;UACZD,OAAO,EAAE,UAAU;UACnBE,KAAK,EAAE;QACR,CAAC;QACD,YAAY,EAAE;UACbF,OAAO,EAAE,UAAU;UACnBC,MAAM,EAAE;YACP,aAAa,EAAE,CACd,IAAI,EACJ;cACCD,OAAO,EAAE,kBAAkB;cAC3BO,UAAU,EAAE;YACb,CAAC,CACD;YACD,KAAK,EAAE;cACNP,OAAO,EAAE,kBAAkB;cAC3BC,MAAM,EAAEJ,KAAK,CAACC,SAAS,CAACK;YACzB;UACD;QACD;MACD;IACD;EACD,CAAC,EAAEC,WAAW,CAACI,GAAG,CAAC;EAEnBX,KAAK,CAACY,KAAK,CAACC,GAAG,CAAC,iBAAiB,EAAE,UAAUC,GAAG,EAAE;IACjD,IAAIA,GAAG,CAACC,QAAQ,KAAK,OAAO,EAAE;MAC7B;IACD;IACA,IAAIC,YAAY,GAAG,uHAAuH;IAC1IhB,KAAK,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAACgB,iBAAiB,CAACH,GAAG,EAAE,OAAO,EAAEE,YAAY,CAAC;IAClFF,GAAG,CAACI,OAAO,GAAGX,WAAW;EAC1B,CAAC,CAAC;EAEFP,KAAK,CAACY,KAAK,CAACC,GAAG,CAAC,gBAAgB,EAAE,UAAUC,GAAG,EAAE;IAChDd,KAAK,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAACkB,oBAAoB,CAACL,GAAG,EAAE,OAAO,CAAC;EACxE,CAAC,CAAC;AAEH,CAAC,EAACd,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\tPrism.languages.latte = {\n\t\t'comment': /^\\{\\*[\\s\\S]*/,\n\t\t'ld': {\n\t\t\tpattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\{\\/?/,\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /.+/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'rd': {\n\t\t\tpattern: /\\}$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /.+/\n\t\t\t}\n\t\t},\n\t\t'php': {\n\t\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\t\talias: 'language-php',\n\t\t\tinside: Prism.languages.php\n\t\t}\n\t};\n\n\tvar markupLatte = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'n-attr': {\n\t\t\tpattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^[^\\s=]+/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t},\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'php': {\n\t\t\t\t\t\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\t\t\t\t\t\tinside: Prism.languages.php\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t}, markupLatte.tag);\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tif (env.language !== 'latte') {\n\t\t\treturn;\n\t\t}\n\t\tvar lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*?\\}/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'latte', lattePattern);\n\t\tenv.grammar = markupLatte;\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'latte');\n\t});\n\n}(Prism));\n"]}}