{"ast":null,"code":"Prism.languages.lolcode = {\n  comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n  string: {\n    pattern: /\"(?::.|[^\":])*\"/,\n    inside: {\n      variable: /:\\{[^}]+\\}/,\n      symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n    },\n    greedy: !0\n  },\n  number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n  symbol: {\n    pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n    lookbehind: !0,\n    inside: {\n      keyword: /A(?=\\s)/\n    }\n  },\n  label: {\n    pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  function: {\n    pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n    lookbehind: !0\n  },\n  keyword: [{\n    pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n    lookbehind: !0\n  }, /'Z(?=\\s|,|$)/],\n  boolean: {\n    pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  variable: {\n    pattern: /(^|\\s)IT(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  operator: {\n    pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  punctuation: /\\.{3}|…|,|!/\n};","map":{"version":3,"names":["Prism","languages","lolcode","comment","string","pattern","inside","variable","symbol","greedy","number","lookbehind","keyword","label","alias","function","boolean","operator","punctuation"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-lolcode.min.js"],"sourcesContent":["Prism.languages.lolcode={comment:[/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/,/\\bBTW.+/],string:{pattern:/\"(?::.|[^\":])*\"/,inside:{variable:/:\\{[^}]+\\}/,symbol:[/:\\([a-f\\d]+\\)/i,/:\\[[^\\]]+\\]/,/:[)>o\":]/]},greedy:!0},number:/(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,symbol:{pattern:/(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,lookbehind:!0,inside:{keyword:/A(?=\\s)/}},label:{pattern:/((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,lookbehind:!0,alias:\"string\"},function:{pattern:/((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,lookbehind:!0},keyword:[{pattern:/(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,lookbehind:!0},/'Z(?=\\s|,|$)/],boolean:{pattern:/(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,lookbehind:!0},variable:{pattern:/(^|\\s)IT(?=\\s|,|$)/,lookbehind:!0},operator:{pattern:/(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,lookbehind:!0},punctuation:/\\.{3}|…|,|!/};"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,OAAO,GAAC;EAACC,OAAO,EAAC,CAAC,0BAA0B,EAAC,SAAS,CAAC;EAACC,MAAM,EAAC;IAACC,OAAO,EAAC,iBAAiB;IAACC,MAAM,EAAC;MAACC,QAAQ,EAAC,YAAY;MAACC,MAAM,EAAC,CAAC,gBAAgB,EAAC,aAAa,EAAC,UAAU;IAAC,CAAC;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC;EAACC,MAAM,EAAC,qCAAqC;EAACF,MAAM,EAAC;IAACH,OAAO,EAAC,gEAAgE;IAACM,UAAU,EAAC,CAAC,CAAC;IAACL,MAAM,EAAC;MAACM,OAAO,EAAC;IAAS;EAAC,CAAC;EAACC,KAAK,EAAC;IAACR,OAAO,EAAC,gDAAgD;IAACM,UAAU,EAAC,CAAC,CAAC;IAACG,KAAK,EAAC;EAAQ,CAAC;EAACC,QAAQ,EAAC;IAACV,OAAO,EAAC,4CAA4C;IAACM,UAAU,EAAC,CAAC;EAAC,CAAC;EAACC,OAAO,EAAC,CAAC;IAACP,OAAO,EAAC,qRAAqR;IAACM,UAAU,EAAC,CAAC;EAAC,CAAC,EAAC,cAAc,CAAC;EAACK,OAAO,EAAC;IAACX,OAAO,EAAC,8BAA8B;IAACM,UAAU,EAAC,CAAC;EAAC,CAAC;EAACJ,QAAQ,EAAC;IAACF,OAAO,EAAC,oBAAoB;IAACM,UAAU,EAAC,CAAC;EAAC,CAAC;EAACM,QAAQ,EAAC;IAACZ,OAAO,EAAC,sHAAsH;IAACM,UAAU,EAAC,CAAC;EAAC,CAAC;EAACO,WAAW,EAAC;AAAa,CAAC"},"metadata":{},"sourceType":"script"}