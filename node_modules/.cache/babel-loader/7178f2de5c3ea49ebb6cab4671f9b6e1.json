{"ast":null,"code":"/*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n\n// PureBasic support, steal stuff from ansi-c\nPrism.languages.purebasic = Prism.languages.extend('clike', {\n  'comment': /;.*/,\n  'keyword': /\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,\n  'function': /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n  'number': /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n  'operator': /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n});\nPrism.languages.insertBefore('purebasic', 'keyword', {\n  'tag': /#\\w+/,\n  'asm': {\n    pattern: /(^[\\t ]*)!.*/m,\n    lookbehind: true,\n    alias: 'tag',\n    inside: {\n      'comment': /;.*/,\n      'string': {\n        pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      // Anonymous label references, i.e.: jmp @b\n      'label-reference-anonymous': {\n        pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n        lookbehind: true,\n        alias: 'fasm-label'\n      },\n      // Named label reference, i.e.: jne label1\n      'label-reference-addressed': {\n        pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n        lookbehind: true,\n        alias: 'fasm-label'\n      },\n      'function': {\n        pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n        lookbehind: true\n      },\n      'function-inline': {\n        pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'label': {\n        pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n        lookbehind: true,\n        alias: 'fasm-label'\n      },\n      'keyword': [/\\b(?:extern|global)\\b[^;\\r\\n]*/i, /\\b(?:CPU|FLOAT|DEFAULT)\\b.*/],\n      'register': /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,\n      'number': /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n      'operator': /[\\[\\]*+\\-/%<>=&|$!,.:]/\n    }\n  }\n});\ndelete Prism.languages.purebasic['class-name'];\ndelete Prism.languages.purebasic['boolean'];\nPrism.languages.pbfasm = Prism.languages['purebasic'];","map":{"version":3,"names":["Prism","languages","purebasic","extend","insertBefore","pattern","lookbehind","alias","inside","greedy","pbfasm"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-purebasic.js"],"sourcesContent":["/*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n\n\n// PureBasic support, steal stuff from ansi-c\nPrism.languages.purebasic = Prism.languages.extend('clike', {\n\t'comment': /;.*/,\n\t'keyword': /\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,\n\t'function': /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n\t'number': /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n});\n\nPrism.languages.insertBefore('purebasic', 'keyword', {\n\t'tag': /#\\w+/,\n\t'asm': {\n\t\tpattern: /(^[\\t ]*)!.*/m,\n\t\tlookbehind: true,\n\t\talias: 'tag',\n\t\tinside: {\n\t\t\t'comment': /;.*/,\n\t\t\t'string': {\n\t\t\t\tpattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t// Anonymous label references, i.e.: jmp @b\n\t\t\t'label-reference-anonymous': {\n\t\t\t\tpattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'fasm-label'\n\t\t\t},\n\t\t\t// Named label reference, i.e.: jne label1\n\t\t\t'label-reference-addressed': {\n\t\t\t\tpattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'fasm-label'\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'function-inline': {\n\t\t\t\tpattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'label': {\n\t\t\t\tpattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'fasm-label'\n\t\t\t},\n\t\t\t'keyword': [\n\t\t\t\t/\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n\t\t\t\t/\\b(?:CPU|FLOAT|DEFAULT)\\b.*/\n\t\t\t],\n\t\t\t'register': /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,\n\t\t\t'number': /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n\t\t\t'operator': /[\\[\\]*+\\-/%<>=&|$!,.:]/\n\t\t}\n\t}\n});\n\ndelete Prism.languages.purebasic['class-name'];\ndelete Prism.languages.purebasic['boolean'];\n\nPrism.languages.pbfasm = Prism.languages['purebasic'];\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACAA,KAAK,CAACC,SAAS,CAACC,SAAS,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;EAC3D,SAAS,EAAE,KAAK;EAChB,SAAS,EAAE,87BAA87B;EACz8B,UAAU,EAAE,0BAA0B;EACtC,QAAQ,EAAE,6DAA6D;EACvE,UAAU,EAAE;AACb,CAAC,CAAC;AAEFH,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,WAAW,EAAE,SAAS,EAAE;EACpD,KAAK,EAAE,MAAM;EACb,KAAK,EAAE;IACNC,OAAO,EAAE,eAAe;IACxBC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;MACP,SAAS,EAAE,KAAK;MAChB,QAAQ,EAAE;QACTH,OAAO,EAAE,mCAAmC;QAC5CI,MAAM,EAAE;MACT,CAAC;MACD;MACA,2BAA2B,EAAE;QAC5BJ,OAAO,EAAE,wBAAwB;QACjCC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACR,CAAC;MACD;MACA,2BAA2B,EAAE;QAC5BF,OAAO,EAAE,wCAAwC;QACjDC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACR,CAAC;MACD,UAAU,EAAE;QACXF,OAAO,EAAE,iCAAiC;QAC1CC,UAAU,EAAE;MACb,CAAC;MACD,iBAAiB,EAAE;QAClBD,OAAO,EAAE,uBAAuB;QAChCC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACR,CAAC;MACD,OAAO,EAAE;QACRF,OAAO,EAAE,6CAA6C;QACtDC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAE;MACR,CAAC;MACD,SAAS,EAAE,CACV,iCAAiC,EACjC,6BAA6B,CAC7B;MACD,UAAU,EAAE,+GAA+G;MAC3H,QAAQ,EAAE,iMAAiM;MAC3M,UAAU,EAAE;IACb;EACD;AACD,CAAC,CAAC;AAEF,OAAOP,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,YAAY,CAAC;AAC9C,OAAOF,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,SAAS,CAAC;AAE3CF,KAAK,CAACC,SAAS,CAACS,MAAM,GAAGV,KAAK,CAACC,SAAS,CAAC,WAAW,CAAC"},"metadata":{},"sourceType":"script"}