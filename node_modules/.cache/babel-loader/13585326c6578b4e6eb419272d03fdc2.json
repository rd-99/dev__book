{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { bold } from './bold';\nimport { code } from './code';\nimport { italic } from './italic';\nimport { link } from './link';\nimport { unorderedListCommand, orderedListCommand, checkedListCommand } from './list';\nimport { quote } from './quote';\nimport { hr } from './hr';\nimport { title } from './title';\nimport { title1 } from './title1';\nimport { title2 } from './title2';\nimport { title3 } from './title3';\nimport { title4 } from './title4';\nimport { title5 } from './title5';\nimport { title6 } from './title6';\nimport { group } from './group';\nimport { divider } from './divider';\nimport { codePreview, codeEdit, codeLive } from './preview';\nimport { fullscreen } from './fullscreen';\nimport { image } from './image';\nimport { strikethrough } from './strikeThrough';\nimport insertText from '../utils/InsertTextAtPosition';\nvar getCommands = function getCommands() {\n  return [bold, italic, strikethrough, hr, title, divider, link, quote, code, image, divider, unorderedListCommand, orderedListCommand, checkedListCommand, divider, codeEdit, codeLive, codePreview, divider, fullscreen];\n};\nfunction getStateFromTextArea(textArea) {\n  console.log('textArea:', textArea);\n  return {\n    selection: {\n      start: textArea.selectionStart,\n      end: textArea.selectionEnd\n    },\n    text: textArea.value,\n    selectedText: textArea.value.slice(textArea.selectionStart, textArea.selectionEnd)\n  };\n}\nvar TextAreaTextApi = /*#__PURE__*/function () {\n  function TextAreaTextApi(textArea) {\n    _classCallCheck(this, TextAreaTextApi);\n    this.textArea = void 0;\n    this.textArea = textArea;\n  }\n  _createClass(TextAreaTextApi, [{\n    key: \"replaceSelection\",\n    value: function replaceSelection(text) {\n      insertText(this.textArea, text);\n      return getStateFromTextArea(this.textArea);\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(selection) {\n      this.textArea.focus();\n      this.textArea.selectionStart = selection.start;\n      this.textArea.selectionEnd = selection.end;\n      return getStateFromTextArea(this.textArea);\n    }\n  }]);\n  return TextAreaTextApi;\n}();\nvar TextAreaCommandOrchestrator = /*#__PURE__*/function () {\n  function TextAreaCommandOrchestrator(textArea) {\n    _classCallCheck(this, TextAreaCommandOrchestrator);\n    this.textArea = void 0;\n    this.textApi = void 0;\n    this.textArea = textArea;\n    this.textApi = new TextAreaTextApi(textArea);\n  }\n  _createClass(TextAreaCommandOrchestrator, [{\n    key: \"getState\",\n    value: function getState() {\n      console.log('>getState>', this.textArea);\n      if (!this.textArea) return false;\n      return getStateFromTextArea(this.textArea);\n    }\n  }, {\n    key: \"executeCommand\",\n    value: function executeCommand(command) {\n      command.execute && command.execute(getStateFromTextArea(this.textArea), this.textApi);\n    }\n  }]);\n  return TextAreaCommandOrchestrator;\n}();\nexport {\n// Toolbars.\ntitle, title1, title2, title3, title4, title5, title6, bold, italic, strikethrough, hr, group, divider, link, quote, code, image, unorderedListCommand, orderedListCommand, checkedListCommand, codeEdit, codeLive, codePreview, fullscreen // Tool method.\n, getCommands, getStateFromTextArea, TextAreaCommandOrchestrator, TextAreaTextApi };","map":{"version":3,"names":["bold","code","italic","link","unorderedListCommand","orderedListCommand","checkedListCommand","quote","hr","title","title1","title2","title3","title4","title5","title6","group","divider","codePreview","codeEdit","codeLive","fullscreen","image","strikethrough","insertText","getCommands","getStateFromTextArea","textArea","console","log","selection","start","selectionStart","end","selectionEnd","text","value","selectedText","slice","TextAreaTextApi","_classCallCheck","focus","TextAreaCommandOrchestrator","textApi","command","execute"],"sources":["../../../src/commands/index.ts"],"sourcesContent":["import { bold } from './bold';\nimport { code } from './code';\nimport { italic } from './italic';\nimport { link } from './link';\nimport { unorderedListCommand, orderedListCommand, checkedListCommand } from './list';\nimport { quote } from './quote';\nimport { hr } from './hr';\nimport { title } from './title';\nimport { title1 } from './title1';\nimport { title2 } from './title2';\nimport { title3 } from './title3';\nimport { title4 } from './title4';\nimport { title5 } from './title5';\nimport { title6 } from './title6';\nimport { group } from './group';\nimport { divider } from './divider';\nimport { codePreview, codeEdit, codeLive } from './preview';\nimport { fullscreen } from './fullscreen';\nimport { image } from './image';\nimport { strikethrough } from './strikeThrough';\nimport insertText from '../utils/InsertTextAtPosition';\n\nexport interface CommandOrchestrator {\n  executeCommand(command: ICommand): void\n}\nexport type ICommandChildHandleParam = {\n  getState?: TextAreaCommandOrchestrator['getState'];\n  textApi?: TextApi;\n}\nexport type ICommandChildHandle  = {\n  children?: (handle: { close: () => void; execute: () => void } & ICommandChildHandleParam) => React.ReactElement;\n}\nexport type ICommandChildCommands<T = string> = {\n  children?: Array<ICommand<T>>;\n}\n\nexport type ICommand<T = string> = {\n  keyCommand?: string,\n  name?: string,\n  groupName?: string,\n  icon?: React.ReactElement,\n  value?: T,\n  position?: 'right'\n  liProps?: React.LiHTMLAttributes<HTMLLIElement>,\n  buttonProps?: React.ButtonHTMLAttributes<HTMLButtonElement> | null,\n  execute?: (state: TextState, api: TextApi) => void,\n} & ICommandChildCommands & ICommandChildHandle;\n\n\nexport interface TextRange {\n  start: number;\n  end: number;\n}\n\nexport interface TextState {\n  text: string,\n  selectedText: string,\n  selection: TextRange,\n}\n\nexport interface TextApi {\n  /**\n   * Replaces the current selection with the new text. This will make the new selectedText to be empty, the\n   * selection start and selection end will be the same and will both point to the end\n   * @param text Text that should replace the current selection\n   */\n  replaceSelection(text: string): TextState;\n\n  /**\n   * Selects the specified text range\n   * @param selection\n   */\n  setSelectionRange(selection: TextRange): TextState;\n}\n\nconst getCommands: () => ICommand[] = () => [\n  bold, italic, strikethrough, hr, title,\n  divider, link, quote, code, image, divider,\n  unorderedListCommand, orderedListCommand, checkedListCommand, divider, codeEdit, codeLive, codePreview, divider, fullscreen,\n];\n\nfunction getStateFromTextArea(textArea: HTMLTextAreaElement): TextState {\n  console.log('textArea:', textArea)\n  return {\n    selection: {\n      start: textArea.selectionStart,\n      end: textArea.selectionEnd\n    },\n    text: textArea.value,\n    selectedText: textArea.value.slice(textArea.selectionStart, textArea.selectionEnd)\n  };\n}\n\nclass TextAreaTextApi implements TextApi {\n  textArea: HTMLTextAreaElement;\n\n  constructor(textArea: HTMLTextAreaElement) {\n    this.textArea = textArea;\n  }\n\n  replaceSelection(text: string): TextState {\n    insertText(this.textArea, text);\n    return getStateFromTextArea(this.textArea);\n  }\n\n  setSelectionRange(selection: TextRange): TextState {\n    this.textArea.focus();\n    this.textArea.selectionStart = selection.start;\n    this.textArea.selectionEnd = selection.end;\n    return getStateFromTextArea(this.textArea);\n  }\n}\n\n\nclass TextAreaCommandOrchestrator implements CommandOrchestrator {\n  textArea: HTMLTextAreaElement;\n  textApi: TextApi;\n\n  constructor(textArea: HTMLTextAreaElement) {\n    this.textArea = textArea;\n    this.textApi = new TextAreaTextApi(textArea);\n  }\n\n  getState() {\n    console.log('>getState>', this.textArea)\n    if (!this.textArea) return false;\n    return getStateFromTextArea(this.textArea);\n  }\n\n  executeCommand(command: ICommand<string>): void {\n    command.execute && command.execute(getStateFromTextArea(this.textArea), this.textApi);\n  }\n}\n\nexport {\n  // Toolbars.\n  title, title1, title2, title3, title4, title5, title6,\n  bold, italic, strikethrough, hr, group, divider, link, quote, code, image,\n  unorderedListCommand, orderedListCommand, checkedListCommand, codeEdit, codeLive, codePreview, fullscreen,\n  // Tool method.\n  getCommands, getStateFromTextArea, TextAreaCommandOrchestrator, TextAreaTextApi\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}