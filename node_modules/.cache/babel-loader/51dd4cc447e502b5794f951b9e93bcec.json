{"ast":null,"code":"Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n        lookbehind: !0,\n        inside: {\n          interpolation: {\n            pattern: /^\\$\\w*/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n  operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n}), Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n  regex: {\n    pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n    greedy: !0\n  }\n}), Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n  preprocessor: {\n    pattern: /#\\w+/,\n    alias: \"builtin\"\n  },\n  metadata: {\n    pattern: /@:?\\w+/,\n    alias: \"symbol\"\n  },\n  reification: {\n    pattern: /\\$(?:\\w+|(?=\\{))/,\n    alias: \"variable\"\n  }\n}), Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe, delete Prism.languages.haxe[\"class-name\"];","map":{"version":3,"names":["Prism","languages","haxe","extend","string","pattern","greedy","inside","interpolation","lookbehind","alias","keyword","operator","insertBefore","regex","preprocessor","metadata","reification","rest"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-haxe.min.js"],"sourcesContent":["Prism.languages.haxe=Prism.languages.extend(\"clike\",{string:{pattern:/([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{interpolation:{pattern:/(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,lookbehind:!0,inside:{interpolation:{pattern:/^\\$\\w*/,alias:\"variable\"}}}}},keyword:/\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,operator:/\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/}),Prism.languages.insertBefore(\"haxe\",\"class-name\",{regex:{pattern:/~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,greedy:!0}}),Prism.languages.insertBefore(\"haxe\",\"keyword\",{preprocessor:{pattern:/#\\w+/,alias:\"builtin\"},metadata:{pattern:/@:?\\w+/,alias:\"symbol\"},reification:{pattern:/\\$(?:\\w+|(?=\\{))/,alias:\"variable\"}}),Prism.languages.haxe.string.inside.interpolation.inside.rest=Prism.languages.haxe,delete Prism.languages.haxe[\"class-name\"];"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,IAAI,GAACF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAC;EAACC,MAAM,EAAC;IAACC,OAAO,EAAC,mCAAmC;IAACC,MAAM,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC;MAACC,aAAa,EAAC;QAACH,OAAO,EAAC,8BAA8B;QAACI,UAAU,EAAC,CAAC,CAAC;QAACF,MAAM,EAAC;UAACC,aAAa,EAAC;YAACH,OAAO,EAAC,QAAQ;YAACK,KAAK,EAAC;UAAU;QAAC;MAAC;IAAC;EAAC,CAAC;EAACC,OAAO,EAAC,uRAAuR;EAACC,QAAQ,EAAC;AAA4D,CAAC,CAAC,EAACZ,KAAK,CAACC,SAAS,CAACY,YAAY,CAAC,MAAM,EAAC,YAAY,EAAC;EAACC,KAAK,EAAC;IAACT,OAAO,EAAC,mCAAmC;IAACC,MAAM,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,EAACN,KAAK,CAACC,SAAS,CAACY,YAAY,CAAC,MAAM,EAAC,SAAS,EAAC;EAACE,YAAY,EAAC;IAACV,OAAO,EAAC,MAAM;IAACK,KAAK,EAAC;EAAS,CAAC;EAACM,QAAQ,EAAC;IAACX,OAAO,EAAC,QAAQ;IAACK,KAAK,EAAC;EAAQ,CAAC;EAACO,WAAW,EAAC;IAACZ,OAAO,EAAC,kBAAkB;IAACK,KAAK,EAAC;EAAU;AAAC,CAAC,CAAC,EAACV,KAAK,CAACC,SAAS,CAACC,IAAI,CAACE,MAAM,CAACG,MAAM,CAACC,aAAa,CAACD,MAAM,CAACW,IAAI,GAAClB,KAAK,CAACC,SAAS,CAACC,IAAI,EAAC,OAAOF,KAAK,CAACC,SAAS,CAACC,IAAI,CAAC,YAAY,CAAC"},"metadata":{},"sourceType":"script"}