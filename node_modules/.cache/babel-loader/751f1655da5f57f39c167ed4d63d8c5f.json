{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar babylon = require('@babel/parser');\nvar defaultOptions = {\n  sourceType: 'module',\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [['flow', {\n    all: true\n  }], 'flowComments', 'jsx', 'asyncGenerators', 'bigInt', 'classProperties', 'classPrivateProperties', 'classPrivateMethods', ['decorators', {\n    decoratorsBeforeExport: false\n  }], 'doExpressions', 'dynamicImport', 'exportDefaultFrom', 'exportNamespaceFrom', 'functionBind', 'functionSent', 'importMeta', 'logicalAssignment', 'nullishCoalescingOperator', 'numericSeparator', 'objectRestSpread', 'optionalCatchBinding', 'optionalChaining', ['pipelineOperator', {\n    proposal: 'minimal'\n  }], 'throwExpressions']\n};\n\n/**\n * Wrapper to set default options\n */\nmodule.exports = function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  return {\n    parse: function parse(code) {\n      return babylon.parse(code, options);\n    }\n  };\n};","map":{"version":3,"names":["babylon","require","defaultOptions","sourceType","allowImportExportEverywhere","allowReturnOutsideFunction","startLine","tokens","plugins","all","decoratorsBeforeExport","proposal","module","exports","options","arguments","length","undefined","parse","code"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/jscodeshift/parser/babylon.js"],"sourcesContent":["\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst babylon = require('@babel/parser');\n\nconst defaultOptions = {\n  sourceType: 'module',\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [\n    ['flow', {all: true}],\n    'flowComments',\n    'jsx',\n\n    'asyncGenerators',\n    'bigInt',\n    'classProperties',\n    'classPrivateProperties',\n    'classPrivateMethods',\n    ['decorators', {decoratorsBeforeExport: false}],\n    'doExpressions',\n    'dynamicImport',\n    'exportDefaultFrom',\n    'exportNamespaceFrom',\n    'functionBind',\n    'functionSent',\n    'importMeta',\n    'logicalAssignment',\n    'nullishCoalescingOperator',\n    'numericSeparator',\n    'objectRestSpread',\n    'optionalCatchBinding',\n    'optionalChaining',\n    ['pipelineOperator', {proposal: 'minimal'}],\n    'throwExpressions',\n  ],\n};\n\n/**\n * Wrapper to set default options\n */\nmodule.exports = function(options=defaultOptions) {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    },\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AAExC,IAAMC,cAAc,GAAG;EACrBC,UAAU,EAAE,QAAQ;EACpBC,2BAA2B,EAAE,IAAI;EACjCC,0BAA0B,EAAE,IAAI;EAChCC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE,CACP,CAAC,MAAM,EAAE;IAACC,GAAG,EAAE;EAAI,CAAC,CAAC,EACrB,cAAc,EACd,KAAK,EAEL,iBAAiB,EACjB,QAAQ,EACR,iBAAiB,EACjB,wBAAwB,EACxB,qBAAqB,EACrB,CAAC,YAAY,EAAE;IAACC,sBAAsB,EAAE;EAAK,CAAC,CAAC,EAC/C,eAAe,EACf,eAAe,EACf,mBAAmB,EACnB,qBAAqB,EACrB,cAAc,EACd,cAAc,EACd,YAAY,EACZ,mBAAmB,EACnB,2BAA2B,EAC3B,kBAAkB,EAClB,kBAAkB,EAClB,sBAAsB,EACtB,kBAAkB,EAClB,CAAC,kBAAkB,EAAE;IAACC,QAAQ,EAAE;EAAS,CAAC,CAAC,EAC3C,kBAAkB;AAEtB,CAAC;;AAED;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,YAAiC;EAAA,IAAxBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACb,cAAc;EAC9C,OAAO;IACLgB,KAAK,WAAAA,MAACC,IAAI,EAAE;MACV,OAAOnB,OAAO,CAACkB,KAAK,CAACC,IAAI,EAAEL,OAAO,CAAC;IACrC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}