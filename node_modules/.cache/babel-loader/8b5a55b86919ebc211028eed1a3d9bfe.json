{"ast":null,"code":"Prism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/\n      // See rest below\n    }\n  },\n\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;","map":{"version":3,"names":["Prism","languages","scss","extend","pattern","lookbehind","inside","alias","insertBefore","rest"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-scss.js"],"sourcesContent":["Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i,\n\t\t{\n\t\t\tpattern: /( )(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'module-modifier': {\n\t\tpattern: /\\b(?:as|with|show|hide)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,IAAI,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,KAAK,EAAE;EACpD,SAAS,EAAE;IACVC,OAAO,EAAE,sCAAsC;IAC/CC,UAAU,EAAE;EACb,CAAC;EACD,QAAQ,EAAE;IACTD,OAAO,EAAE,qDAAqD;IAC9DE,MAAM,EAAE;MACP,MAAM,EAAE;MACR;IACD;EACD,CAAC;;EACD;EACA,KAAK,EAAE,yBAAyB;EAChC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAU,EAAE;IACX;IACAF,OAAO,EAAE,iGAAiG;IAC1GE,MAAM,EAAE;MACP,QAAQ,EAAE;QACTF,OAAO,EAAE,GAAG;QACZG,KAAK,EAAE;MACR,CAAC;MACD,aAAa,EAAE,SAAS;MACxB,UAAU,EAAE;IACb;EACD,CAAC;EACD,UAAU,EAAE;IACXH,OAAO,EAAE,0CAA0C;IACnDE,MAAM,EAAE;MACP,UAAU,EAAE;IACb;EACD;AACD,CAAC,CAAC;AAEFN,KAAK,CAACC,SAAS,CAACO,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE;EAC9C,SAAS,EAAE,CACV,mHAAmH,EACnH;IACCJ,OAAO,EAAE,0BAA0B;IACnCC,UAAU,EAAE;EACb,CAAC;AAEH,CAAC,CAAC;AAEFL,KAAK,CAACC,SAAS,CAACO,YAAY,CAAC,MAAM,EAAE,WAAW,EAAE;EACjD;EACA,UAAU,EAAE;AACb,CAAC,CAAC;AAEFR,KAAK,CAACC,SAAS,CAACO,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE;EAChD,iBAAiB,EAAE;IAClBJ,OAAO,EAAE,4BAA4B;IACrCG,KAAK,EAAE;EACR,CAAC;EACD,aAAa,EAAE;IACdH,OAAO,EAAE,SAAS;IAClBG,KAAK,EAAE;EACR,CAAC;EACD,WAAW,EAAE;IACZH,OAAO,EAAE,4BAA4B;IACrCG,KAAK,EAAE;EACR,CAAC;EACD,SAAS,EAAE,oBAAoB;EAC/B,MAAM,EAAE;IACPH,OAAO,EAAE,UAAU;IACnBG,KAAK,EAAE;EACR,CAAC;EACD,UAAU,EAAE;IACXH,OAAO,EAAE,iDAAiD;IAC1DC,UAAU,EAAE;EACb;AACD,CAAC,CAAC;AAEFL,KAAK,CAACC,SAAS,CAACC,IAAI,CAAC,QAAQ,CAAC,CAACI,MAAM,CAACG,IAAI,GAAGT,KAAK,CAACC,SAAS,CAACC,IAAI"},"metadata":{},"sourceType":"script"}