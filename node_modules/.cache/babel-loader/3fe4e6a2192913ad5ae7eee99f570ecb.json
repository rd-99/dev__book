{"ast":null,"code":"Prism.languages.dhall = {\n  comment: /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\$\\{[^{}]*\\}/,\n        inside: {\n          expression: {\n            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: !0,\n            alias: \"language-dhall\",\n            inside: null\n          },\n          punctuation: /\\$\\{|\\}/\n        }\n      }\n    }\n  },\n  label: {\n    pattern: /`[^`]*`/,\n    greedy: !0\n  },\n  url: {\n    pattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n    greedy: !0\n  },\n  env: {\n    pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n    greedy: !0,\n    inside: {\n      function: /^env/,\n      operator: /^:/,\n      variable: /[\\s\\S]+/\n    }\n  },\n  hash: {\n    pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n    inside: {\n      function: /sha256/,\n      operator: /:/,\n      number: /[\\da-fA-F]{64}/\n    }\n  },\n  keyword: /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n  builtin: /\\b(?:Some|None)\\b/,\n  boolean: /\\b(?:False|True)\\b/,\n  number: /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n  operator: /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n  punctuation: /\\.\\.|[{}\\[\\](),./]/,\n  \"class-name\": /\\b[A-Z]\\w*\\b/\n}, Prism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;","map":{"version":3,"names":["Prism","languages","dhall","comment","string","pattern","greedy","inside","interpolation","expression","lookbehind","alias","punctuation","label","url","env","function","operator","variable","hash","number","keyword","builtin","boolean"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-dhall.min.js"],"sourcesContent":["Prism.languages.dhall={comment:/--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^{}]*\\}/,inside:{expression:{pattern:/(^\\$\\{)[\\s\\S]+(?=\\}$)/,lookbehind:!0,alias:\"language-dhall\",inside:null},punctuation:/\\$\\{|\\}/}}}},label:{pattern:/`[^`]*`/,greedy:!0},url:{pattern:/\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,greedy:!0},env:{pattern:/\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,greedy:!0,inside:{function:/^env/,operator:/^:/,variable:/[\\s\\S]+/}},hash:{pattern:/\\bsha256:[\\da-fA-F]{64}\\b/,inside:{function:/sha256/,operator:/:/,number:/[\\da-fA-F]{64}/}},keyword:/\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,builtin:/\\b(?:Some|None)\\b/,boolean:/\\b(?:False|True)\\b/,number:/\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,operator:/\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,punctuation:/\\.\\.|[{}\\[\\](),./]/,\"class-name\":/\\b[A-Z]\\w*\\b/},Prism.languages.dhall.string.inside.interpolation.inside.expression.inside=Prism.languages.dhall;"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,KAAK,GAAC;EAACC,OAAO,EAAC,wEAAwE;EAACC,MAAM,EAAC;IAACC,OAAO,EAAC,2DAA2D;IAACC,MAAM,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC;MAACC,aAAa,EAAC;QAACH,OAAO,EAAC,cAAc;QAACE,MAAM,EAAC;UAACE,UAAU,EAAC;YAACJ,OAAO,EAAC,uBAAuB;YAACK,UAAU,EAAC,CAAC,CAAC;YAACC,KAAK,EAAC,gBAAgB;YAACJ,MAAM,EAAC;UAAI,CAAC;UAACK,WAAW,EAAC;QAAS;MAAC;IAAC;EAAC,CAAC;EAACC,KAAK,EAAC;IAACR,OAAO,EAAC,SAAS;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC;EAACQ,GAAG,EAAC;IAACT,OAAO,EAAC,wFAAwF;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC;EAACS,GAAG,EAAC;IAACV,OAAO,EAAC,wCAAwC;IAACC,MAAM,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC;MAACS,QAAQ,EAAC,MAAM;MAACC,QAAQ,EAAC,IAAI;MAACC,QAAQ,EAAC;IAAS;EAAC,CAAC;EAACC,IAAI,EAAC;IAACd,OAAO,EAAC,2BAA2B;IAACE,MAAM,EAAC;MAACS,QAAQ,EAAC,QAAQ;MAACC,QAAQ,EAAC,GAAG;MAACG,MAAM,EAAC;IAAgB;EAAC,CAAC;EAACC,OAAO,EAAC,oFAAoF;EAACC,OAAO,EAAC,mBAAmB;EAACC,OAAO,EAAC,oBAAoB;EAACH,MAAM,EAAC,+EAA+E;EAACH,QAAQ,EAAC,oGAAoG;EAACL,WAAW,EAAC,oBAAoB;EAAC,YAAY,EAAC;AAAc,CAAC,EAACZ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACE,MAAM,CAACG,MAAM,CAACC,aAAa,CAACD,MAAM,CAACE,UAAU,CAACF,MAAM,GAACP,KAAK,CAACC,SAAS,CAACC,KAAK"},"metadata":{},"sourceType":"script"}