{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst _ = require('lodash');\nconst babylon = require('@babel/parser');\nconst baseOptions = require('./tsOptions');\nconst options = _.merge(baseOptions, {\n  plugins: ['jsx']\n});\n\n/**\n * Doesn't accept custom options because babylon should be used directly in\n * that case.\n */\nmodule.exports = function () {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    }\n  };\n};","map":{"version":3,"names":["_","require","babylon","baseOptions","options","merge","plugins","module","exports","parse","code"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/jscodeshift/parser/tsx.js"],"sourcesContent":["\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst _ = require('lodash');\nconst babylon = require('@babel/parser');\nconst baseOptions = require('./tsOptions');\n\nconst options = _.merge(baseOptions, { plugins: ['jsx'] });\n\n/**\n * Doesn't accept custom options because babylon should be used directly in\n * that case.\n */\nmodule.exports = function() {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    },\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,OAAO,GAAGD,OAAO,CAAC,eAAe,CAAC;AACxC,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AAE1C,MAAMG,OAAO,GAAGJ,CAAC,CAACK,KAAK,CAACF,WAAW,EAAE;EAAEG,OAAO,EAAE,CAAC,KAAK;AAAE,CAAC,CAAC;;AAE1D;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,YAAW;EAC1B,OAAO;IACLC,KAAKA,CAACC,IAAI,EAAE;MACV,OAAOR,OAAO,CAACO,KAAK,CAACC,IAAI,EAAEN,OAAO,CAAC;IACrC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}