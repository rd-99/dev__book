{"ast":null,"code":"Prism.languages.vala = Prism.languages.extend(\"clike\", {\n  \"class-name\": [{\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  keyword: /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n  function: /\\b\\w+(?=\\s*\\()/,\n  number: /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n  operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n  punctuation: /[{}[\\];(),.:]/,\n  constant: /\\b[A-Z0-9_]+\\b/\n}), Prism.languages.insertBefore(\"vala\", \"string\", {\n  \"raw-string\": {\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: !0,\n    alias: \"string\"\n  },\n  \"template-string\": {\n    pattern: /@\"[\\s\\S]*?\"/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\(?|\\)$/,\n            alias: \"punctuation\"\n          },\n          rest: Prism.languages.vala\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}), Prism.languages.insertBefore(\"vala\", \"keyword\", {\n  regex: {\n    pattern: /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n    greedy: !0,\n    inside: {\n      \"regex-source\": {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: !0,\n        alias: \"language-regex\",\n        inside: Prism.languages.regex\n      },\n      \"regex-delimiter\": /^\\//,\n      \"regex-flags\": /^[a-z]+$/\n    }\n  }\n});","map":{"version":3,"names":["Prism","languages","vala","extend","pattern","inside","punctuation","lookbehind","keyword","function","number","operator","constant","insertBefore","greedy","alias","interpolation","delimiter","rest","string","regex"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-vala.min.js"],"sourcesContent":["Prism.languages.vala=Prism.languages.extend(\"clike\",{\"class-name\":[{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,inside:{punctuation:/\\./}},{pattern:/(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}}],keyword:/\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,function:/\\b\\w+(?=\\s*\\()/,number:/(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,operator:/\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,punctuation:/[{}[\\];(),.:]/,constant:/\\b[A-Z0-9_]+\\b/}),Prism.languages.insertBefore(\"vala\",\"string\",{\"raw-string\":{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\"},\"template-string\":{pattern:/@\"[\\s\\S]*?\"/,greedy:!0,inside:{interpolation:{pattern:/\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,inside:{delimiter:{pattern:/^\\$\\(?|\\)$/,alias:\"punctuation\"},rest:Prism.languages.vala}},string:/[\\s\\S]+/}}}),Prism.languages.insertBefore(\"vala\",\"keyword\",{regex:{pattern:/\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^\\//,\"regex-flags\":/^[a-z]+$/}}});"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,IAAI,GAACF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAC;EAAC,YAAY,EAAC,CAAC;IAACC,OAAO,EAAC,iDAAiD;IAACC,MAAM,EAAC;MAACC,WAAW,EAAC;IAAI;EAAC,CAAC,EAAC;IAACF,OAAO,EAAC,0BAA0B;IAACG,UAAU,EAAC,CAAC,CAAC;IAACF,MAAM,EAAC;MAACC,WAAW,EAAC;IAAI;EAAC,CAAC,EAAC;IAACF,OAAO,EAAC,yEAAyE;IAACG,UAAU,EAAC,CAAC,CAAC;IAACF,MAAM,EAAC;MAACC,WAAW,EAAC;IAAI;EAAC,CAAC,EAAC;IAACF,OAAO,EAAC,mFAAmF;IAACG,UAAU,EAAC,CAAC,CAAC;IAACF,MAAM,EAAC;MAACC,WAAW,EAAC;IAAI;EAAC,CAAC,CAAC;EAACE,OAAO,EAAC,2kBAA2kB;EAACC,QAAQ,EAAC,gBAAgB;EAACC,MAAM,EAAC,0EAA0E;EAACC,QAAQ,EAAC,mEAAmE;EAACL,WAAW,EAAC,eAAe;EAACM,QAAQ,EAAC;AAAgB,CAAC,CAAC,EAACZ,KAAK,CAACC,SAAS,CAACY,YAAY,CAAC,MAAM,EAAC,QAAQ,EAAC;EAAC,YAAY,EAAC;IAACT,OAAO,EAAC,gBAAgB;IAACU,MAAM,EAAC,CAAC,CAAC;IAACC,KAAK,EAAC;EAAQ,CAAC;EAAC,iBAAiB,EAAC;IAACX,OAAO,EAAC,aAAa;IAACU,MAAM,EAAC,CAAC,CAAC;IAACT,MAAM,EAAC;MAACW,aAAa,EAAC;QAACZ,OAAO,EAAC,6BAA6B;QAACC,MAAM,EAAC;UAACY,SAAS,EAAC;YAACb,OAAO,EAAC,YAAY;YAACW,KAAK,EAAC;UAAa,CAAC;UAACG,IAAI,EAAClB,KAAK,CAACC,SAAS,CAACC;QAAI;MAAC,CAAC;MAACiB,MAAM,EAAC;IAAS;EAAC;AAAC,CAAC,CAAC,EAACnB,KAAK,CAACC,SAAS,CAACY,YAAY,CAAC,MAAM,EAAC,SAAS,EAAC;EAACO,KAAK,EAAC;IAAChB,OAAO,EAAC,yFAAyF;IAACU,MAAM,EAAC,CAAC,CAAC;IAACT,MAAM,EAAC;MAAC,cAAc,EAAC;QAACD,OAAO,EAAC,2BAA2B;QAACG,UAAU,EAAC,CAAC,CAAC;QAACQ,KAAK,EAAC,gBAAgB;QAACV,MAAM,EAACL,KAAK,CAACC,SAAS,CAACmB;MAAK,CAAC;MAAC,iBAAiB,EAAC,KAAK;MAAC,aAAa,EAAC;IAAU;EAAC;AAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script"}