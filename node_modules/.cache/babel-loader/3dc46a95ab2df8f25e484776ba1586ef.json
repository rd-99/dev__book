{"ast":null,"code":"Prism.languages.ada = {\n  comment: /--.*/,\n  string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n  number: [{\n    pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n  }, {\n    pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n  }],\n  \"attr-name\": /\\b'\\w+/i,\n  keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n  punctuation: /\\.\\.?|[,;():]/,\n  char: /'.'/,\n  variable: /\\b[a-z](?:\\w)*\\b/i\n};","map":{"version":3,"names":["Prism","languages","ada","comment","string","number","pattern","keyword","boolean","operator","punctuation","char","variable"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-ada.min.js"],"sourcesContent":["Prism.languages.ada={comment:/--.*/,string:/\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,number:[{pattern:/\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i},{pattern:/\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i}],\"attr-name\":/\\b'\\w+/i,keyword:/\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,boolean:/\\b(?:true|false)\\b/i,operator:/<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,punctuation:/\\.\\.?|[,;():]/,char:/'.'/,variable:/\\b[a-z](?:\\w)*\\b/i};"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,GAAG,GAAC;EAACC,OAAO,EAAC,MAAM;EAACC,MAAM,EAAC,uBAAuB;EAACC,MAAM,EAAC,CAAC;IAACC,OAAO,EAAC;EAAyF,CAAC,EAAC;IAACA,OAAO,EAAC;EAA0D,CAAC,CAAC;EAAC,WAAW,EAAC,SAAS;EAACC,OAAO,EAAC,4cAA4c;EAACC,OAAO,EAAC,qBAAqB;EAACC,QAAQ,EAAC,oCAAoC;EAACC,WAAW,EAAC,eAAe;EAACC,IAAI,EAAC,KAAK;EAACC,QAAQ,EAAC;AAAmB,CAAC"},"metadata":{},"sourceType":"script"}