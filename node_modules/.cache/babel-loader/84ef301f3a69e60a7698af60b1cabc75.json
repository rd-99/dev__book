{"ast":null,"code":"Prism.languages.elixir = {\n  doc: {\n    pattern: /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n    inside: {\n      attribute: /^@\\w+/,\n      string: /['\"][\\s\\S]+/\n    }\n  },\n  comment: {\n    pattern: /#.*/m,\n    greedy: !0\n  },\n  regex: {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: !0\n  },\n  string: [{\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: !0,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: !0,\n    inside: {}\n  }, {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {}\n  }],\n  atom: {\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  module: {\n    pattern: /\\b[A-Z]\\w*\\b/,\n    alias: \"class-name\"\n  },\n  \"attr-name\": /\\b\\w+\\??:(?!:)/,\n  argument: {\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  attribute: {\n    pattern: /@\\w+/,\n    alias: \"variable\"\n  },\n  function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n  number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n  boolean: /\\b(?:true|false|nil)\\b/,\n  operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    pattern: /([^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /([^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  punctuation: /<<|>>|[.,%\\[\\]{}()]/\n}, Prism.languages.elixir.string.forEach(function (e) {\n  e.inside = {\n    interpolation: {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: \"punctuation\"\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});","map":{"version":3,"names":["Prism","languages","elixir","doc","pattern","inside","attribute","string","comment","greedy","regex","atom","lookbehind","alias","module","argument","function","number","keyword","boolean","operator","punctuation","forEach","e","interpolation","delimiter","rest"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-elixir.min.js"],"sourcesContent":["Prism.languages.elixir={doc:{pattern:/@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,inside:{attribute:/^@\\w+/,string:/['\"][\\s\\S]+/}},comment:{pattern:/#.*/m,greedy:!0},regex:{pattern:/~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,greedy:!0},string:[{pattern:/~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,greedy:!0,inside:{}},{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,greedy:!0,inside:{}},{pattern:/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{}}],atom:{pattern:/(^|[^:]):\\w+/,lookbehind:!0,alias:\"symbol\"},module:{pattern:/\\b[A-Z]\\w*\\b/,alias:\"class-name\"},\"attr-name\":/\\b\\w+\\??:(?!:)/,argument:{pattern:/(^|[^&])&\\d+/,lookbehind:!0,alias:\"variable\"},attribute:{pattern:/@\\w+/,alias:\"variable\"},function:/\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,number:/\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,keyword:/\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,boolean:/\\b(?:true|false|nil)\\b/,operator:[/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,{pattern:/([^<])<(?!<)/,lookbehind:!0},{pattern:/([^>])>(?!>)/,lookbehind:!0}],punctuation:/<<|>>|[.,%\\[\\]{}()]/},Prism.languages.elixir.string.forEach(function(e){e.inside={interpolation:{pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.elixir}}}});"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAC;EAACC,GAAG,EAAC;IAACC,OAAO,EAAC,4FAA4F;IAACC,MAAM,EAAC;MAACC,SAAS,EAAC,OAAO;MAACC,MAAM,EAAC;IAAa;EAAC,CAAC;EAACC,OAAO,EAAC;IAACJ,OAAO,EAAC,MAAM;IAACK,MAAM,EAAC,CAAC;EAAC,CAAC;EAACC,KAAK,EAAC;IAACN,OAAO,EAAC,4LAA4L;IAACK,MAAM,EAAC,CAAC;EAAC,CAAC;EAACF,MAAM,EAAC,CAAC;IAACH,OAAO,EAAC,gNAAgN;IAACK,MAAM,EAAC,CAAC,CAAC;IAACJ,MAAM,EAAC,CAAC;EAAC,CAAC,EAAC;IAACD,OAAO,EAAC,qBAAqB;IAACK,MAAM,EAAC,CAAC,CAAC;IAACJ,MAAM,EAAC,CAAC;EAAC,CAAC,EAAC;IAACD,OAAO,EAAC,+CAA+C;IAACK,MAAM,EAAC,CAAC,CAAC;IAACJ,MAAM,EAAC,CAAC;EAAC,CAAC,CAAC;EAACM,IAAI,EAAC;IAACP,OAAO,EAAC,cAAc;IAACQ,UAAU,EAAC,CAAC,CAAC;IAACC,KAAK,EAAC;EAAQ,CAAC;EAACC,MAAM,EAAC;IAACV,OAAO,EAAC,cAAc;IAACS,KAAK,EAAC;EAAY,CAAC;EAAC,WAAW,EAAC,gBAAgB;EAACE,QAAQ,EAAC;IAACX,OAAO,EAAC,cAAc;IAACQ,UAAU,EAAC,CAAC,CAAC;IAACC,KAAK,EAAC;EAAU,CAAC;EAACP,SAAS,EAAC;IAACF,OAAO,EAAC,MAAM;IAACS,KAAK,EAAC;EAAU,CAAC;EAACG,QAAQ,EAAC,qDAAqD;EAACC,MAAM,EAAC,iEAAiE;EAACC,OAAO,EAAC,iNAAiN;EAACC,OAAO,EAAC,wBAAwB;EAACC,QAAQ,EAAC,CAAC,0FAA0F,EAAC;IAAChB,OAAO,EAAC,cAAc;IAACQ,UAAU,EAAC,CAAC;EAAC,CAAC,EAAC;IAACR,OAAO,EAAC,cAAc;IAACQ,UAAU,EAAC,CAAC;EAAC,CAAC,CAAC;EAACS,WAAW,EAAC;AAAqB,CAAC,EAACrB,KAAK,CAACC,SAAS,CAACC,MAAM,CAACK,MAAM,CAACe,OAAO,CAAC,UAASC,CAAC,EAAC;EAACA,CAAC,CAAClB,MAAM,GAAC;IAACmB,aAAa,EAAC;MAACpB,OAAO,EAAC,YAAY;MAACC,MAAM,EAAC;QAACoB,SAAS,EAAC;UAACrB,OAAO,EAAC,UAAU;UAACS,KAAK,EAAC;QAAa,CAAC;QAACa,IAAI,EAAC1B,KAAK,CAACC,SAAS,CAACC;MAAM;IAAC;EAAC,CAAC;AAAA,CAAC,CAAC"},"metadata":{},"sourceType":"script"}