{"ast":null,"code":"var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown');\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown');\nvar table = require('mdast-util-gfm-table/from-markdown');\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown');\nvar own = {}.hasOwnProperty;\nmodule.exports = configure([autolinkLiteral, strikethrough, table, taskListItem]);\nfunction configure(extensions) {\n  var config = {\n    transforms: [],\n    canContainEols: []\n  };\n  var length = extensions.length;\n  var index = -1;\n  while (++index < length) {\n    extension(config, extensions[index]);\n  }\n  return config;\n}\nfunction extension(config, extension) {\n  var key;\n  var left;\n  var right;\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : config[key] = {};\n    right = extension[key];\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right);\n    } else {\n      Object.assign(left, right);\n    }\n  }\n}","map":{"version":3,"names":["autolinkLiteral","require","strikethrough","table","taskListItem","own","hasOwnProperty","module","exports","configure","extensions","config","transforms","canContainEols","length","index","extension","key","left","right","call","concat","Object","assign"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/mdast-util-gfm/from-markdown.js"],"sourcesContent":["var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown')\nvar table = require('mdast-util-gfm-table/from-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown')\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = configure([\n  autolinkLiteral,\n  strikethrough,\n  table,\n  taskListItem\n])\n\nfunction configure(extensions) {\n  var config = {transforms: [], canContainEols: []}\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,+CAA+C,CAAC;AAC9E,IAAIC,aAAa,GAAGD,OAAO,CAAC,4CAA4C,CAAC;AACzE,IAAIE,KAAK,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AACzD,IAAIG,YAAY,GAAGH,OAAO,CAAC,6CAA6C,CAAC;AAEzE,IAAII,GAAG,GAAG,CAAC,CAAC,CAACC,cAAc;AAE3BC,MAAM,CAACC,OAAO,GAAGC,SAAS,CAAC,CACzBT,eAAe,EACfE,aAAa,EACbC,KAAK,EACLC,YAAY,CACb,CAAC;AAEF,SAASK,SAASA,CAACC,UAAU,EAAE;EAC7B,IAAIC,MAAM,GAAG;IAACC,UAAU,EAAE,EAAE;IAAEC,cAAc,EAAE;EAAE,CAAC;EACjD,IAAIC,MAAM,GAAGJ,UAAU,CAACI,MAAM;EAC9B,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGD,MAAM,EAAE;IACvBE,SAAS,CAACL,MAAM,EAAED,UAAU,CAACK,KAAK,CAAC,CAAC;EACtC;EAEA,OAAOJ,MAAM;AACf;AAEA,SAASK,SAASA,CAACL,MAAM,EAAEK,SAAS,EAAE;EACpC,IAAIC,GAAG;EACP,IAAIC,IAAI;EACR,IAAIC,KAAK;EAET,KAAKF,GAAG,IAAID,SAAS,EAAE;IACrBE,IAAI,GAAGb,GAAG,CAACe,IAAI,CAACT,MAAM,EAAEM,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC,GAAIN,MAAM,CAACM,GAAG,CAAC,GAAG,CAAC,CAAE;IAC/DE,KAAK,GAAGH,SAAS,CAACC,GAAG,CAAC;IAEtB,IAAIA,GAAG,KAAK,gBAAgB,IAAIA,GAAG,KAAK,YAAY,EAAE;MACpDN,MAAM,CAACM,GAAG,CAAC,GAAG,EAAE,CAACI,MAAM,CAACH,IAAI,EAAEC,KAAK,CAAC;IACtC,CAAC,MAAM;MACLG,MAAM,CAACC,MAAM,CAACL,IAAI,EAAEC,KAAK,CAAC;IAC5B;EACF;AACF"},"metadata":{},"sourceType":"script"}