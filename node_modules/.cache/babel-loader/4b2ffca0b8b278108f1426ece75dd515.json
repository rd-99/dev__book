{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\dev__book\\\\dev__book\\\\src\\\\components\\\\add-cell.tsx\",\n  _s = $RefreshSig$();\nimport './add-cell.css';\nimport { useActions } from '../hooks/use-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCell = _ref => {\n  _s();\n  let {\n    forceVisible,\n    prevCellId\n  } = _ref;\n  const {\n    insertCellAfter\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `add-cell ${forceVisible && 'force-visible'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellAfter(prevCellId, 'code'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellAfter(prevCellId, 'text'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n_s(AddCell, \"mbmzHXMJASYYcpC9zuwsSvrkepY=\", false, function () {\n  return [useActions];\n});\n_c = AddCell;\nexport default AddCell;\nvar _c;\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"names":["useActions","jsxDEV","_jsxDEV","AddCell","_ref","_s","forceVisible","prevCellId","insertCellAfter","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/src/components/add-cell.tsx"],"sourcesContent":["import './add-cell.css';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\ninterface AddCellProps{\r\n    prevCellId: string | null;\r\n    forceVisible?: boolean\r\n\r\n}\r\nconst AddCell: React.FC<AddCellProps> = ({ forceVisible,prevCellId}) => {\r\n    const { insertCellAfter} = useActions();\r\n    return <div className={`add-cell ${forceVisible && 'force-visible'}`}>\r\n        <div className='add-buttons'>\r\n        <   button className='button is-rounded is-primary is-small' onClick={() => insertCellAfter(prevCellId, 'code')}>\r\n            <span className='icon is-small'>\r\n                <i className='fas fa-plus' />\r\n            </span>\r\n            <span>Code</span>\r\n            </button>\r\n            <button className='button is-rounded is-primary is-small' onClick={() => insertCellAfter(prevCellId, 'text')}>\r\n            <span className='icon is-small'>\r\n                <i className='fas fa-plus' />\r\n            </span>\r\n                <span>Text</span>\r\n                </button>\r\n        </div> \r\n        \r\n    <div className='divider'></div>\r\n    </div>\r\n};\r\n\r\nexport default AddCell;"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,UAAU,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlD,MAAMC,OAA+B,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC,YAAY;IAACC;EAAU,CAAC,GAAAH,IAAA;EAC/D,MAAM;IAAEI;EAAe,CAAC,GAAGR,UAAU,CAAC,CAAC;EACvC,oBAAOE,OAAA;IAAKO,SAAS,EAAG,YAAWH,YAAY,IAAI,eAAgB,EAAE;IAAAI,QAAA,gBACjER,OAAA;MAAKO,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC5BR,OAAA;QAAWO,SAAS,EAAC,uCAAuC;QAACE,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAACD,UAAU,EAAE,MAAM,CAAE;QAAAG,QAAA,gBAC5GR,OAAA;UAAMO,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC3BR,OAAA;YAAGO,SAAS,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACPb,OAAA;UAAAQ,QAAA,EAAM;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACTb,OAAA;QAAQO,SAAS,EAAC,uCAAuC;QAACE,OAAO,EAAEA,CAAA,KAAMH,eAAe,CAACD,UAAU,EAAE,MAAM,CAAE;QAAAG,QAAA,gBAC7GR,OAAA;UAAMO,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC3BR,OAAA;YAAGO,SAAS,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACHb,OAAA;UAAAQ,QAAA,EAAM;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAEVb,OAAA;MAAKO,SAAS,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AACV,CAAC;AAACV,EAAA,CApBIF,OAA+B;EAAA,QACNH,UAAU;AAAA;AAAAgB,EAAA,GADnCb,OAA+B;AAsBrC,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}