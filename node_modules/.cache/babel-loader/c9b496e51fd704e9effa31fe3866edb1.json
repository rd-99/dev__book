{"ast":null,"code":"import'./add-cell.css';import{useActions}from'../hooks/use-actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddCell=function AddCell(_ref){var forceVisible=_ref.forceVisible,prevCellId=_ref.prevCellId;var _useActions=useActions(),insertCellAfter=_useActions.insertCellAfter;return/*#__PURE__*/_jsxs(\"div\",{className:\"add-cell \".concat(forceVisible&&'force-visible'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(prevCellId,'code');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Code\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(prevCellId,'text');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Text\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"})]});};export default AddCell;","map":{"version":3,"names":["useActions","jsx","_jsx","jsxs","_jsxs","AddCell","_ref","forceVisible","prevCellId","_useActions","insertCellAfter","className","concat","children","onClick"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/src/components/add-cell.tsx"],"sourcesContent":["import './add-cell.css';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\ninterface AddCellProps{\r\n    prevCellId: string | null;\r\n    forceVisible?: boolean\r\n\r\n}\r\nconst AddCell: React.FC<AddCellProps> = ({ forceVisible,prevCellId}) => {\r\n    const { insertCellAfter} = useActions();\r\n    return <div className={`add-cell ${forceVisible && 'force-visible'}`}>\r\n        <div className='add-buttons'>\r\n        <   button className='button is-rounded is-primary is-small' onClick={() => insertCellAfter(prevCellId, 'code')}>\r\n            <span className='icon is-small'>\r\n                <i className='fas fa-plus' />\r\n            </span>\r\n            <span>Code</span>\r\n            </button>\r\n            <button className='button is-rounded is-primary is-small' onClick={() => insertCellAfter(prevCellId, 'text')}>\r\n            <span className='icon is-small'>\r\n                <i className='fas fa-plus' />\r\n            </span>\r\n                <span>Text</span>\r\n                </button>\r\n        </div> \r\n        \r\n    <div className='divider'></div>\r\n    </div>\r\n};\r\n\r\nexport default AddCell;"],"mappings":"AAAA,MAAO,gBAAgB,CACvB,OAASA,UAAU,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAOlD,GAAM,CAAAC,OAA+B,CAAG,QAAlC,CAAAA,OAA+BA,CAAAC,IAAA,CAAmC,IAA7B,CAAAC,YAAY,CAAAD,IAAA,CAAZC,YAAY,CAACC,UAAU,CAAAF,IAAA,CAAVE,UAAU,CAC9D,IAAAC,WAAA,CAA2BT,UAAU,CAAC,CAAC,CAA/BU,eAAe,CAAAD,WAAA,CAAfC,eAAe,CACvB,mBAAON,KAAA,QAAKO,SAAS,aAAAC,MAAA,CAAcL,YAAY,EAAI,eAAe,CAAG,CAAAM,QAAA,eACjET,KAAA,QAAKO,SAAS,CAAC,aAAa,CAAAE,QAAA,eAC5BT,KAAA,WAAWO,SAAS,CAAC,uCAAuC,CAACG,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,eAAe,CAACF,UAAU,CAAE,MAAM,CAAC,EAAC,CAAAK,QAAA,eAC5GX,IAAA,SAAMS,SAAS,CAAC,eAAe,CAAAE,QAAA,cAC3BX,IAAA,MAAGS,SAAS,CAAC,aAAa,CAAE,CAAC,CAC3B,CAAC,cACPT,IAAA,SAAAW,QAAA,CAAM,MAAI,CAAM,CAAC,EACT,CAAC,cACTT,KAAA,WAAQO,SAAS,CAAC,uCAAuC,CAACG,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,eAAe,CAACF,UAAU,CAAE,MAAM,CAAC,EAAC,CAAAK,QAAA,eAC7GX,IAAA,SAAMS,SAAS,CAAC,eAAe,CAAAE,QAAA,cAC3BX,IAAA,MAAGS,SAAS,CAAC,aAAa,CAAE,CAAC,CAC3B,CAAC,cACHT,IAAA,SAAAW,QAAA,CAAM,MAAI,CAAM,CAAC,EACT,CAAC,EACZ,CAAC,cAEVX,IAAA,QAAKS,SAAS,CAAC,SAAS,CAAM,CAAC,EAC1B,CAAC,CACV,CAAC,CAED,cAAe,CAAAN,OAAO"},"metadata":{},"sourceType":"module"}