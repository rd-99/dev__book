{"ast":null,"code":"!function (e) {\n  var n = /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;\n  e.languages.sml = {\n    comment: /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n    string: {\n      pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0\n    },\n    \"class-name\": [{\n      pattern: RegExp(\"((?:^|[^:]):\\\\s*)<TERMINAL>(?:\\\\s*(?:(?:\\\\*|->)\\\\s*<TERMINAL>|,\\\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\\\s+<LONG-ID>)))*\".replace(/<NOT-LAST>/g, function () {\n        return \"\\\\s*(?:[*,]|->)\";\n      }).replace(/<TERMINAL>/g, function () {\n        return \"(?:'[\\\\w']*|<LONG-ID>|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|\\\\{(?:[^{}]|\\\\{[^{}]*\\\\})*\\\\})(?:\\\\s+<LONG-ID>)*\";\n      }).replace(/<LONG-ID>/g, function () {\n        return \"(?!<KEYWORD>)[a-z\\\\d_][\\\\w'.]*\";\n      }).replace(/<KEYWORD>/g, function () {\n        return n.source;\n      }), \"i\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: null\n    }, {\n      pattern: /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n      lookbehind: !0\n    }],\n    function: {\n      pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n      lookbehind: !0\n    },\n    keyword: n,\n    variable: {\n      pattern: /(^|[^\\w'])'[\\w']*/,\n      lookbehind: !0\n    },\n    number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n    word: {\n      pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n      alias: \"constant\"\n    },\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n    punctuation: /[(){}\\[\\].:,;]/\n  }, e.languages.sml[\"class-name\"][0].inside = e.languages.sml, e.languages.smlnj = e.languages.sml;\n}(Prism);","map":{"version":3,"names":["e","n","languages","sml","comment","string","pattern","greedy","RegExp","replace","source","lookbehind","inside","function","keyword","variable","number","word","alias","boolean","operator","punctuation","smlnj","Prism"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-sml.min.js"],"sourcesContent":["!function(e){var n=/\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;e.languages.sml={comment:/\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,string:{pattern:/#?\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":[{pattern:RegExp(\"((?:^|[^:]):\\\\s*)<TERMINAL>(?:\\\\s*(?:(?:\\\\*|->)\\\\s*<TERMINAL>|,\\\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\\\s+<LONG-ID>)))*\".replace(/<NOT-LAST>/g,function(){return\"\\\\s*(?:[*,]|->)\"}).replace(/<TERMINAL>/g,function(){return\"(?:'[\\\\w']*|<LONG-ID>|\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)|\\\\{(?:[^{}]|\\\\{[^{}]*\\\\})*\\\\})(?:\\\\s+<LONG-ID>)*\"}).replace(/<LONG-ID>/g,function(){return\"(?!<KEYWORD>)[a-z\\\\d_][\\\\w'.]*\"}).replace(/<KEYWORD>/g,function(){return n.source}),\"i\"),lookbehind:!0,greedy:!0,inside:null},{pattern:/((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,lookbehind:!0}],function:{pattern:/((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,lookbehind:!0},keyword:n,variable:{pattern:/(^|[^\\w'])'[\\w']*/,lookbehind:!0},number:/~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,word:{pattern:/\\b0w(?:\\d+|x[\\da-f]+)\\b/i,alias:\"constant\"},boolean:/\\b(?:false|true)\\b/i,operator:/\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,punctuation:/[(){}\\[\\].:,;]/},e.languages.sml[\"class-name\"][0].inside=e.languages.sml,e.languages.smlnj=e.languages.sml}(Prism);"],"mappings":"AAAA,CAAC,UAASA,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,yPAAyP;EAACD,CAAC,CAACE,SAAS,CAACC,GAAG,GAAC;IAACC,OAAO,EAAC,2EAA2E;IAACC,MAAM,EAAC;MAACC,OAAO,EAAC,qBAAqB;MAACC,MAAM,EAAC,CAAC;IAAC,CAAC;IAAC,YAAY,EAAC,CAAC;MAACD,OAAO,EAACE,MAAM,CAAC,gIAAgI,CAACC,OAAO,CAAC,aAAa,EAAC,YAAU;QAAC,OAAM,iBAAiB;MAAA,CAAC,CAAC,CAACA,OAAO,CAAC,aAAa,EAAC,YAAU;QAAC,OAAM,sGAAsG;MAAA,CAAC,CAAC,CAACA,OAAO,CAAC,YAAY,EAAC,YAAU;QAAC,OAAM,gCAAgC;MAAA,CAAC,CAAC,CAACA,OAAO,CAAC,YAAY,EAAC,YAAU;QAAC,OAAOR,CAAC,CAACS,MAAM;MAAA,CAAC,CAAC,EAAC,GAAG,CAAC;MAACC,UAAU,EAAC,CAAC,CAAC;MAACJ,MAAM,EAAC,CAAC,CAAC;MAACK,MAAM,EAAC;IAAI,CAAC,EAAC;MAACN,OAAO,EAAC,wFAAwF;MAACK,UAAU,EAAC,CAAC;IAAC,CAAC,CAAC;IAACE,QAAQ,EAAC;MAACP,OAAO,EAAC,oCAAoC;MAACK,UAAU,EAAC,CAAC;IAAC,CAAC;IAACG,OAAO,EAACb,CAAC;IAACc,QAAQ,EAAC;MAACT,OAAO,EAAC,mBAAmB;MAACK,UAAU,EAAC,CAAC;IAAC,CAAC;IAACK,MAAM,EAAC,gDAAgD;IAACC,IAAI,EAAC;MAACX,OAAO,EAAC,0BAA0B;MAACY,KAAK,EAAC;IAAU,CAAC;IAACC,OAAO,EAAC,qBAAqB;IAACC,QAAQ,EAAC,2CAA2C;IAACC,WAAW,EAAC;EAAgB,CAAC,EAACrB,CAAC,CAACE,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACS,MAAM,GAACZ,CAAC,CAACE,SAAS,CAACC,GAAG,EAACH,CAAC,CAACE,SAAS,CAACoB,KAAK,GAACtB,CAAC,CAACE,SAAS,CAACC,GAAG;AAAA,CAAC,CAACoB,KAAK,CAAC"},"metadata":{},"sourceType":"script"}