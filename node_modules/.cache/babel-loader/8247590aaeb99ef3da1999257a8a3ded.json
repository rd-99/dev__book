{"ast":null,"code":"(function (Prism) {\n  var interpolationExpr = {\n    pattern: /[\\s\\S]+/,\n    inside: null\n  };\n  Prism.languages.v = Prism.languages.extend('clike', {\n    'string': [{\n      pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n      // using {1,2} instead of `u` flag for compatibility\n      alias: 'rune'\n    }, {\n      pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      alias: 'quoted-string',\n      greedy: true,\n      inside: {\n        'interpolation': {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n          lookbehind: true,\n          inside: {\n            'interpolation-variable': {\n              pattern: /^\\$\\w[\\s\\S]*$/,\n              alias: 'variable'\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            'interpolation-expression': interpolationExpr\n          }\n        }\n      }\n    }],\n    'class-name': {\n      pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n      lookbehind: true\n    },\n    'keyword': /(?:\\b(?:as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|__global|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:if|else|for)|#(?:include|flag))\\b/,\n    'number': /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n    'operator': /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n    'builtin': /\\b(?:any(?:_int|_float)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|nt|64|128)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n  });\n  interpolationExpr.inside = Prism.languages.v;\n  Prism.languages.insertBefore('v', 'operator', {\n    'attribute': {\n      pattern: /(^[\\t ]*)\\[(?:deprecated|unsafe_fn|typedef|live|inline|flag|ref_only|windows_stdcall|direct_array_access)\\]/m,\n      lookbehind: true,\n      alias: 'annotation',\n      inside: {\n        'punctuation': /[\\[\\]]/,\n        'keyword': /\\w+/\n      }\n    },\n    'generic': {\n      pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n      inside: {\n        'punctuation': /[<>]/,\n        'class-name': /\\w+/\n      }\n    }\n  });\n  Prism.languages.insertBefore('v', 'function', {\n    'generic-function': {\n      // e.g. foo<T>( ...\n      pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<\\w+>/,\n          inside: Prism.languages.v.generic.inside\n        }\n      }\n    }\n  });\n})(Prism);","map":{"version":3,"names":["Prism","interpolationExpr","pattern","inside","languages","v","extend","alias","greedy","lookbehind","insertBefore","generic"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-v.js"],"sourcesContent":["(function (Prism) {\n\tvar interpolationExpr = {\n\t\tpattern: /[\\s\\S]+/,\n\t\tinside: null\n\t};\n\n\tPrism.languages.v = Prism.languages.extend('clike', {\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/, // using {1,2} instead of `u` flag for compatibility\n\t\t\t\talias: 'rune'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\talias: 'quoted-string',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation-variable': {\n\t\t\t\t\t\t\t\tpattern: /^\\$\\w[\\s\\S]*$/,\n\t\t\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'interpolation-expression': interpolationExpr\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /(?:\\b(?:as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|__global|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:if|else|for)|#(?:include|flag))\\b/,\n\t\t'number': /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n\t\t'operator': /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n\t\t'builtin': /\\b(?:any(?:_int|_float)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|nt|64|128)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n\t});\n\n\tinterpolationExpr.inside = Prism.languages.v;\n\n\tPrism.languages.insertBefore('v', 'operator', {\n\t\t'attribute': {\n\t\t\tpattern: /(^[\\t ]*)\\[(?:deprecated|unsafe_fn|typedef|live|inline|flag|ref_only|windows_stdcall|direct_array_access)\\]/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'annotation',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t'keyword': /\\w+/\n\t\t\t}\n\t\t},\n\t\t'generic': {\n\t\t\tpattern: /<\\w+>(?=\\s*[\\)\\{])/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[<>]/,\n\t\t\t\t'class-name': /\\w+/\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('v', 'function', {\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T>( ...\n\t\t\tpattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n\t\t\tinside: {\n\t\t\t\t'function': /^\\w+/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<\\w+>/,\n\t\t\t\t\tinside: Prism.languages.v.generic.inside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n}(Prism));\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EACjB,IAAIC,iBAAiB,GAAG;IACvBC,OAAO,EAAE,SAAS;IAClBC,MAAM,EAAE;EACT,CAAC;EAEDH,KAAK,CAACI,SAAS,CAACC,CAAC,GAAGL,KAAK,CAACI,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;IACnD,QAAQ,EAAE,CACT;MACCJ,OAAO,EAAE,wBAAwB;MAAE;MACnCK,KAAK,EAAE;IACR,CAAC,EACD;MACCL,OAAO,EAAE,kDAAkD;MAC3DK,KAAK,EAAE,eAAe;MACtBC,MAAM,EAAE,IAAI;MACZL,MAAM,EAAE;QACP,eAAe,EAAE;UAChBD,OAAO,EAAE,qFAAqF;UAC9FO,UAAU,EAAE,IAAI;UAChBN,MAAM,EAAE;YACP,wBAAwB,EAAE;cACzBD,OAAO,EAAE,eAAe;cACxBK,KAAK,EAAE;YACR,CAAC;YACD,2BAA2B,EAAE;cAC5BL,OAAO,EAAE,WAAW;cACpBK,KAAK,EAAE;YACR,CAAC;YACD,0BAA0B,EAAEN;UAC7B;QACD;MACD;IACD,CAAC,CACD;IACD,YAAY,EAAE;MACbC,OAAO,EAAE,kDAAkD;MAC3DO,UAAU,EAAE;IACb,CAAC;IACD,SAAS,EAAE,qRAAqR;IAChS,QAAQ,EAAE,2GAA2G;IACrH,UAAU,EAAE,6FAA6F;IACzG,SAAS,EAAE;EACZ,CAAC,CAAC;EAEFR,iBAAiB,CAACE,MAAM,GAAGH,KAAK,CAACI,SAAS,CAACC,CAAC;EAE5CL,KAAK,CAACI,SAAS,CAACM,YAAY,CAAC,GAAG,EAAE,UAAU,EAAE;IAC7C,WAAW,EAAE;MACZR,OAAO,EAAE,8GAA8G;MACvHO,UAAU,EAAE,IAAI;MAChBF,KAAK,EAAE,YAAY;MACnBJ,MAAM,EAAE;QACP,aAAa,EAAE,QAAQ;QACvB,SAAS,EAAE;MACZ;IACD,CAAC;IACD,SAAS,EAAE;MACVD,OAAO,EAAE,oBAAoB;MAC7BC,MAAM,EAAE;QACP,aAAa,EAAE,MAAM;QACrB,YAAY,EAAE;MACf;IACD;EACD,CAAC,CAAC;EAEFH,KAAK,CAACI,SAAS,CAACM,YAAY,CAAC,GAAG,EAAE,UAAU,EAAE;IAC7C,kBAAkB,EAAE;MACnB;MACAR,OAAO,EAAE,qBAAqB;MAC9BC,MAAM,EAAE;QACP,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE;UACVD,OAAO,EAAE,OAAO;UAChBC,MAAM,EAAEH,KAAK,CAACI,SAAS,CAACC,CAAC,CAACM,OAAO,CAACR;QACnC;MACD;IACD;EACD,CAAC,CAAC;AACH,CAAC,EAACH,KAAK,CAAC"},"metadata":{},"sourceType":"script"}