{"ast":null,"code":"import{useTypedSelector}from'../hooks/use-typed-selector';import CellListItem from'./cell-list-item';import AddCell from'./add-cell';import{Fragment,useEffect}from'react';import{useActions}from'../hooks/use-actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CellList=function CellList(){var cells=useTypedSelector(function(_ref){var _ref$cells=_ref.cells,order=_ref$cells.order,data=_ref$cells.data;return order.map(function(id){return data[id];});});var _useActions=useActions(),fetchCells=_useActions.fetchCells;useEffect(function(){fetchCells();},[]);var renderedCells=cells.map(function(cell){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(CellListItem,{cell:cell},cell.id),/*#__PURE__*/_jsx(AddCell,{prevCellId:cell.id})]},cell.id);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AddCell,{forceVisible:cells.length===0,prevCellId:null}),renderedCells]});};export default CellList;","map":{"version":3,"names":["useTypedSelector","CellListItem","AddCell","Fragment","useEffect","useActions","jsx","_jsx","jsxs","_jsxs","CellList","cells","_ref","_ref$cells","order","data","map","id","_useActions","fetchCells","renderedCells","cell","children","prevCellId","forceVisible","length"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/src/components/cell-list.tsx"],"sourcesContent":["import { useTypedSelector} from '../hooks/use-typed-selector';\r\nimport CellListItem from './cell-list-item';\r\nimport AddCell from './add-cell';\r\nimport { Fragment, useEffect } from 'react';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\nconst CellList: React.FC = () => {\r\n\r\n   const cells =  useTypedSelector((\r\n       { cells: { order, data } }) => \r\n       order.map((id) => data[id] ));\r\n    \r\n    const { fetchCells} = useActions();\r\n    useEffect(() => {\r\n        fetchCells();\r\n    },[]);\r\n\r\n    const renderedCells = cells.map((cell) => (\r\n    <Fragment key = {cell.id}>\r\n    \r\n    <CellListItem cell={cell} key ={cell.id} />\r\n    <AddCell prevCellId={cell.id} />\r\n    </ Fragment>\r\n     ));\r\n    return <div>\r\n        <AddCell forceVisible = {cells.length === 0} prevCellId={null} />\r\n        {renderedCells}\r\n        \r\n        </div>\r\n};\r\n\r\nexport default CellList;"],"mappings":"AAAA,OAASA,gBAAgB,KAAO,6BAA6B,CAC7D,MAAO,CAAAC,YAAY,KAAM,kBAAkB,CAC3C,MAAO,CAAAC,OAAO,KAAM,YAAY,CAChC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,UAAU,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElD,GAAM,CAAAC,QAAkB,CAAG,QAArB,CAAAA,QAAkBA,CAAA,CAAS,CAE9B,GAAM,CAAAC,KAAK,CAAIX,gBAAgB,CAAC,SAAAY,IAAA,MAAAC,UAAA,CAAAD,IAAA,CAC1BD,KAAK,CAAIG,KAAK,CAAAD,UAAA,CAALC,KAAK,CAAEC,IAAI,CAAAF,UAAA,CAAJE,IAAI,OACtB,CAAAD,KAAK,CAACE,GAAG,CAAC,SAACC,EAAE,QAAK,CAAAF,IAAI,CAACE,EAAE,CAAC,EAAC,CAAC,GAAC,CAEhC,IAAAC,WAAA,CAAsBb,UAAU,CAAC,CAAC,CAA1Bc,UAAU,CAAAD,WAAA,CAAVC,UAAU,CAClBf,SAAS,CAAC,UAAM,CACZe,UAAU,CAAC,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,CAEL,GAAM,CAAAC,aAAa,CAAGT,KAAK,CAACK,GAAG,CAAC,SAACK,IAAI,qBACrCZ,KAAA,CAACN,QAAQ,EAAAmB,QAAA,eAETf,IAAA,CAACN,YAAY,EAACoB,IAAI,CAAEA,IAAK,EAAOA,IAAI,CAACJ,EAAK,CAAC,cAC3CV,IAAA,CAACL,OAAO,EAACqB,UAAU,CAAEF,IAAI,CAACJ,EAAG,CAAE,CAAC,GAHfI,IAAI,CAACJ,EAIX,CAAC,EACV,CAAC,CACH,mBAAOR,KAAA,QAAAa,QAAA,eACHf,IAAA,CAACL,OAAO,EAACsB,YAAY,CAAIb,KAAK,CAACc,MAAM,GAAK,CAAE,CAACF,UAAU,CAAE,IAAK,CAAE,CAAC,CAChEH,aAAa,EAET,CAAC,CACd,CAAC,CAED,cAAe,CAAAV,QAAQ"},"metadata":{},"sourceType":"module"}