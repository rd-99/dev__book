{"ast":null,"code":"Prism.languages.autoit = {\n  comment: [/;.*/, {\n    pattern: /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:comments-end|ce)/m,\n    lookbehind: !0\n  }],\n  url: {\n    pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      variable: /([%$@])\\w+\\1/\n    }\n  },\n  directive: {\n    pattern: /(^[\\t ]*)#\\w+/m,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  function: /\\b\\w+(?=\\()/,\n  variable: /[$@]\\w+/,\n  keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n  number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n  boolean: /\\b(?:True|False)\\b/i,\n  operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n  punctuation: /[\\[\\]().,:]/\n};","map":{"version":3,"names":["Prism","languages","autoit","comment","pattern","lookbehind","url","string","greedy","inside","variable","directive","alias","function","keyword","number","boolean","operator","punctuation"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-autoit.min.js"],"sourcesContent":["Prism.languages.autoit={comment:[/;.*/,{pattern:/(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:comments-end|ce)/m,lookbehind:!0}],url:{pattern:/(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:!0},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:!0,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^[\\t ]*)#\\w+/m,lookbehind:!0,alias:\"keyword\"},function:/\\b\\w+(?=\\()/,variable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:True|False)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,punctuation:/[\\[\\]().,:]/};"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAC;EAACC,OAAO,EAAC,CAAC,KAAK,EAAC;IAACC,OAAO,EAAC,qEAAqE;IAACC,UAAU,EAAC,CAAC;EAAC,CAAC,CAAC;EAACC,GAAG,EAAC;IAACF,OAAO,EAAC,kDAAkD;IAACC,UAAU,EAAC,CAAC;EAAC,CAAC;EAACE,MAAM,EAAC;IAACH,OAAO,EAAC,iCAAiC;IAACI,MAAM,EAAC,CAAC,CAAC;IAACC,MAAM,EAAC;MAACC,QAAQ,EAAC;IAAc;EAAC,CAAC;EAACC,SAAS,EAAC;IAACP,OAAO,EAAC,gBAAgB;IAACC,UAAU,EAAC,CAAC,CAAC;IAACO,KAAK,EAAC;EAAS,CAAC;EAACC,QAAQ,EAAC,aAAa;EAACH,QAAQ,EAAC,SAAS;EAACI,OAAO,EAAC,wOAAwO;EAACC,MAAM,EAAC,iDAAiD;EAACC,OAAO,EAAC,qBAAqB;EAACC,QAAQ,EAAC,8CAA8C;EAACC,WAAW,EAAC;AAAa,CAAC"},"metadata":{},"sourceType":"script"}