{"ast":null,"code":"!function (e) {\n  for (var n = '\\\\((?:[^();\"#\\\\\\\\]|\\\\\\\\[^]|;.*(?!.)|\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|#(?:\\\\{(?:(?!#\\\\})[^])*#\\\\}|[^{])|<expr>)*\\\\)', i = 0; i < 5; i++) n = n.replace(/<expr>/g, function () {\n    return n;\n  });\n  n = n.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n  var d = e.languages.lilypond = {\n    comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n    \"embedded-scheme\": {\n      pattern: RegExp('(^|[=\\\\s])#(?:\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|[^\\\\s()\"]*(?:[^\\\\s()]|<expr>))'.replace(/<expr>/g, function () {\n        return n;\n      }), \"m\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        scheme: {\n          pattern: /^(#)[\\s\\S]+$/,\n          lookbehind: !0,\n          alias: \"language-scheme\",\n          inside: {\n            \"embedded-lilypond\": {\n              pattern: /#\\{[\\s\\S]*?#\\}/,\n              greedy: !0,\n              inside: {\n                punctuation: /^#\\{|#\\}$/,\n                lilypond: {\n                  pattern: /[\\s\\S]+/,\n                  alias: \"language-lilypond\",\n                  inside: null\n                }\n              }\n            },\n            rest: e.languages.scheme\n          }\n        },\n        punctuation: /#/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0\n    },\n    \"class-name\": {\n      pattern: /(\\\\new\\s+)[\\w-]+/,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /\\\\[a-z][-\\w]*/i,\n      inside: {\n        punctuation: /^\\\\/\n      }\n    },\n    operator: /[=|]|<<|>>/,\n    punctuation: {\n      pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\/\\d+)?\\b/\n  };\n  d[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside = d, e.languages.ly = d;\n}(Prism);","map":{"version":3,"names":["e","n","i","replace","d","languages","lilypond","comment","pattern","RegExp","lookbehind","greedy","inside","scheme","alias","punctuation","rest","string","keyword","operator","number","ly","Prism"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-lilypond.min.js"],"sourcesContent":["!function(e){for(var n='\\\\((?:[^();\"#\\\\\\\\]|\\\\\\\\[^]|;.*(?!.)|\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|#(?:\\\\{(?:(?!#\\\\})[^])*#\\\\}|[^{])|<expr>)*\\\\)',i=0;i<5;i++)n=n.replace(/<expr>/g,function(){return n});n=n.replace(/<expr>/g,\"[^\\\\s\\\\S]\");var d=e.languages.lilypond={comment:/%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\"embedded-scheme\":{pattern:RegExp('(^|[=\\\\s])#(?:\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"|[^\\\\s()\"]*(?:[^\\\\s()]|<expr>))'.replace(/<expr>/g,function(){return n}),\"m\"),lookbehind:!0,greedy:!0,inside:{scheme:{pattern:/^(#)[\\s\\S]+$/,lookbehind:!0,alias:\"language-scheme\",inside:{\"embedded-lilypond\":{pattern:/#\\{[\\s\\S]*?#\\}/,greedy:!0,inside:{punctuation:/^#\\{|#\\}$/,lilypond:{pattern:/[\\s\\S]+/,alias:\"language-lilypond\",inside:null}}},rest:e.languages.scheme}},punctuation:/#/}},string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":{pattern:/(\\\\new\\s+)[\\w-]+/,lookbehind:!0},keyword:{pattern:/\\\\[a-z][-\\w]*/i,inside:{punctuation:/^\\\\/}},operator:/[=|]|<<|>>/,punctuation:{pattern:/(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,lookbehind:!0},number:/\\b\\d+(?:\\/\\d+)?\\b/};d[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside=d,e.languages.ly=d}(Prism);"],"mappings":"AAAA,CAAC,UAASA,CAAC,EAAC;EAAC,KAAI,IAAIC,CAAC,GAAC,yGAAyG,EAACC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAACD,CAAC,GAACA,CAAC,CAACE,OAAO,CAAC,SAAS,EAAC,YAAU;IAAC,OAAOF,CAAC;EAAA,CAAC,CAAC;EAACA,CAAC,GAACA,CAAC,CAACE,OAAO,CAAC,SAAS,EAAC,WAAW,CAAC;EAAC,IAAIC,CAAC,GAACJ,CAAC,CAACK,SAAS,CAACC,QAAQ,GAAC;IAACC,OAAO,EAAC,6BAA6B;IAAC,iBAAiB,EAAC;MAACC,OAAO,EAACC,MAAM,CAAC,oEAAoE,CAACN,OAAO,CAAC,SAAS,EAAC,YAAU;QAAC,OAAOF,CAAC;MAAA,CAAC,CAAC,EAAC,GAAG,CAAC;MAACS,UAAU,EAAC,CAAC,CAAC;MAACC,MAAM,EAAC,CAAC,CAAC;MAACC,MAAM,EAAC;QAACC,MAAM,EAAC;UAACL,OAAO,EAAC,cAAc;UAACE,UAAU,EAAC,CAAC,CAAC;UAACI,KAAK,EAAC,iBAAiB;UAACF,MAAM,EAAC;YAAC,mBAAmB,EAAC;cAACJ,OAAO,EAAC,gBAAgB;cAACG,MAAM,EAAC,CAAC,CAAC;cAACC,MAAM,EAAC;gBAACG,WAAW,EAAC,WAAW;gBAACT,QAAQ,EAAC;kBAACE,OAAO,EAAC,SAAS;kBAACM,KAAK,EAAC,mBAAmB;kBAACF,MAAM,EAAC;gBAAI;cAAC;YAAC,CAAC;YAACI,IAAI,EAAChB,CAAC,CAACK,SAAS,CAACQ;UAAM;QAAC,CAAC;QAACE,WAAW,EAAC;MAAG;IAAC,CAAC;IAACE,MAAM,EAAC;MAACT,OAAO,EAAC,mBAAmB;MAACG,MAAM,EAAC,CAAC;IAAC,CAAC;IAAC,YAAY,EAAC;MAACH,OAAO,EAAC,kBAAkB;MAACE,UAAU,EAAC,CAAC;IAAC,CAAC;IAACQ,OAAO,EAAC;MAACV,OAAO,EAAC,gBAAgB;MAACI,MAAM,EAAC;QAACG,WAAW,EAAC;MAAK;IAAC,CAAC;IAACI,QAAQ,EAAC,YAAY;IAACJ,WAAW,EAAC;MAACP,OAAO,EAAC,sGAAsG;MAACE,UAAU,EAAC,CAAC;IAAC,CAAC;IAACU,MAAM,EAAC;EAAmB,CAAC;EAAChB,CAAC,CAAC,iBAAiB,CAAC,CAACQ,MAAM,CAACC,MAAM,CAACD,MAAM,CAAC,mBAAmB,CAAC,CAACA,MAAM,CAACN,QAAQ,CAACM,MAAM,GAACR,CAAC,EAACJ,CAAC,CAACK,SAAS,CAACgB,EAAE,GAACjB,CAAC;AAAA,CAAC,CAACkB,KAAK,CAAC"},"metadata":{},"sourceType":"script"}