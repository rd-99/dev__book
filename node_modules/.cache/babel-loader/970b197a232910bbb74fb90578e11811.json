{"ast":null,"code":"import{ActionType}from\"../action-types\";import produce from\"immer\";var initialState={loading:false,error:null,order:[],data:{},isOn:true};var reducer=produce(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;////////////Doubt   \nswitch(action.type){case ActionType.SAVE_CELLS_ERROR:state.error=action.payload;return state;case ActionType.FETCH_CELLS:state.loading=true;state.error=null;return state;case ActionType.FETCH_CELLS_COMPLETE:state.order=action.payload.map(function(cell){return cell.id;});state.data=action.payload.reduce(function(acc,cell){acc[cell.id]=cell;return acc;},{});return state;case ActionType.FETCH_CELLS_ERROR:state.loading=false;state.error=action.payload;return state;case ActionType.UPDATE_CELL:var _action$payload=action.payload,id=_action$payload.id,content=_action$payload.content;state.data[id].content=content;return state;// return {\n//     ...state,\n//     data: {\n//         ...state.data,\n//         [action.payload.id]: {\n//             ...state.data[action.payload.id],\n//             content: action.payload.content\n//         }\n//-----------------------------------------------------------------------------\n// const { id, content} = action.payload;\n// return {\n//     ...state,\n//     data: {\n//         ...state.data,\n//         [id]: {\n//             ...state.data[id],\n//             content,\n//         },\n//     },                          \n// };\ncase ActionType.DELETE_CELL:delete state.data[action.payload];state.order=state.order.filter(function(id){return id!==action.payload;});return state;case ActionType.INCLUDE_CELL_GLOBAL:return state;case ActionType.MOVE_CELL:var direction=action.payload.direction;var index=state.order.findIndex(function(id){return id===action.payload.id;});var targetindex=direction==='up'?index-1:index+1;if(targetindex<0||targetindex>state.order.length-1){return state;}state.order[index]=state.order[targetindex];state.order[targetindex]=action.payload.id;return state;case ActionType.INSERT_CELL_AFTER:var cell={content:'',type:action.payload.type,id:randomID()};state.data[cell.id]=cell;var foundIndex=state.order.findIndex(function(id){return id===action.payload.id;});if(foundIndex<0){state.order.unshift(cell.id);}else{state.order.splice(foundIndex+1,0,cell.id);}return state;default:return state;};},initialState);var randomID=function randomID(){return Math.random().toString(36).substr(2,5);};export default reducer;","map":{"version":3,"names":["ActionType","produce","initialState","loading","error","order","data","isOn","reducer","state","arguments","length","undefined","action","type","SAVE_CELLS_ERROR","payload","FETCH_CELLS","FETCH_CELLS_COMPLETE","map","cell","id","reduce","acc","FETCH_CELLS_ERROR","UPDATE_CELL","_action$payload","content","DELETE_CELL","filter","INCLUDE_CELL_GLOBAL","MOVE_CELL","direction","index","findIndex","targetindex","INSERT_CELL_AFTER","randomID","foundIndex","unshift","splice","Math","random","toString","substr"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/src/state/reducers/cellsReducer.ts"],"sourcesContent":["import { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\nimport { Cell } from \"../cell\";\r\nimport produce from \"immer\";\r\n\r\n\r\ninterface CellsState {\r\n    loading: boolean;\r\n    error: string | null ;\r\n    order: string[];\r\n    data: {\r\n        [key: string] : Cell;\r\n    };\r\n    isOn: boolean\r\n}\r\n\r\nconst initialState: CellsState = {\r\n    loading: false,\r\n    error: null,\r\n    order: [],\r\n    data: {},\r\n    isOn: true\r\n};\r\n\r\nconst reducer = produce(\r\n    (\r\n    state: CellsState = initialState,action: Action\r\n    ): CellsState | void => {    ////////////Doubt   \r\n               \r\n        switch (action.type) {\r\n        \r\n        case ActionType.SAVE_CELLS_ERROR:\r\n            state.error = action.payload;\r\n            return state;\r\n\r\n        case ActionType.FETCH_CELLS:\r\n            state.loading = true;\r\n            state.error = null;\r\n            return state;\r\n\r\n        case ActionType.FETCH_CELLS_COMPLETE:\r\n            state.order = action.payload.map(cell => cell.id);\r\n            state.data = action.payload.reduce((acc, cell) => {\r\n                acc[cell.id] = cell;\r\n                return acc;\r\n            } , {} as CellsState['data'])\r\n            return state;\r\n\r\n        case ActionType.FETCH_CELLS_ERROR:\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n            return state;\r\n\r\n        case ActionType.UPDATE_CELL:\r\n            const { id, content} = action.payload;\r\n            state.data[id].content = content;\r\n            \r\n            return state;\r\n            // return {\r\n            //     ...state,\r\n            //     data: {\r\n            //         ...state.data,\r\n            //         [action.payload.id]: {\r\n            //             ...state.data[action.payload.id],\r\n            //             content: action.payload.content\r\n            //         }\r\n            //-----------------------------------------------------------------------------\r\n            // const { id, content} = action.payload;\r\n            // return {\r\n            //     ...state,\r\n            //     data: {\r\n            //         ...state.data,\r\n            //         [id]: {\r\n            //             ...state.data[id],\r\n            //             content,\r\n            //         },\r\n            //     },                          \r\n            // };\r\n\r\n        case ActionType.DELETE_CELL:\r\n            delete state.data[action.payload];\r\n            state.order = state.order.filter((id) => id !== action.payload)\r\n            return state ;\r\n\r\n        case ActionType.INCLUDE_CELL_GLOBAL:\r\n            \r\n            return state;\r\n\r\n        case ActionType.MOVE_CELL:\r\n            const {direction} = action.payload;\r\n            const index = state.order.findIndex((id) => id === action.payload.id);\r\n            const targetindex = direction === 'up' ? index - 1 : index + 1 ;\r\n            if ( targetindex < 0 || targetindex > state.order.length - 1 ){\r\n                return state;\r\n            } \r\n            state.order[index] = state.order[targetindex];\r\n            state.order[targetindex] = action.payload.id\r\n            return state;\r\n        \r\n        case ActionType.INSERT_CELL_AFTER:\r\n            const cell: Cell = {\r\n                content: '',\r\n                type: action.payload.type,\r\n                id:randomID(),\r\n            };\r\n            state.data[cell.id] = cell;\r\n            const foundIndex = state.order.findIndex(id => id===action.payload.id);\r\n            \r\n\r\n            if(foundIndex < 0){\r\n                state.order.unshift(cell.id);\r\n            }else{\r\n                state.order.splice(foundIndex + 1, 0,cell.id);\r\n            }\r\n\r\n            return state;\r\n            \r\n            default:\r\n            return state; \r\n                 \r\n    };   \r\n}, initialState);\r\n\r\nconst randomID = () => {\r\n    return Math.random().toString(36).substr(2,5);\r\n}\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}