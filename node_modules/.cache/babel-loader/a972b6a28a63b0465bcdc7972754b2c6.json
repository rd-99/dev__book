{"ast":null,"code":"module.exports = flow;\nvar repeat = require('repeat-string');\nfunction flow(parent, context) {\n  var children = parent.children || [];\n  var results = [];\n  var index = -1;\n  var child;\n  while (++index < children.length) {\n    child = children[index];\n    results.push(context.handle(child, parent, context, {\n      before: '\\n',\n      after: '\\n'\n    }));\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]));\n    }\n  }\n  return results.join('');\n  function between(left, right) {\n    var index = -1;\n    var result;\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context);\n      if (result === true || result === 1) {\n        break;\n      }\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result));\n      }\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n';\n      }\n    }\n    return '\\n\\n';\n  }\n}","map":{"version":3,"names":["module","exports","flow","repeat","require","parent","context","children","results","index","child","length","push","handle","before","after","between","join","left","right","result","Number"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/mdast-util-to-markdown/lib/util/container-flow.js"],"sourcesContent":["module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,IAAI;AAErB,IAAIC,MAAM,GAAGC,OAAO,CAAC,eAAe,CAAC;AAErC,SAASF,IAAIA,CAACG,MAAM,EAAEC,OAAO,EAAE;EAC7B,IAAIC,QAAQ,GAAGF,MAAM,CAACE,QAAQ,IAAI,EAAE;EACpC,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,KAAK;EAET,OAAO,EAAED,KAAK,GAAGF,QAAQ,CAACI,MAAM,EAAE;IAChCD,KAAK,GAAGH,QAAQ,CAACE,KAAK,CAAC;IAEvBD,OAAO,CAACI,IAAI,CACVN,OAAO,CAACO,MAAM,CAACH,KAAK,EAAEL,MAAM,EAAEC,OAAO,EAAE;MAACQ,MAAM,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAC,CACpE,CAAC;IAED,IAAIN,KAAK,GAAG,CAAC,GAAGF,QAAQ,CAACI,MAAM,EAAE;MAC/BH,OAAO,CAACI,IAAI,CAACI,OAAO,CAACN,KAAK,EAAEH,QAAQ,CAACE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD;EACF;EAEA,OAAOD,OAAO,CAACS,IAAI,CAAC,EAAE,CAAC;EAEvB,SAASD,OAAOA,CAACE,IAAI,EAAEC,KAAK,EAAE;IAC5B,IAAIV,KAAK,GAAG,CAAC,CAAC;IACd,IAAIW,MAAM;IAEV,OAAO,EAAEX,KAAK,GAAGH,OAAO,CAACW,IAAI,CAACN,MAAM,EAAE;MACpCS,MAAM,GAAGd,OAAO,CAACW,IAAI,CAACR,KAAK,CAAC,CAACS,IAAI,EAAEC,KAAK,EAAEd,MAAM,EAAEC,OAAO,CAAC;MAE1D,IAAIc,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,CAAC,EAAE;QACnC;MACF;MAEA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAOjB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAGkB,MAAM,CAACD,MAAM,CAAC,CAAC;MACzC;MAEA,IAAIA,MAAM,KAAK,KAAK,EAAE;QACpB,OAAO,iBAAiB;MAC1B;IACF;IAEA,OAAO,MAAM;EACf;AACF"},"metadata":{},"sourceType":"script"}