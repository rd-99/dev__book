{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = void 0;\n// This module is suitable for passing as options.parser when calling\n// recast.parse to process ECMAScript code with Esprima:\n//\n//   const ast = recast.parse(source, {\n//     parser: require(\"recast/parsers/esprima\")\n//   });\n//\nvar util_1 = require(\"../lib/util\");\nfunction parse(source, options) {\n  var comments = [];\n  var ast = require(\"esprima\").parse(source, {\n    loc: true,\n    locations: true,\n    comment: true,\n    onComment: comments,\n    range: util_1.getOption(options, \"range\", false),\n    tolerant: util_1.getOption(options, \"tolerant\", true),\n    tokens: true,\n    jsx: util_1.getOption(options, \"jsx\", false)\n  });\n  if (!Array.isArray(ast.comments)) {\n    ast.comments = comments;\n  }\n  return ast;\n}\nexports.parse = parse;\n;","map":{"version":3,"names":["Object","defineProperty","exports","value","parse","util_1","require","source","options","comments","ast","loc","locations","comment","onComment","range","getOption","tolerant","tokens","jsx","Array","isArray"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/jscodeshift/node_modules/recast/parsers/esprima.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\n// This module is suitable for passing as options.parser when calling\n// recast.parse to process ECMAScript code with Esprima:\n//\n//   const ast = recast.parse(source, {\n//     parser: require(\"recast/parsers/esprima\")\n//   });\n//\nvar util_1 = require(\"../lib/util\");\nfunction parse(source, options) {\n    var comments = [];\n    var ast = require(\"esprima\").parse(source, {\n        loc: true,\n        locations: true,\n        comment: true,\n        onComment: comments,\n        range: util_1.getOption(options, \"range\", false),\n        tolerant: util_1.getOption(options, \"tolerant\", true),\n        tokens: true,\n        jsx: util_1.getOption(options, \"jsx\", false)\n    });\n    if (!Array.isArray(ast.comments)) {\n        ast.comments = comments;\n    }\n    return ast;\n}\nexports.parse = parse;\n;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;AACnC,SAASF,KAAKA,CAACG,MAAM,EAAEC,OAAO,EAAE;EAC5B,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,GAAG,GAAGJ,OAAO,CAAC,SAAS,CAAC,CAACF,KAAK,CAACG,MAAM,EAAE;IACvCI,GAAG,EAAE,IAAI;IACTC,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE,IAAI;IACbC,SAAS,EAAEL,QAAQ;IACnBM,KAAK,EAAEV,MAAM,CAACW,SAAS,CAACR,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;IAChDS,QAAQ,EAAEZ,MAAM,CAACW,SAAS,CAACR,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC;IACrDU,MAAM,EAAE,IAAI;IACZC,GAAG,EAAEd,MAAM,CAACW,SAAS,CAACR,OAAO,EAAE,KAAK,EAAE,KAAK;EAC/C,CAAC,CAAC;EACF,IAAI,CAACY,KAAK,CAACC,OAAO,CAACX,GAAG,CAACD,QAAQ,CAAC,EAAE;IAC9BC,GAAG,CAACD,QAAQ,GAAGA,QAAQ;EAC3B;EACA,OAAOC,GAAG;AACd;AACAR,OAAO,CAACE,KAAK,GAAGA,KAAK;AACrB"},"metadata":{},"sourceType":"script"}