{"ast":null,"code":"/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, {\n    pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n    greedy: true,\n    lookbehind: true\n  }, {\n    pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n    greedy: true,\n    lookbehind: true\n  }, /\\b(?:null)\\b/i, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/];\n  var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?=\\{))/i,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'class-name-definition': {\n      pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function-definition': {\n      pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:null|false)\\b/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      // yield from\n      pattern: /(\\byield\\s+)from\\b/i,\n      lookbehind: true\n    },\n    // `class` is always a keyword unlike other keywords\n    /\\bclass\\b/i, {\n      // https://www.php.net/manual/en/reserved.keywords.php\n      //\n      // keywords cannot be preceded by \"->\"\n      // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n      pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n      lookbehind: true\n    }],\n    'argument-name': {\n      pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n      lookbehind: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': {\n      pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'property': {\n      pattern: /(->\\s*)\\w+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string,\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|\\]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);","map":{"version":3,"names":["Prism","comment","constant","pattern","alias","greedy","lookbehind","number","operator","punctuation","languages","php","inside","string_interpolation","string","insertBefore","hooks","add","env","test","code","phpPattern","buildPlaceholders","tokenizePlaceholders"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-php.js"],"sourcesContent":["/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n\tvar comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n\tvar constant = [\n\t\t{\n\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\talias: 'boolean'\n\t\t},\n\t\t{\n\t\t\tpattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t/\\b(?:null)\\b/i,\n\t\t/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/,\n\t];\n\tvar number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n\tvar operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n\tvar punctuation = /[{}\\[\\](),:;]/;\n\n\tPrism.languages.php = {\n\t\t'delimiter': {\n\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': comment,\n\t\t'variable': /\\$+(?:\\w+\\b|(?=\\{))/i,\n\t\t'package': {\n\t\t\tpattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\\\/\n\t\t\t}\n\t\t},\n\t\t'class-name-definition': {\n\t\t\tpattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\tlookbehind: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'function-definition': {\n\t\t\tpattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n\t\t\t\talias: 'type-casting',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n\t\t\t\talias: 'static-context',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\t// yield from\n\t\t\t\tpattern: /(\\byield\\s+)from\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// `class` is always a keyword unlike other keywords\n\t\t\t/\\bclass\\b/i,\n\t\t\t{\n\t\t\t\t// https://www.php.net/manual/en/reserved.keywords.php\n\t\t\t\t//\n\t\t\t\t// keywords cannot be preceded by \"->\"\n\t\t\t\t// the complex lookbehind means `(?<!(?:->|::)\\s*)`\n\t\t\t\tpattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'argument-name': {\n\t\t\tpattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'type-declaration'],\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n\t\t\t\talias: 'static-context',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'static-context'],\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'type-hint'],\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'return-type'],\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'constant': constant,\n\t\t'function': {\n\t\t\tpattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\\\/\n\t\t\t}\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(->\\s*)\\w+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': number,\n\t\t'operator': operator,\n\t\t'punctuation': punctuation\n\t};\n\n\tvar string_interpolation = {\n\t\tpattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages.php\n\t};\n\n\tvar string = [\n\t\t{\n\t\t\tpattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n\t\t\talias: 'nowdoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n\t\t\talias: 'heredoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': string_interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\t\talias: 'backtick-quoted-string',\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\talias: 'single-quoted-string',\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\talias: 'double-quoted-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': string_interpolation\n\t\t\t}\n\t\t}\n\t];\n\n\tPrism.languages.insertBefore('php', 'variable', {\n\t\t'string': string,\n\t\t'attribute': {\n\t\t\tpattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'attribute-content': {\n\t\t\t\t\tpattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t// inside can appear subset of php\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': comment,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'attribute-class-name': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n\t\t\t\t\t\t\t\talias: [\n\t\t\t\t\t\t\t\t\t'class-name',\n\t\t\t\t\t\t\t\t\t'class-name-fully-qualified'\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'constant': constant,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'operator': operator,\n\t\t\t\t\t\t'punctuation': punctuation\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\[|\\]$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tif (!/<\\?/.test(env.code)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t});\n\n}(Prism));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}