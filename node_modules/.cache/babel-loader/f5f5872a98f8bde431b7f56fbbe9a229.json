{"ast":null,"code":"(function (Prism) {\n  // We don't allow for pipes inside parentheses\n  // to not break table pattern |(. foo |). bar |\n  var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source;\n  // Opening and closing parentheses which are not a modifier\n  // This pattern is necessary to prevent exponential backtracking\n  var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n  function withModifier(source, flags) {\n    return RegExp(source.replace(/<MOD>/g, function () {\n      return '(?:' + modifierRegex + ')';\n    }).replace(/<PAR>/g, function () {\n      return '(?:' + parenthesesRegex + ')';\n    }), flags || '');\n  }\n  var modifierTokens = {\n    'css': {\n      pattern: /\\{[^{}]+\\}/,\n      inside: {\n        rest: Prism.languages.css\n      }\n    },\n    'class-id': {\n      pattern: /(\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    'lang': {\n      pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n    'punctuation': /[\\\\\\/]\\d+|\\S/\n  };\n  var textile = Prism.languages.textile = Prism.languages.extend('markup', {\n    'phrase': {\n      pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n      lookbehind: true,\n      inside: {\n        // h1. Header 1\n        'block-tag': {\n          pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n          inside: {\n            'modifier': {\n              pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'tag': /^[a-z]\\w*/,\n            'punctuation': /\\.$/\n          }\n        },\n        // # List item\n        // * List item\n        'list': {\n          pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n          inside: {\n            'modifier': {\n              pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /^[*#]+/\n          }\n        },\n        // | cell | cell | cell |\n        'table': {\n          // Modifiers can be applied to the row: {color:red}.|1|2|3|\n          // or the cell: |{color:red}.1|2|3|\n          pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, 'm'),\n          inside: {\n            'modifier': {\n              // Modifiers for rows after the first one are\n              // preceded by a pipe and a line feed\n              pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /\\||^\\./\n          }\n        },\n        'inline': {\n          pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n          lookbehind: true,\n          inside: {\n            // Note: superscripts and subscripts are not handled specifically\n\n            // *bold*, **bold**\n            'bold': {\n              pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n              lookbehind: true\n            },\n            // _italic_, __italic__\n            'italic': {\n              pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n              lookbehind: true\n            },\n            // ??cite??\n            'cite': {\n              pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n              lookbehind: true,\n              alias: 'string'\n            },\n            // @code@\n            'code': {\n              pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            // +inserted+\n            'inserted': {\n              pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n              lookbehind: true\n            },\n            // -deleted-\n            'deleted': {\n              pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n              lookbehind: true\n            },\n            // %span%\n            'span': {\n              pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /[*_%?@+\\-^~]+/\n          }\n        },\n        // [alias]http://example.com\n        'link-ref': {\n          pattern: /^\\[[^\\]]+\\]\\S+$/m,\n          inside: {\n            'string': {\n              pattern: /(^\\[)[^\\]]+(?=\\])/,\n              lookbehind: true\n            },\n            'url': {\n              pattern: /(^\\])\\S+$/,\n              lookbehind: true\n            },\n            'punctuation': /[\\[\\]]/\n          }\n        },\n        // \"text\":http://example.com\n        // \"text\":link-ref\n        'link': {\n          pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n          inside: {\n            'text': {\n              pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: withModifier(/(^\")<MOD>+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[\":]/\n          }\n        },\n        // !image.jpg!\n        // !image.jpg(Title)!:http://example.com\n        'image': {\n          pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n          inside: {\n            'source': {\n              pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n              lookbehind: true,\n              alias: 'url'\n            },\n            'modifier': {\n              pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[!:]/\n          }\n        },\n        // Footnote[1]\n        'footnote': {\n          pattern: /\\b\\[\\d+\\]/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /\\[|\\]/\n          }\n        },\n        // CSS(Cascading Style Sheet)\n        'acronym': {\n          pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n          inside: {\n            'comment': {\n              pattern: /(\\()[^()]+(?=\\))/,\n              lookbehind: true\n            },\n            'punctuation': /[()]/\n          }\n        },\n        // Prism(C)\n        'mark': {\n          pattern: /\\b\\((?:TM|R|C)\\)/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /[()]/\n          }\n        }\n      }\n    }\n  });\n  var phraseInside = textile['phrase'].inside;\n  var nestedPatterns = {\n    'inline': phraseInside['inline'],\n    'link': phraseInside['link'],\n    'image': phraseInside['image'],\n    'footnote': phraseInside['footnote'],\n    'acronym': phraseInside['acronym'],\n    'mark': phraseInside['mark']\n  };\n\n  // Only allow alpha-numeric HTML tags, not XML tags\n  textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n  // Allow some nesting\n  var phraseInlineInside = phraseInside['inline'].inside;\n  phraseInlineInside['bold'].inside = nestedPatterns;\n  phraseInlineInside['italic'].inside = nestedPatterns;\n  phraseInlineInside['inserted'].inside = nestedPatterns;\n  phraseInlineInside['deleted'].inside = nestedPatterns;\n  phraseInlineInside['span'].inside = nestedPatterns;\n\n  // Allow some styles inside table cells\n  var phraseTableInside = phraseInside['table'].inside;\n  phraseTableInside['inline'] = nestedPatterns['inline'];\n  phraseTableInside['link'] = nestedPatterns['link'];\n  phraseTableInside['image'] = nestedPatterns['image'];\n  phraseTableInside['footnote'] = nestedPatterns['footnote'];\n  phraseTableInside['acronym'] = nestedPatterns['acronym'];\n  phraseTableInside['mark'] = nestedPatterns['mark'];\n})(Prism);","map":{"version":3,"names":["Prism","modifierRegex","source","parenthesesRegex","withModifier","flags","RegExp","replace","modifierTokens","pattern","inside","rest","languages","css","lookbehind","alias","textile","extend","phraseInside","nestedPatterns","tag","phraseInlineInside","phraseTableInside"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-textile.js"],"sourcesContent":["(function (Prism) {\n\t// We don't allow for pipes inside parentheses\n\t// to not break table pattern |(. foo |). bar |\n\tvar modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source;\n\t// Opening and closing parentheses which are not a modifier\n\t// This pattern is necessary to prevent exponential backtracking\n\tvar parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n\t/**\n\t * @param {string} source\n\t * @param {string} [flags]\n\t */\n\tfunction withModifier(source, flags) {\n\t\treturn RegExp(\n\t\t\tsource\n\t\t\t\t.replace(/<MOD>/g, function () { return '(?:' + modifierRegex + ')'; })\n\t\t\t\t.replace(/<PAR>/g, function () { return '(?:' + parenthesesRegex + ')'; }),\n\t\t\tflags || '');\n\t}\n\n\tvar modifierTokens = {\n\t\t'css': {\n\t\t\tpattern: /\\{[^{}]+\\}/,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.css\n\t\t\t}\n\t\t},\n\t\t'class-id': {\n\t\t\tpattern: /(\\()[^()]+(?=\\))/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t'lang': {\n\t\t\tpattern: /(\\[)[^\\[\\]]+(?=\\])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t// Anything else is punctuation (the first pattern is for row/col spans inside tables)\n\t\t'punctuation': /[\\\\\\/]\\d+|\\S/\n\t};\n\n\n\tvar textile = Prism.languages.textile = Prism.languages.extend('markup', {\n\t\t'phrase': {\n\t\t\tpattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\n\t\t\t\t// h1. Header 1\n\t\t\t\t'block-tag': {\n\t\t\t\t\tpattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'tag': /^[a-z]\\w*/,\n\t\t\t\t\t\t'punctuation': /\\.$/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// # List item\n\t\t\t\t// * List item\n\t\t\t\t'list': {\n\t\t\t\t\tpattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^[*#]+)<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /^[*#]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// | cell | cell | cell |\n\t\t\t\t'table': {\n\t\t\t\t\t// Modifiers can be applied to the row: {color:red}.|1|2|3|\n\t\t\t\t\t// or the cell: |{color:red}.1|2|3|\n\t\t\t\t\tpattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\t// Modifiers for rows after the first one are\n\t\t\t\t\t\t\t// preceded by a pipe and a line feed\n\t\t\t\t\t\t\tpattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\||^\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t'inline': {\n\t\t\t\t\tpattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// Note: superscripts and subscripts are not handled specifically\n\n\t\t\t\t\t\t// *bold*, **bold**\n\t\t\t\t\t\t'bold': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// _italic_, __italic__\n\t\t\t\t\t\t'italic': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// ??cite??\n\t\t\t\t\t\t'cite': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'string'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// @code@\n\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// +inserted+\n\t\t\t\t\t\t'inserted': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// -deleted-\n\t\t\t\t\t\t'deleted': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// %span%\n\t\t\t\t\t\t'span': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[*_%?@+\\-^~]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// [alias]http://example.com\n\t\t\t\t'link-ref': {\n\t\t\t\t\tpattern: /^\\[[^\\]]+\\]\\S+$/m,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'string': {\n\t\t\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(^\\])\\S+$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\\[\\]]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// \"text\":http://example.com\n\t\t\t\t// \"text\":link-ref\n\t\t\t\t'link': {\n\t\t\t\t\tpattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'text': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^\")<MOD>+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\":]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// !image.jpg!\n\t\t\t\t// !image.jpg(Title)!:http://example.com\n\t\t\t\t'image': {\n\t\t\t\t\tpattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'source': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'url'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[!:]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Footnote[1]\n\t\t\t\t'footnote': {\n\t\t\t\t\tpattern: /\\b\\[\\d+\\]/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\[|\\]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// CSS(Cascading Style Sheet)\n\t\t\t\t'acronym': {\n\t\t\t\t\tpattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': {\n\t\t\t\t\t\t\tpattern: /(\\()[^()]+(?=\\))/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Prism(C)\n\t\t\t\t'mark': {\n\t\t\t\t\tpattern: /\\b\\((?:TM|R|C)\\)/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar phraseInside = textile['phrase'].inside;\n\tvar nestedPatterns = {\n\t\t'inline': phraseInside['inline'],\n\t\t'link': phraseInside['link'],\n\t\t'image': phraseInside['image'],\n\t\t'footnote': phraseInside['footnote'],\n\t\t'acronym': phraseInside['acronym'],\n\t\t'mark': phraseInside['mark']\n\t};\n\n\t// Only allow alpha-numeric HTML tags, not XML tags\n\ttextile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n\t// Allow some nesting\n\tvar phraseInlineInside = phraseInside['inline'].inside;\n\tphraseInlineInside['bold'].inside = nestedPatterns;\n\tphraseInlineInside['italic'].inside = nestedPatterns;\n\tphraseInlineInside['inserted'].inside = nestedPatterns;\n\tphraseInlineInside['deleted'].inside = nestedPatterns;\n\tphraseInlineInside['span'].inside = nestedPatterns;\n\n\t// Allow some styles inside table cells\n\tvar phraseTableInside = phraseInside['table'].inside;\n\tphraseTableInside['inline'] = nestedPatterns['inline'];\n\tphraseTableInside['link'] = nestedPatterns['link'];\n\tphraseTableInside['image'] = nestedPatterns['image'];\n\tphraseTableInside['footnote'] = nestedPatterns['footnote'];\n\tphraseTableInside['acronym'] = nestedPatterns['acronym'];\n\tphraseTableInside['mark'] = nestedPatterns['mark'];\n\n}(Prism));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}