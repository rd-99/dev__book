{"ast":null,"code":"import axios from 'axios';\nimport localForage from 'localforage';\n//import { OutputFileType } from 'typescript';\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache'\n});\nexport const fetchPlugin = inputCode => {\n  return {\n    name: 'fetch-plugin',\n    setup(build) {\n      build.onLoad({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          loader: 'jsx',\n          contents: inputCode\n        };\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const cachedResult = await fileCache.getItem(args.path);\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n      build.onLoad({\n        filter: /.css$/\n      }, async args => {\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n        const escaped = data.replace(/\\n/g, '').replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n        const contents = `\n        const style = document.createElement('style');\n        style.innerText = '${escaped}';\n        document.head.appendChild(style);\n        `;\n\n        // const loader = args.path.match(/.css$/) ? 'css' : 'jsx';\n        const result = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        const {\n          data,\n          request\n        } = await axios.get(args.path);\n\n        // const loader = args.path.match(/.css$/) ? 'css' : 'jsx';\n        const result = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname\n        };\n        await fileCache.setItem(args.path, result);\n        return result;\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","localForage","fileCache","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","cachedResult","getItem","path","data","request","get","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/src/bundler/plugins/fetch-plugin.ts"],"sourcesContent":["import * as esbuild from 'esbuild-wasm';\r\nimport axios from 'axios';\r\nimport localForage from 'localforage';\r\n//import { OutputFileType } from 'typescript';\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: 'filecache',\r\n});\r\n\r\nexport const fetchPlugin = (inputCode: string) => {\r\n  return {\r\n    name: 'fetch-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      build.onLoad({filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: 'jsx',\r\n          contents: inputCode,\r\n        };\r\n      });\r\n        build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\r\n          args.path\r\n        );\r\n\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n\r\n      build.onLoad({ filter: /.css$/ } ,async (args: any) => {\r\n        \r\n        const { data, request } = await axios.get(args.path);        \r\n        const escaped = data\r\n        .replace(/\\n/g, '')\r\n        .replace(/\"/g,  '\\\\\"')\r\n        .replace(/'/g,\"\\\\'\");\r\n        const contents = \r\n        `\r\n        const style = document.createElement('style');\r\n        style.innerText = '${escaped}';\r\n        document.head.appendChild(style);\r\n        `;\r\n        \r\n\r\n\r\n       // const loader = args.path.match(/.css$/) ? 'css' : 'jsx';\r\n        const result: esbuild.OnLoadResult = {\r\n          loader : 'jsx',\r\n          contents,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n\r\n        return result;\r\n        \r\n      })\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        \r\n        const { data, request } = await axios.get(args.path);        \r\n        \r\n        \r\n\r\n\r\n       // const loader = args.path.match(/.css$/) ? 'css' : 'jsx';\r\n        const result: esbuild.OnLoadResult = {\r\n          loader : 'jsx',\r\n          contents : data,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;AACrC;;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACE,cAAc,CAAC;EAC3CC,IAAI,EAAE;AACR,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAIC,SAAiB,IAAK;EAChD,OAAO;IACLF,IAAI,EAAE,cAAc;IACpBG,KAAKA,CAACC,KAA0B,EAAE;MAChCA,KAAK,CAACC,MAAM,CAAC;QAACC,MAAM,EAAE;MAAgB,CAAC,EAAE,MAAM;QAC7C,OAAO;UACLC,MAAM,EAAE,KAAK;UACbC,QAAQ,EAAEN;QACZ,CAAC;MACH,CAAC,CAAC;MACAE,KAAK,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAK,CAAC,EAAE,MAAOG,IAAS,IAAK;QACpD,MAAMC,YAAY,GAAG,MAAMZ,SAAS,CAACa,OAAO,CAC1CF,IAAI,CAACG,IACP,CAAC;QAED,IAAIF,YAAY,EAAE;UAChB,OAAOA,YAAY;QACrB;MACF,CAAC,CAAC;MAEFN,KAAK,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAQ,CAAC,EAAE,MAAOG,IAAS,IAAK;QAErD,MAAM;UAAEI,IAAI;UAAEC;QAAQ,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACN,IAAI,CAACG,IAAI,CAAC;QACpD,MAAMI,OAAO,GAAGH,IAAI,CACnBI,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,IAAI,EAAG,KAAK,CAAC,CACrBA,OAAO,CAAC,IAAI,EAAC,KAAK,CAAC;QACpB,MAAMT,QAAQ,GACb;AACT;AACA,6BAA6BQ,OAAQ;AACrC;AACA,SAAS;;QAIF;QACC,MAAME,MAA4B,GAAG;UACnCX,MAAM,EAAG,KAAK;UACdC,QAAQ;UACRW,UAAU,EAAE,IAAIC,GAAG,CAAC,IAAI,EAAEN,OAAO,CAACO,WAAW,CAAC,CAACC;QACjD,CAAC;QACD,MAAMxB,SAAS,CAACyB,OAAO,CAACd,IAAI,CAACG,IAAI,EAAEM,MAAM,CAAC;QAE1C,OAAOA,MAAM;MAEf,CAAC,CAAC;MACFd,KAAK,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAK,CAAC,EAAE,MAAOG,IAAS,IAAK;QAElD,MAAM;UAAEI,IAAI;UAAEC;QAAQ,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACN,IAAI,CAACG,IAAI,CAAC;;QAKrD;QACC,MAAMM,MAA4B,GAAG;UACnCX,MAAM,EAAG,KAAK;UACdC,QAAQ,EAAGK,IAAI;UACfM,UAAU,EAAE,IAAIC,GAAG,CAAC,IAAI,EAAEN,OAAO,CAACO,WAAW,CAAC,CAACC;QACjD,CAAC;QACD,MAAMxB,SAAS,CAACyB,OAAO,CAACd,IAAI,CAACG,IAAI,EAAEM,MAAM,CAAC;QAE1C,OAAOA,MAAM;MACf,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}