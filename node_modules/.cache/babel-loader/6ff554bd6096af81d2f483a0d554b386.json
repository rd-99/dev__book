{"ast":null,"code":"(function (Prism) {\n  Prism.languages.agda = {\n    'comment': /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n    'string': {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'punctuation': /[(){}⦃⦄.;@]/,\n    'class-name': {\n      pattern: /((?:data|record) +)\\S+/,\n      lookbehind: true\n    },\n    'function': {\n      pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n      lookbehind: true\n    },\n    'operator': {\n      pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n      lookbehind: true\n    },\n    'keyword': /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n  };\n})(Prism);","map":{"version":3,"names":["Prism","languages","agda","pattern","greedy","lookbehind"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-agda.js"],"sourcesContent":["(function (Prism) {\n\n\tPrism.languages.agda = {\n\t\t'comment': /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n\t\t'string': {\n\t\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n\t\t\tgreedy: true,\n\t\t},\n\t\t'punctuation': /[(){}⦃⦄.;@]/,\n\t\t'class-name': {\n\t\t\tpattern: /((?:data|record) +)\\S+/,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t'operator': {\n\t\t\tpattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n\t\t\tlookbehind: true,\n\t\t},\n\t\t'keyword': /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/,\n\t};\n}(Prism));\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EAEjBA,KAAK,CAACC,SAAS,CAACC,IAAI,GAAG;IACtB,SAAS,EAAE,2BAA2B;IACtC,QAAQ,EAAE;MACTC,OAAO,EAAE,qCAAqC;MAC9CC,MAAM,EAAE;IACT,CAAC;IACD,aAAa,EAAE,aAAa;IAC5B,YAAY,EAAE;MACbD,OAAO,EAAE,wBAAwB;MACjCE,UAAU,EAAE;IACb,CAAC;IACD,UAAU,EAAE;MACXF,OAAO,EAAE,gCAAgC;MACzCE,UAAU,EAAE;IACb,CAAC;IACD,UAAU,EAAE;MACXF,OAAO,EAAE,oCAAoC;MAC7CE,UAAU,EAAE;IACb,CAAC;IACD,SAAS,EAAE;EACZ,CAAC;AACF,CAAC,EAACL,KAAK,CAAC"},"metadata":{},"sourceType":"script"}