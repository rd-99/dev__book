{"ast":null,"code":"\"use strict\";\n\n;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar core_operators_1 = require(\"./core-operators\");\nvar es2019_1 = tslib_1.__importDefault(require(\"./es2019\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n  fork.use(es2019_1.default);\n  var types = fork.use(types_1.default);\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var shared = fork.use(shared_1.default);\n  var defaults = shared.defaults;\n  def(\"ImportExpression\").bases(\"Expression\").build(\"source\").field(\"source\", def(\"Expression\"));\n  def(\"ExportAllDeclaration\").build(\"source\", \"exported\").field(\"source\", def(\"Literal\")).field(\"exported\", or(def(\"Identifier\"), null));\n  // Optional chaining\n  def(\"ChainElement\").bases(\"Node\").field(\"optional\", Boolean, defaults[\"false\"]);\n  def(\"CallExpression\").bases(\"Expression\", \"ChainElement\");\n  def(\"MemberExpression\").bases(\"Expression\", \"ChainElement\");\n  def(\"ChainExpression\").bases(\"Expression\").build(\"expression\").field(\"expression\", def(\"ChainElement\"));\n  def(\"OptionalCallExpression\").bases(\"CallExpression\").build(\"callee\", \"arguments\", \"optional\").field(\"optional\", Boolean, defaults[\"true\"]);\n  // Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer\n  def(\"OptionalMemberExpression\").bases(\"MemberExpression\").build(\"object\", \"property\", \"computed\", \"optional\").field(\"optional\", Boolean, defaults[\"true\"]);\n  // Nullish coalescing\n  var LogicalOperator = or.apply(void 0, tslib_1.__spreadArrays(core_operators_1.LogicalOperators, [\"??\"]));\n  def(\"LogicalExpression\").field(\"operator\", LogicalOperator);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","core_operators_1","es2019_1","__importDefault","types_1","shared_1","default_1","fork","use","default","types","def","Type","or","shared","defaults","bases","build","field","Boolean","LogicalOperator","apply","__spreadArrays","LogicalOperators","module"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/jscodeshift/node_modules/ast-types/def/es2020.js"],"sourcesContent":["\"use strict\";;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_operators_1 = require(\"./core-operators\");\nvar es2019_1 = tslib_1.__importDefault(require(\"./es2019\"));\nvar types_1 = tslib_1.__importDefault(require(\"../lib/types\"));\nvar shared_1 = tslib_1.__importDefault(require(\"../lib/shared\"));\nfunction default_1(fork) {\n    fork.use(es2019_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"ImportExpression\")\n        .bases(\"Expression\")\n        .build(\"source\")\n        .field(\"source\", def(\"Expression\"));\n    def(\"ExportAllDeclaration\")\n        .build(\"source\", \"exported\")\n        .field(\"source\", def(\"Literal\"))\n        .field(\"exported\", or(def(\"Identifier\"), null));\n    // Optional chaining\n    def(\"ChainElement\")\n        .bases(\"Node\")\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"CallExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"MemberExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"ChainExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"ChainElement\"));\n    def(\"OptionalCallExpression\")\n        .bases(\"CallExpression\")\n        .build(\"callee\", \"arguments\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n    // Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer\n    def(\"OptionalMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\", \"computed\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n    // Nullish coalescing\n    var LogicalOperator = or.apply(void 0, tslib_1.__spreadArrays(core_operators_1.LogicalOperators, [\"??\"]));\n    def(\"LogicalExpression\")\n        .field(\"operator\", LogicalOperator);\n}\nexports.default = default_1;\nmodule.exports = exports[\"default\"];\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}