{"ast":null,"code":"Prism.languages.eiffel = {\n  'comment': /--.*/,\n  'string': [\n  // Aligned-verbatim-strings\n  {\n    pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n    greedy: true\n  },\n  // Non-aligned-verbatim-strings\n  {\n    pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n    greedy: true\n  },\n  // Single-line string\n  {\n    pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n    greedy: true\n  }],\n  // normal char | special char | char code\n  'char': /'(?:%.|[^%'\\r\\n])+'/,\n  'keyword': /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n  'boolean': /\\b(?:True|False)\\b/i,\n  // Convention: class-names are always all upper-case characters\n  'class-name': {\n    'pattern': /\\b[A-Z][\\dA-Z_]*\\b/,\n    'alias': 'builtin'\n  },\n  'number': [\n  // hexa | octal | bin\n  /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n  // Decimal\n  /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i],\n  'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n  'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n};","map":{"version":3,"names":["Prism","languages","eiffel","pattern","greedy"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-eiffel.js"],"sourcesContent":["Prism.languages.eiffel = {\n\t'comment': /--.*/,\n\t'string': [\n\t\t// Aligned-verbatim-strings\n\t\t{\n\t\t\tpattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t// Non-aligned-verbatim-strings\n\t\t{\n\t\t\tpattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t// Single-line string\n\t\t{\n\t\t\tpattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t// normal char | special char | char code\n\t'char': /'(?:%.|[^%'\\r\\n])+'/,\n\t'keyword': /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n\t'boolean': /\\b(?:True|False)\\b/i,\n\t// Convention: class-names are always all upper-case characters\n\t'class-name': {\n\t\t'pattern': /\\b[A-Z][\\dA-Z_]*\\b/,\n\t\t'alias': 'builtin'\n\t},\n\t'number': [\n\t\t// hexa | octal | bin\n\t\t/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n\t\t// Decimal\n\t\t/(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n\t],\n\t'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n\t'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n};\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAG;EACxB,SAAS,EAAE,MAAM;EACjB,QAAQ,EAAE;EACT;EACA;IACCC,OAAO,EAAE,yBAAyB;IAClCC,MAAM,EAAE;EACT,CAAC;EACD;EACA;IACCD,OAAO,EAAE,yBAAyB;IAClCC,MAAM,EAAE;EACT,CAAC;EACD;EACA;IACCD,OAAO,EAAE,2CAA2C;IACpDC,MAAM,EAAE;EACT,CAAC,CACD;EACD;EACA,MAAM,EAAE,qBAAqB;EAC7B,SAAS,EAAE,8YAA8Y;EACzZ,SAAS,EAAE,qBAAqB;EAChC;EACA,YAAY,EAAE;IACb,SAAS,EAAE,oBAAoB;IAC/B,OAAO,EAAE;EACV,CAAC;EACD,QAAQ,EAAE;EACT;EACA,kCAAkC;EAClC;EACA,kFAAkF,CAClF;EACD,aAAa,EAAE,8CAA8C;EAC7D,UAAU,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"script"}