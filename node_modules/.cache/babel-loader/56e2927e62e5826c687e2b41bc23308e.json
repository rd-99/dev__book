{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactDraggable = require(\"react-draggable\");\nvar _utils = require(\"./utils\");\nvar _propTypes = require(\"./propTypes\");\nvar _excluded = [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"];\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\n// The base <Resizable> component.\n// This component does not have state and relies on the parent to set its props based on callback data.\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n  function Resizable() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleRefs = {};\n    _this.lastHandleRect = null;\n    _this.slack = null;\n    return _this;\n  }\n  var _proto = Resizable.prototype;\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _this$props = this.props,\n      minConstraints = _this$props.minConstraints,\n      maxConstraints = _this$props.maxConstraints,\n      lockAspectRatio = _this$props.lockAspectRatio; // short circuit\n\n    if (!minConstraints && !maxConstraints && !lockAspectRatio) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (lockAspectRatio) {\n      var ratio = this.props.width / this.props.height;\n      var deltaW = width - this.props.width;\n      var deltaH = height - this.props.height; // Find which coordinate was greater and should push the other toward it.\n      // E.g.:\n      // ratio = 1, deltaW = 10, deltaH = 5, deltaH should become 10.\n      // ratio = 2, deltaW = 10, deltaH = 6, deltaW should become 12.\n\n      if (Math.abs(deltaW) > Math.abs(deltaH * ratio)) {\n        height = width / ratio;\n      } else {\n        width = height * ratio;\n      }\n    }\n    var oldW = width,\n      oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref = this.slack || [0, 0],\n      slackW = _ref[0],\n      slackH = _ref[1];\n    width += slackW;\n    height += slackH;\n    if (minConstraints) {\n      width = Math.max(minConstraints[0], width);\n      height = Math.max(minConstraints[1], height);\n    }\n    if (maxConstraints) {\n      width = Math.min(maxConstraints[0], width);\n      height = Math.min(maxConstraints[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n    return function (e, _ref2) {\n      var node = _ref2.node,\n        deltaX = _ref2.deltaX,\n        deltaY = _ref2.deltaY;\n      // Reset data in case it was left over somehow (should not be possible)\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n      if (cb && !shouldSkipCb) {\n        e.persist == null ? void 0 : e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  } // Render a resize handle given an axis & DOM ref. Ref *must* be attached for\n  // the underlying draggable library to work properly.\n  ;\n\n  _proto.renderResizeHandle = function renderResizeHandle(handleAxis, ref) {\n    var handle = this.props.handle; // No handle provided, make the default\n\n    if (!handle) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"react-resizable-handle react-resizable-handle-\" + handleAxis,\n        ref: ref\n      });\n    } // Handle is a function, such as:\n    // `handle={(handleAxis) => <span className={...} />}`\n\n    if (typeof handle === 'function') {\n      return handle(handleAxis, ref);\n    } // Handle is a React component (composite or DOM).\n\n    var isDOMElement = typeof handle.type === 'string';\n    var props = _objectSpread({\n      ref: ref\n    }, isDOMElement ? {} : {\n      handleAxis: handleAxis\n    });\n    return /*#__PURE__*/React.cloneElement(handle, props);\n  };\n  _proto.render = function render() {\n    var _this3 = this;\n\n    // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n    var _this$props2 = this.props,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      draggableOpts = _this$props2.draggableOpts,\n      width = _this$props2.width,\n      height = _this$props2.height,\n      handle = _this$props2.handle,\n      handleSize = _this$props2.handleSize,\n      lockAspectRatio = _this$props2.lockAspectRatio,\n      axis = _this$props2.axis,\n      minConstraints = _this$props2.minConstraints,\n      maxConstraints = _this$props2.maxConstraints,\n      onResize = _this$props2.onResize,\n      onResizeStop = _this$props2.onResizeStop,\n      onResizeStart = _this$props2.onResizeStart,\n      resizeHandles = _this$props2.resizeHandles,\n      transformScale = _this$props2.transformScale,\n      p = _objectWithoutPropertiesLoose(_this$props2, _excluded); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // 1. Its original children (resizable's child's children), and\n    // 2. One or more draggable handles.\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        var _this3$handleRefs$han;\n\n        // Create a ref to the handle so that `<DraggableCore>` doesn't have to use ReactDOM.findDOMNode().\n        var ref = (_this3$handleRefs$han = _this3.handleRefs[handleAxis]) != null ? _this3$handleRefs$han : _this3.handleRefs[handleAxis] = /*#__PURE__*/React.createRef();\n        return /*#__PURE__*/React.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          nodeRef: ref,\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis, ref));\n      }))\n    }));\n  };\n  return Resizable;\n}(React.Component);\nexports.default = Resizable;\nResizable.propTypes = _propTypes.resizableProps;\nResizable.defaultProps = {\n  axis: 'both',\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n};","map":{"version":3,"names":["exports","__esModule","default","React","_interopRequireWildcard","require","_reactDraggable","_utils","_propTypes","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","target","i","arguments","length","source","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","configurable","writable","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","Resizable","_React$Component","_this","_len","args","Array","_key","concat","handleRefs","lastHandleRect","slack","_proto","componentWillUnmount","resetData","runConstraints","width","height","_this$props","props","minConstraints","maxConstraints","lockAspectRatio","ratio","deltaW","deltaH","Math","abs","oldW","oldH","_ref","slackW","slackH","max","min","resizeHandler","handlerName","axis","_this2","e","_ref2","node","deltaX","deltaY","canDragX","canDragY","axisV","axisH","handleRect","getBoundingClientRect","deltaLeftSinceLast","left","deltaTopSinceLast","top","transformScale","_this2$runConstraints","dimensionsChanged","cb","shouldSkipCb","persist","size","handle","renderResizeHandle","handleAxis","ref","createElement","className","isDOMElement","type","cloneElement","render","_this3","_this$props2","children","draggableOpts","handleSize","onResize","onResizeStop","onResizeStart","resizeHandles","map","_this3$handleRefs$han","createRef","DraggableCore","nodeRef","onStop","onStart","onDrag","Component","propTypes","resizableProps","defaultProps","Infinity"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/react-resizable/build/Resizable.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nvar _propTypes = require(\"./propTypes\");\n\nvar _excluded = [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// The base <Resizable> component.\n// This component does not have state and relies on the parent to set its props based on callback data.\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleRefs = {};\n    _this.lastHandleRect = null;\n    _this.slack = null;\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _this$props = this.props,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        lockAspectRatio = _this$props.lockAspectRatio; // short circuit\n\n    if (!minConstraints && !maxConstraints && !lockAspectRatio) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (lockAspectRatio) {\n      var ratio = this.props.width / this.props.height;\n      var deltaW = width - this.props.width;\n      var deltaH = height - this.props.height; // Find which coordinate was greater and should push the other toward it.\n      // E.g.:\n      // ratio = 1, deltaW = 10, deltaH = 5, deltaH should become 10.\n      // ratio = 2, deltaW = 10, deltaH = 6, deltaW should become 12.\n\n      if (Math.abs(deltaW) > Math.abs(deltaH * ratio)) {\n        height = width / ratio;\n      } else {\n        width = height * ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref = this.slack || [0, 0],\n        slackW = _ref[0],\n        slackH = _ref[1];\n\n    width += slackW;\n    height += slackH;\n\n    if (minConstraints) {\n      width = Math.max(minConstraints[0], width);\n      height = Math.max(minConstraints[1], height);\n    }\n\n    if (maxConstraints) {\n      width = Math.min(maxConstraints[0], width);\n      height = Math.min(maxConstraints[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n      // Reset data in case it was left over somehow (should not be possible)\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n\n      if (cb && !shouldSkipCb) {\n        e.persist == null ? void 0 : e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  } // Render a resize handle given an axis & DOM ref. Ref *must* be attached for\n  // the underlying draggable library to work properly.\n  ;\n\n  _proto.renderResizeHandle = function renderResizeHandle(handleAxis, ref) {\n    var handle = this.props.handle; // No handle provided, make the default\n\n    if (!handle) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"react-resizable-handle react-resizable-handle-\" + handleAxis,\n        ref: ref\n      });\n    } // Handle is a function, such as:\n    // `handle={(handleAxis) => <span className={...} />}`\n\n\n    if (typeof handle === 'function') {\n      return handle(handleAxis, ref);\n    } // Handle is a React component (composite or DOM).\n\n\n    var isDOMElement = typeof handle.type === 'string';\n\n    var props = _objectSpread({\n      ref: ref\n    }, isDOMElement ? {} : {\n      handleAxis: handleAxis\n    });\n\n    return /*#__PURE__*/React.cloneElement(handle, props);\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        draggableOpts = _this$props2.draggableOpts,\n        width = _this$props2.width,\n        height = _this$props2.height,\n        handle = _this$props2.handle,\n        handleSize = _this$props2.handleSize,\n        lockAspectRatio = _this$props2.lockAspectRatio,\n        axis = _this$props2.axis,\n        minConstraints = _this$props2.minConstraints,\n        maxConstraints = _this$props2.maxConstraints,\n        onResize = _this$props2.onResize,\n        onResizeStop = _this$props2.onResizeStop,\n        onResizeStart = _this$props2.onResizeStart,\n        resizeHandles = _this$props2.resizeHandles,\n        transformScale = _this$props2.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props2, _excluded); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // 1. Its original children (resizable's child's children), and\n    // 2. One or more draggable handles.\n\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        var _this3$handleRefs$han;\n\n        // Create a ref to the handle so that `<DraggableCore>` doesn't have to use ReactDOM.findDOMNode().\n        var ref = (_this3$handleRefs$han = _this3.handleRefs[handleAxis]) != null ? _this3$handleRefs$han : _this3.handleRefs[handleAxis] = /*#__PURE__*/React.createRef();\n        return /*#__PURE__*/React.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          nodeRef: ref,\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis, ref));\n      }))\n    }));\n  };\n\n  return Resizable;\n}(React.Component);\n\nexports.default = Resizable;\nResizable.propTypes = _propTypes.resizableProps;\nResizable.defaultProps = {\n  axis: 'both',\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}