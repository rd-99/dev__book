{"ast":null,"code":"Prism.languages['excel-formula'] = {\n  'comment': {\n    pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n    greedy: true\n  },\n  'reference': {\n    // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n\n    // Sales!B2\n    // 'Winter sales'!B2\n    // [Sales.xlsx]Jan!B2:B5\n    // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n    // '[Sales.xlsx]Jan sales'!B2:B5\n    // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n\n    pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'operator': /!$/,\n      'punctuation': /'/,\n      'sheet': {\n        pattern: /[^[\\]]+$/,\n        alias: 'function'\n      },\n      'file': {\n        pattern: /\\[[^[\\]]+\\]$/,\n        inside: {\n          'punctuation': /[[\\]]/\n        }\n      },\n      'path': /[\\s\\S]+/\n    }\n  },\n  'function-name': {\n    pattern: /\\b[A-Z]\\w*(?=\\()/i,\n    alias: 'keyword'\n  },\n  'range': {\n    pattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n    alias: 'property',\n    inside: {\n      'operator': /:/,\n      'cell': /\\$?[A-Z]+\\$?\\d+/i,\n      'column': /\\$?[A-Z]+/i,\n      'row': /\\$?\\d+/\n    }\n  },\n  'cell': {\n    // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n    // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n    pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n    alias: 'property'\n  },\n  'number': /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n  'operator': /[-+*/^%=&,]|<[=>]?|>=?/,\n  'punctuation': /[[\\]();{}|]/\n};\nPrism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];","map":{"version":3,"names":["Prism","languages","pattern","lookbehind","greedy","alias","inside"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-excel-formula.js"],"sourcesContent":["Prism.languages['excel-formula'] = {\n\t'comment': {\n\t\tpattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n\t\tgreedy: true\n\t},\n\t'reference': {\n\t\t// https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n\n\t\t// Sales!B2\n\t\t// 'Winter sales'!B2\n\t\t// [Sales.xlsx]Jan!B2:B5\n\t\t// D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n\t\t// '[Sales.xlsx]Jan sales'!B2:B5\n\t\t// 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n\n\t\tpattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n\t\tgreedy: true,\n\t\talias: 'string',\n\t\tinside: {\n\t\t\t'operator': /!$/,\n\t\t\t'punctuation': /'/,\n\t\t\t'sheet': {\n\t\t\t\tpattern: /[^[\\]]+$/,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t'file': {\n\t\t\t\tpattern: /\\[[^[\\]]+\\]$/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[[\\]]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'path': /[\\s\\S]+/\n\t\t}\n\t},\n\t'function-name': {\n\t\tpattern: /\\b[A-Z]\\w*(?=\\()/i,\n\t\talias: 'keyword'\n\t},\n\t'range': {\n\t\tpattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'operator': /:/,\n\t\t\t'cell': /\\$?[A-Z]+\\$?\\d+/i,\n\t\t\t'column': /\\$?[A-Z]+/i,\n\t\t\t'row': /\\$?\\d+/\n\t\t}\n\t},\n\t'cell': {\n\t\t// Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n\t\t// To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n\t\tpattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n\t\talias: 'property'\n\t},\n\t'number': /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n\t'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n\t'operator': /[-+*/^%=&,]|<[=>]?|>=?/,\n\t'punctuation': /[[\\]();{}|]/\n};\n\nPrism.languages['xlsx'] = Prism.languages['xls'] = Prism.languages['excel-formula'];\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAAC,eAAe,CAAC,GAAG;EAClC,SAAS,EAAE;IACVC,OAAO,EAAE,oCAAoC;IAC7CC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;EACT,CAAC;EACD,QAAQ,EAAE;IACTF,OAAO,EAAE,qBAAqB;IAC9BE,MAAM,EAAE;EACT,CAAC;EACD,WAAW,EAAE;IACZ;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEAF,OAAO,EAAE,sEAAsE;IAC/EE,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE;MACP,UAAU,EAAE,IAAI;MAChB,aAAa,EAAE,GAAG;MAClB,OAAO,EAAE;QACRJ,OAAO,EAAE,UAAU;QACnBG,KAAK,EAAE;MACR,CAAC;MACD,MAAM,EAAE;QACPH,OAAO,EAAE,cAAc;QACvBI,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD,CAAC;MACD,MAAM,EAAE;IACT;EACD,CAAC;EACD,eAAe,EAAE;IAChBJ,OAAO,EAAE,mBAAmB;IAC5BG,KAAK,EAAE;EACR,CAAC;EACD,OAAO,EAAE;IACRH,OAAO,EAAE,sEAAsE;IAC/EG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAE;MACP,UAAU,EAAE,GAAG;MACf,MAAM,EAAE,kBAAkB;MAC1B,QAAQ,EAAE,YAAY;MACtB,KAAK,EAAE;IACR;EACD,CAAC;EACD,MAAM,EAAE;IACP;IACA;IACAJ,OAAO,EAAE,sDAAsD;IAC/DG,KAAK,EAAE;EACR,CAAC;EACD,QAAQ,EAAE,8CAA8C;EACxD,SAAS,EAAE,qBAAqB;EAChC,UAAU,EAAE,wBAAwB;EACpC,aAAa,EAAE;AAChB,CAAC;AAEDL,KAAK,CAACC,SAAS,CAAC,MAAM,CAAC,GAAGD,KAAK,CAACC,SAAS,CAAC,KAAK,CAAC,GAAGD,KAAK,CAACC,SAAS,CAAC,eAAe,CAAC"},"metadata":{},"sourceType":"script"}