{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar assert_1 = tslib_1.__importDefault(require(\"assert\"));\nvar util_1 = require(\"./util\");\nvar Mapping = /** @class */function () {\n  function Mapping(sourceLines, sourceLoc, targetLoc) {\n    if (targetLoc === void 0) {\n      targetLoc = sourceLoc;\n    }\n    this.sourceLines = sourceLines;\n    this.sourceLoc = sourceLoc;\n    this.targetLoc = targetLoc;\n  }\n  Mapping.prototype.slice = function (lines, start, end) {\n    if (end === void 0) {\n      end = lines.lastPos();\n    }\n    var sourceLines = this.sourceLines;\n    var sourceLoc = this.sourceLoc;\n    var targetLoc = this.targetLoc;\n    function skip(name) {\n      var sourceFromPos = sourceLoc[name];\n      var targetFromPos = targetLoc[name];\n      var targetToPos = start;\n      if (name === \"end\") {\n        targetToPos = end;\n      } else {\n        assert_1.default.strictEqual(name, \"start\");\n      }\n      return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n    }\n    if (util_1.comparePos(start, targetLoc.start) <= 0) {\n      if (util_1.comparePos(targetLoc.end, end) <= 0) {\n        targetLoc = {\n          start: subtractPos(targetLoc.start, start.line, start.column),\n          end: subtractPos(targetLoc.end, start.line, start.column)\n        };\n        // The sourceLoc can stay the same because the contents of the\n        // targetLoc have not changed.\n      } else if (util_1.comparePos(end, targetLoc.start) <= 0) {\n        return null;\n      } else {\n        sourceLoc = {\n          start: sourceLoc.start,\n          end: skip(\"end\")\n        };\n        targetLoc = {\n          start: subtractPos(targetLoc.start, start.line, start.column),\n          end: subtractPos(end, start.line, start.column)\n        };\n      }\n    } else {\n      if (util_1.comparePos(targetLoc.end, start) <= 0) {\n        return null;\n      }\n      if (util_1.comparePos(targetLoc.end, end) <= 0) {\n        sourceLoc = {\n          start: skip(\"start\"),\n          end: sourceLoc.end\n        };\n        targetLoc = {\n          // Same as subtractPos(start, start.line, start.column):\n          start: {\n            line: 1,\n            column: 0\n          },\n          end: subtractPos(targetLoc.end, start.line, start.column)\n        };\n      } else {\n        sourceLoc = {\n          start: skip(\"start\"),\n          end: skip(\"end\")\n        };\n        targetLoc = {\n          // Same as subtractPos(start, start.line, start.column):\n          start: {\n            line: 1,\n            column: 0\n          },\n          end: subtractPos(end, start.line, start.column)\n        };\n      }\n    }\n    return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n  };\n  Mapping.prototype.add = function (line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n      start: addPos(this.targetLoc.start, line, column),\n      end: addPos(this.targetLoc.end, line, column)\n    });\n  };\n  Mapping.prototype.subtract = function (line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n      start: subtractPos(this.targetLoc.start, line, column),\n      end: subtractPos(this.targetLoc.end, line, column)\n    });\n  };\n  Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n    if (skipFirstLine === void 0) {\n      skipFirstLine = false;\n    }\n    if (noNegativeColumns === void 0) {\n      noNegativeColumns = false;\n    }\n    if (by === 0) {\n      return this;\n    }\n    var targetLoc = this.targetLoc;\n    var startLine = targetLoc.start.line;\n    var endLine = targetLoc.end.line;\n    if (skipFirstLine && startLine === 1 && endLine === 1) {\n      return this;\n    }\n    targetLoc = {\n      start: targetLoc.start,\n      end: targetLoc.end\n    };\n    if (!skipFirstLine || startLine > 1) {\n      var startColumn = targetLoc.start.column + by;\n      targetLoc.start = {\n        line: startLine,\n        column: noNegativeColumns ? Math.max(0, startColumn) : startColumn\n      };\n    }\n    if (!skipFirstLine || endLine > 1) {\n      var endColumn = targetLoc.end.column + by;\n      targetLoc.end = {\n        line: endLine,\n        column: noNegativeColumns ? Math.max(0, endColumn) : endColumn\n      };\n    }\n    return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n  };\n  return Mapping;\n}();\nexports.default = Mapping;\nfunction addPos(toPos, line, column) {\n  return {\n    line: toPos.line + line - 1,\n    column: toPos.line === 1 ? toPos.column + column : toPos.column\n  };\n}\nfunction subtractPos(fromPos, line, column) {\n  return {\n    line: fromPos.line - line + 1,\n    column: fromPos.line === line ? fromPos.column - column : fromPos.column\n  };\n}\nfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n  var targetComparison = util_1.comparePos(targetFromPos, targetToPos);\n  if (targetComparison === 0) {\n    // Trivial case: no characters to skip.\n    return sourceFromPos;\n  }\n  var sourceCursor, targetCursor;\n  if (targetComparison < 0) {\n    // Skipping forward.\n    sourceCursor = sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n    targetCursor = targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n    var lineDiff = targetToPos.line - targetCursor.line;\n    sourceCursor.line += lineDiff;\n    targetCursor.line += lineDiff;\n    if (lineDiff > 0) {\n      // If jumping to later lines, reset columns to the beginnings\n      // of those lines.\n      sourceCursor.column = 0;\n      targetCursor.column = 0;\n    } else {\n      assert_1.default.strictEqual(lineDiff, 0);\n    }\n    while (util_1.comparePos(targetCursor, targetToPos) < 0 && targetLines.nextPos(targetCursor, true)) {\n      assert_1.default.ok(sourceLines.nextPos(sourceCursor, true));\n      assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n    }\n  } else {\n    // Skipping backward.\n    sourceCursor = sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n    targetCursor = targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n    var lineDiff = targetToPos.line - targetCursor.line;\n    sourceCursor.line += lineDiff;\n    targetCursor.line += lineDiff;\n    if (lineDiff < 0) {\n      // If jumping to earlier lines, reset columns to the ends of\n      // those lines.\n      sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n      targetCursor.column = targetLines.getLineLength(targetCursor.line);\n    } else {\n      assert_1.default.strictEqual(lineDiff, 0);\n    }\n    while (util_1.comparePos(targetToPos, targetCursor) < 0 && targetLines.prevPos(targetCursor, true)) {\n      assert_1.default.ok(sourceLines.prevPos(sourceCursor, true));\n      assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n    }\n  }\n  return sourceCursor;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","assert_1","__importDefault","util_1","Mapping","sourceLines","sourceLoc","targetLoc","prototype","slice","lines","start","end","lastPos","skip","name","sourceFromPos","targetFromPos","targetToPos","default","strictEqual","skipChars","comparePos","subtractPos","line","column","add","addPos","subtract","indent","by","skipFirstLine","noNegativeColumns","startLine","endLine","startColumn","Math","max","endColumn","toPos","fromPos","targetLines","targetComparison","sourceCursor","targetCursor","skipSpaces","lineDiff","nextPos","ok","charAt","firstPos","getLineLength","prevPos"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/jscodeshift/node_modules/recast/lib/mapping.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar assert_1 = tslib_1.__importDefault(require(\"assert\"));\nvar util_1 = require(\"./util\");\nvar Mapping = /** @class */ (function () {\n    function Mapping(sourceLines, sourceLoc, targetLoc) {\n        if (targetLoc === void 0) { targetLoc = sourceLoc; }\n        this.sourceLines = sourceLines;\n        this.sourceLoc = sourceLoc;\n        this.targetLoc = targetLoc;\n    }\n    Mapping.prototype.slice = function (lines, start, end) {\n        if (end === void 0) { end = lines.lastPos(); }\n        var sourceLines = this.sourceLines;\n        var sourceLoc = this.sourceLoc;\n        var targetLoc = this.targetLoc;\n        function skip(name) {\n            var sourceFromPos = sourceLoc[name];\n            var targetFromPos = targetLoc[name];\n            var targetToPos = start;\n            if (name === \"end\") {\n                targetToPos = end;\n            }\n            else {\n                assert_1.default.strictEqual(name, \"start\");\n            }\n            return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n        }\n        if (util_1.comparePos(start, targetLoc.start) <= 0) {\n            if (util_1.comparePos(targetLoc.end, end) <= 0) {\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n                // The sourceLoc can stay the same because the contents of the\n                // targetLoc have not changed.\n            }\n            else if (util_1.comparePos(end, targetLoc.start) <= 0) {\n                return null;\n            }\n            else {\n                sourceLoc = {\n                    start: sourceLoc.start,\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        else {\n            if (util_1.comparePos(targetLoc.end, start) <= 0) {\n                return null;\n            }\n            if (util_1.comparePos(targetLoc.end, end) <= 0) {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: sourceLoc.end,\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n            }\n            else {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n    };\n    Mapping.prototype.add = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: addPos(this.targetLoc.start, line, column),\n            end: addPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.subtract = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: subtractPos(this.targetLoc.start, line, column),\n            end: subtractPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n        if (skipFirstLine === void 0) { skipFirstLine = false; }\n        if (noNegativeColumns === void 0) { noNegativeColumns = false; }\n        if (by === 0) {\n            return this;\n        }\n        var targetLoc = this.targetLoc;\n        var startLine = targetLoc.start.line;\n        var endLine = targetLoc.end.line;\n        if (skipFirstLine && startLine === 1 && endLine === 1) {\n            return this;\n        }\n        targetLoc = {\n            start: targetLoc.start,\n            end: targetLoc.end,\n        };\n        if (!skipFirstLine || startLine > 1) {\n            var startColumn = targetLoc.start.column + by;\n            targetLoc.start = {\n                line: startLine,\n                column: noNegativeColumns ? Math.max(0, startColumn) : startColumn,\n            };\n        }\n        if (!skipFirstLine || endLine > 1) {\n            var endColumn = targetLoc.end.column + by;\n            targetLoc.end = {\n                line: endLine,\n                column: noNegativeColumns ? Math.max(0, endColumn) : endColumn,\n            };\n        }\n        return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n    };\n    return Mapping;\n}());\nexports.default = Mapping;\nfunction addPos(toPos, line, column) {\n    return {\n        line: toPos.line + line - 1,\n        column: toPos.line === 1 ? toPos.column + column : toPos.column,\n    };\n}\nfunction subtractPos(fromPos, line, column) {\n    return {\n        line: fromPos.line - line + 1,\n        column: fromPos.line === line ? fromPos.column - column : fromPos.column,\n    };\n}\nfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n    var targetComparison = util_1.comparePos(targetFromPos, targetToPos);\n    if (targetComparison === 0) {\n        // Trivial case: no characters to skip.\n        return sourceFromPos;\n    }\n    var sourceCursor, targetCursor;\n    if (targetComparison < 0) {\n        // Skipping forward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff > 0) {\n            // If jumping to later lines, reset columns to the beginnings\n            // of those lines.\n            sourceCursor.column = 0;\n            targetCursor.column = 0;\n        }\n        else {\n            assert_1.default.strictEqual(lineDiff, 0);\n        }\n        while (util_1.comparePos(targetCursor, targetToPos) < 0 &&\n            targetLines.nextPos(targetCursor, true)) {\n            assert_1.default.ok(sourceLines.nextPos(sourceCursor, true));\n            assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n        }\n    }\n    else {\n        // Skipping backward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff < 0) {\n            // If jumping to earlier lines, reset columns to the ends of\n            // those lines.\n            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n        }\n        else {\n            assert_1.default.strictEqual(lineDiff, 0);\n        }\n        while (util_1.comparePos(targetToPos, targetCursor) < 0 &&\n            targetLines.prevPos(targetCursor, true)) {\n            assert_1.default.ok(sourceLines.prevPos(sourceCursor, true));\n            assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n        }\n    }\n    return sourceCursor;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}