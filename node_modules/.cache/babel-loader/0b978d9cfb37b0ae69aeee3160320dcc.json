{"ast":null,"code":"Prism.languages.erlang = {\n  comment: /%.+/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  \"quoted-function\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: \"function\"\n  },\n  \"quoted-atom\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: \"atom\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  number: [/\\$\\\\?./, /\\b\\d+#[a-z0-9]+/i, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  function: /\\b[a-z][\\w@]*(?=\\()/,\n  variable: {\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: !0\n  },\n  operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  atom: /\\b[a-z][\\w@]*/,\n  punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n};","map":{"version":3,"names":["Prism","languages","erlang","comment","string","pattern","greedy","alias","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-erlang.min.js"],"sourcesContent":["Prism.languages.erlang={comment:/%.+/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},\"quoted-function\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,alias:\"function\"},\"quoted-atom\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'/,alias:\"atom\"},boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,number:[/\\$\\\\?./,/\\b\\d+#[a-z0-9]+/i,/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],function:/\\b[a-z][\\w@]*(?=\\()/,variable:{pattern:/(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,lookbehind:!0},operator:[/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\\b[a-z][\\w@]*/,punctuation:/[()[\\]{}:;,.#|]|<<|>>/};"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAC;EAACC,OAAO,EAAC,KAAK;EAACC,MAAM,EAAC;IAACC,OAAO,EAAC,uBAAuB;IAACC,MAAM,EAAC,CAAC;EAAC,CAAC;EAAC,iBAAiB,EAAC;IAACD,OAAO,EAAC,6BAA6B;IAACE,KAAK,EAAC;EAAU,CAAC;EAAC,aAAa,EAAC;IAACF,OAAO,EAAC,uBAAuB;IAACE,KAAK,EAAC;EAAM,CAAC;EAACC,OAAO,EAAC,oBAAoB;EAACC,OAAO,EAAC,yDAAyD;EAACC,MAAM,EAAC,CAAC,QAAQ,EAAC,kBAAkB,EAAC,4CAA4C,CAAC;EAACC,QAAQ,EAAC,qBAAqB;EAACC,QAAQ,EAAC;IAACP,OAAO,EAAC,+BAA+B;IAACQ,UAAU,EAAC,CAAC;EAAC,CAAC;EAACC,QAAQ,EAAC,CAAC,8GAA8G,EAAC;IAACT,OAAO,EAAC,gBAAgB;IAACQ,UAAU,EAAC,CAAC;EAAC,CAAC,EAAC;IAACR,OAAO,EAAC,gBAAgB;IAACQ,UAAU,EAAC,CAAC;EAAC,CAAC,CAAC;EAACE,IAAI,EAAC,eAAe;EAACC,WAAW,EAAC;AAAuB,CAAC"},"metadata":{},"sourceType":"script"}