{"ast":null,"code":"(function (Prism) {\n  // https://freemarker.apache.org/docs/dgui_template_exp.html\n\n  // FTL expression with 4 levels of nesting supported\n  var FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n  for (var i = 0; i < 2; i++) {\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n      return FTL_EXPR;\n    });\n  }\n  FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n  var ftl = {\n    'comment': /<#--[\\s\\S]*?-->/,\n    'string': [{\n      // raw string\n      pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n      greedy: true\n    }, {\n      pattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(/<expr>/g, function () {\n        return FTL_EXPR;\n      })),\n      greedy: true,\n      inside: {\n        'interpolation': {\n          pattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(/<expr>/g, function () {\n            return FTL_EXPR;\n          })),\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        }\n      }\n    }],\n    'keyword': /\\b(?:as)\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'builtin-function': {\n      pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'function': /\\b\\w+(?=\\s*\\()/,\n    'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n    'operator': /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n    'punctuation': /[,;.:()[\\]{}]/\n  };\n  ftl.string[1].inside.interpolation.inside.rest = ftl;\n  Prism.languages.ftl = {\n    'ftl-comment': {\n      // the pattern is shortened to be more efficient\n      pattern: /^<#--[\\s\\S]*/,\n      alias: 'comment'\n    },\n    'ftl-directive': {\n      pattern: /^<[\\s\\S]+>$/,\n      inside: {\n        'directive': {\n          pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'punctuation': /^<\\/?|\\/?>$/,\n        'content': {\n          pattern: /\\s*\\S[\\s\\S]*/,\n          alias: 'ftl',\n          inside: ftl\n        }\n      }\n    },\n    'ftl-interpolation': {\n      pattern: /^\\$\\{[\\s\\S]*\\}$/,\n      inside: {\n        'punctuation': /^\\$\\{|\\}$/,\n        'content': {\n          pattern: /\\s*\\S[\\s\\S]*/,\n          alias: 'ftl',\n          inside: ftl\n        }\n      }\n    }\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () {\n      return FTL_EXPR;\n    }), 'gi');\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'ftl', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl');\n  });\n})(Prism);","map":{"version":3,"names":["Prism","FTL_EXPR","source","i","replace","ftl","pattern","greedy","RegExp","inside","lookbehind","alias","rest","string","interpolation","languages","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-ftl.js"],"sourcesContent":["(function (Prism) {\n\n\t// https://freemarker.apache.org/docs/dgui_template_exp.html\n\n\t// FTL expression with 4 levels of nesting supported\n\tvar FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n\tfor (var i = 0; i < 2; i++) {\n\t\tFTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () { return FTL_EXPR; });\n\t}\n\tFTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n\n\tvar ftl = {\n\t\t'comment': /<#--[\\s\\S]*?-->/,\n\t\t'string': [\n\t\t\t{\n\t\t\t\t// raw string\n\t\t\t\tpattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(/<expr>/g, function () { return FTL_EXPR; })),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(/<expr>/g, function () { return FTL_EXPR; })),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trest: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'keyword': /\\b(?:as)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'builtin-function': {\n\t\t\tpattern: /((?:^|[^?])\\?\\s*)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'function': /\\b\\w+(?=\\s*\\()/,\n\t\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n\t\t'operator': /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n\t\t'punctuation': /[,;.:()[\\]{}]/\n\t};\n\n\tftl.string[1].inside.interpolation.inside.rest = ftl;\n\n\tPrism.languages.ftl = {\n\t\t'ftl-comment': {\n\t\t\t// the pattern is shortened to be more efficient\n\t\t\tpattern: /^<#--[\\s\\S]*/,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'ftl-directive': {\n\t\t\tpattern: /^<[\\s\\S]+>$/,\n\t\t\tinside: {\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(^<\\/?)[#@][a-z]\\w*/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'punctuation': /^<\\/?|\\/?>$/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /\\s*\\S[\\s\\S]*/,\n\t\t\t\t\talias: 'ftl',\n\t\t\t\t\tinside: ftl\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'ftl-interpolation': {\n\t\t\tpattern: /^\\$\\{[\\s\\S]*\\}$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\$\\{|\\}$/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /\\s*\\S[\\s\\S]*/,\n\t\t\t\t\talias: 'ftl',\n\t\t\t\t\tinside: ftl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () { return FTL_EXPR; }), 'gi');\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'ftl', pattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl');\n\t});\n\n}(Prism));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}