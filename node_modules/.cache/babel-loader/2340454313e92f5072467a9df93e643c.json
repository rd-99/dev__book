{"ast":null,"code":"Prism.languages.twig = {\n  'comment': /\\{#[\\s\\S]*?#\\}/,\n  'tag': {\n    pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n    inside: {\n      'ld': {\n        pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n        inside: {\n          'punctuation': /^(?:\\{\\{|\\{%)-?/,\n          'keyword': /\\w+/\n        }\n      },\n      'rd': {\n        pattern: /-?(?:%\\}|\\}\\})$/,\n        inside: {\n          'punctuation': /.+/\n        }\n      },\n      'string': {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        inside: {\n          'punctuation': /^['\"]|['\"]$/\n        }\n      },\n      'keyword': /\\b(?:even|if|odd)\\b/,\n      'boolean': /\\b(?:true|false|null)\\b/,\n      'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      'operator': [{\n        pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n      'property': /\\b[a-zA-Z_]\\w*\\b/,\n      'punctuation': /[()\\[\\]{}:.,]/\n    }\n  },\n  // The rest can be parsed as HTML\n  'other': {\n    // We want non-blank matches\n    pattern: /\\S(?:[\\s\\S]*\\S)?/,\n    inside: Prism.languages.markup\n  }\n};","map":{"version":3,"names":["Prism","languages","twig","pattern","inside","lookbehind","markup"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-twig.js"],"sourcesContent":["Prism.languages.twig = {\n\t'comment': /\\{#[\\s\\S]*?#\\}/,\n\t'tag': {\n\t\tpattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n\t\tinside: {\n\t\t\t'ld': {\n\t\t\t\tpattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^(?:\\{\\{|\\{%)-?/,\n\t\t\t\t\t'keyword': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rd': {\n\t\t\t\tpattern: /-?(?:%\\}|\\}\\})$/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /.+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^['\"]|['\"]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'keyword': /\\b(?:even|if|odd)\\b/,\n\t\t\t'boolean': /\\b(?:true|false|null)\\b/,\n\t\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t\t'operator': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n\t\t\t],\n\t\t\t'property': /\\b[a-zA-Z_]\\w*\\b/,\n\t\t\t'punctuation': /[()\\[\\]{}:.,]/\n\t\t}\n\t},\n\n\t// The rest can be parsed as HTML\n\t'other': {\n\t\t// We want non-blank matches\n\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\tinside: Prism.languages.markup\n\t}\n};\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,IAAI,GAAG;EACtB,SAAS,EAAE,gBAAgB;EAC3B,KAAK,EAAE;IACNC,OAAO,EAAE,iCAAiC;IAC1CC,MAAM,EAAE;MACP,IAAI,EAAE;QACLD,OAAO,EAAE,yBAAyB;QAClCC,MAAM,EAAE;UACP,aAAa,EAAE,iBAAiB;UAChC,SAAS,EAAE;QACZ;MACD,CAAC;MACD,IAAI,EAAE;QACLD,OAAO,EAAE,iBAAiB;QAC1BC,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD,CAAC;MACD,QAAQ,EAAE;QACTD,OAAO,EAAE,iCAAiC;QAC1CC,MAAM,EAAE;UACP,aAAa,EAAE;QAChB;MACD,CAAC;MACD,SAAS,EAAE,qBAAqB;MAChC,SAAS,EAAE,yBAAyB;MACpC,QAAQ,EAAE,8DAA8D;MACxE,UAAU,EAAE,CACX;QACCD,OAAO,EAAE,uFAAuF;QAChGE,UAAU,EAAE;MACb,CAAC,EACD,qCAAqC,CACrC;MACD,UAAU,EAAE,kBAAkB;MAC9B,aAAa,EAAE;IAChB;EACD,CAAC;EAED;EACA,OAAO,EAAE;IACR;IACAF,OAAO,EAAE,kBAAkB;IAC3BC,MAAM,EAAEJ,KAAK,CAACC,SAAS,CAACK;EACzB;AACD,CAAC"},"metadata":{},"sourceType":"script"}