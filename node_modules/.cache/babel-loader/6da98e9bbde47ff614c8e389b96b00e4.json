{"ast":null,"code":"!function (t) {\n  var e = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    a = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n  t.languages.soy = {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(\\s)\\/\\/.*/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    \"command-arg\": {\n      pattern: /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    parameter: {\n      pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"variable\"\n    },\n    keyword: [{\n      pattern: /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n      lookbehind: !0\n    }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n    delimiter: {\n      pattern: /^\\{+\\/?|\\/?\\}+$/,\n      alias: \"punctuation\"\n    },\n    property: /\\w+(?==)/,\n    variable: {\n      pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n      inside: {\n        string: {\n          pattern: e,\n          greedy: !0\n        },\n        number: a,\n        punctuation: /[\\[\\].?]/\n      }\n    },\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    function: [/\\w+(?=\\()/, {\n      pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n      lookbehind: !0\n    }],\n    boolean: /\\b(?:true|false)\\b/,\n    number: a,\n    operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n    punctuation: /[{}()\\[\\]|.,:]/\n  }, t.hooks.add(\"before-tokenize\", function (e) {\n    var a = !1;\n    t.languages[\"markup-templating\"].buildPlaceholders(e, \"soy\", /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g, function (e) {\n      return \"{/literal}\" === e && (a = !1), !a && (\"{literal}\" === e && (a = !0), !0);\n    });\n  }), t.hooks.add(\"after-tokenize\", function (e) {\n    t.languages[\"markup-templating\"].tokenizePlaceholders(e, \"soy\");\n  });\n}(Prism);","map":{"version":3,"names":["t","e","a","languages","soy","comment","pattern","lookbehind","greedy","alias","inside","punctuation","parameter","keyword","delimiter","property","variable","string","number","function","boolean","operator","hooks","add","buildPlaceholders","tokenizePlaceholders","Prism"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-soy.min.js"],"sourcesContent":["!function(t){var e=/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,a=/\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;t.languages.soy={comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(\\s)\\/\\/.*/,lookbehind:!0,greedy:!0}],\"command-arg\":{pattern:/(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,lookbehind:!0,alias:\"string\",inside:{punctuation:/\\./}},parameter:{pattern:/(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,lookbehind:!0,alias:\"variable\"},keyword:[{pattern:/(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,lookbehind:!0},/\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],delimiter:{pattern:/^\\{+\\/?|\\/?\\}+$/,alias:\"punctuation\"},property:/\\w+(?==)/,variable:{pattern:/\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,inside:{string:{pattern:e,greedy:!0},number:a,punctuation:/[\\[\\].?]/}},string:{pattern:e,greedy:!0},function:[/\\w+(?=\\()/,{pattern:/(\\|[^\\S\\r\\n]*)\\w+/,lookbehind:!0}],boolean:/\\b(?:true|false)\\b/,number:a,operator:/\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,punctuation:/[{}()\\[\\]|.,:]/},t.hooks.add(\"before-tokenize\",function(e){var a=!1;t.languages[\"markup-templating\"].buildPlaceholders(e,\"soy\",/\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g,function(e){return\"{/literal}\"===e&&(a=!1),!a&&(\"{literal}\"===e&&(a=!0),!0)})}),t.hooks.add(\"after-tokenize\",function(e){t.languages[\"markup-templating\"].tokenizePlaceholders(e,\"soy\")})}(Prism);"],"mappings":"AAAA,CAAC,UAASA,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,gDAAgD;IAACC,CAAC,GAAC,mDAAmD;EAACF,CAAC,CAACG,SAAS,CAACC,GAAG,GAAC;IAACC,OAAO,EAAC,CAAC,kBAAkB,EAAC;MAACC,OAAO,EAAC,YAAY;MAACC,UAAU,EAAC,CAAC,CAAC;MAACC,MAAM,EAAC,CAAC;IAAC,CAAC,CAAC;IAAC,aAAa,EAAC;MAACF,OAAO,EAAC,yFAAyF;MAACC,UAAU,EAAC,CAAC,CAAC;MAACE,KAAK,EAAC,QAAQ;MAACC,MAAM,EAAC;QAACC,WAAW,EAAC;MAAI;IAAC,CAAC;IAACC,SAAS,EAAC;MAACN,OAAO,EAAC,mCAAmC;MAACC,UAAU,EAAC,CAAC,CAAC;MAACE,KAAK,EAAC;IAAU,CAAC;IAACI,OAAO,EAAC,CAAC;MAACP,OAAO,EAAC,kNAAkN;MAACC,UAAU,EAAC,CAAC;IAAC,CAAC,EAAC,yFAAyF,CAAC;IAACO,SAAS,EAAC;MAACR,OAAO,EAAC,iBAAiB;MAACG,KAAK,EAAC;IAAa,CAAC;IAACM,QAAQ,EAAC,UAAU;IAACC,QAAQ,EAAC;MAACV,OAAO,EAAC,0CAA0C;MAACI,MAAM,EAAC;QAACO,MAAM,EAAC;UAACX,OAAO,EAACL,CAAC;UAACO,MAAM,EAAC,CAAC;QAAC,CAAC;QAACU,MAAM,EAAChB,CAAC;QAACS,WAAW,EAAC;MAAU;IAAC,CAAC;IAACM,MAAM,EAAC;MAACX,OAAO,EAACL,CAAC;MAACO,MAAM,EAAC,CAAC;IAAC,CAAC;IAACW,QAAQ,EAAC,CAAC,WAAW,EAAC;MAACb,OAAO,EAAC,mBAAmB;MAACC,UAAU,EAAC,CAAC;IAAC,CAAC,CAAC;IAACa,OAAO,EAAC,oBAAoB;IAACF,MAAM,EAAChB,CAAC;IAACmB,QAAQ,EAAC,gDAAgD;IAACV,WAAW,EAAC;EAAgB,CAAC,EAACX,CAAC,CAACsB,KAAK,CAACC,GAAG,CAAC,iBAAiB,EAAC,UAAStB,CAAC,EAAC;IAAC,IAAIC,CAAC,GAAC,CAAC,CAAC;IAACF,CAAC,CAACG,SAAS,CAAC,mBAAmB,CAAC,CAACqB,iBAAiB,CAACvB,CAAC,EAAC,KAAK,EAAC,gDAAgD,EAAC,UAASA,CAAC,EAAC;MAAC,OAAM,YAAY,KAAGA,CAAC,KAAGC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC,CAACA,CAAC,KAAG,WAAW,KAAGD,CAAC,KAAGC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC;EAAA,CAAC,CAAC,EAACF,CAAC,CAACsB,KAAK,CAACC,GAAG,CAAC,gBAAgB,EAAC,UAAStB,CAAC,EAAC;IAACD,CAAC,CAACG,SAAS,CAAC,mBAAmB,CAAC,CAACsB,oBAAoB,CAACxB,CAAC,EAAC,KAAK,CAAC;EAAA,CAAC,CAAC;AAAA,CAAC,CAACyB,KAAK,CAAC"},"metadata":{},"sourceType":"script"}