{"ast":null,"code":"(function (Prism) {\n  Prism.languages.velocity = Prism.languages.extend('markup', {});\n  var velocity = {\n    'variable': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n      lookbehind: true,\n      inside: {} // See below\n    },\n\n    'string': {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    'number': /\\b\\d+\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    'punctuation': /[(){}[\\]:,.]/\n  };\n  velocity.variable.inside = {\n    'string': velocity['string'],\n    'function': {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: true\n    },\n    'number': velocity['number'],\n    'boolean': velocity['boolean'],\n    'punctuation': velocity['punctuation']\n  };\n  Prism.languages.insertBefore('velocity', 'comment', {\n    'unparsed': {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^#\\[\\[|\\]\\]#$/\n      }\n    },\n    'velocity-comment': [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }],\n    'directive': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: true,\n      inside: {\n        'keyword': {\n          pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n          inside: {\n            'punctuation': /[{}]/\n          }\n        },\n        rest: velocity\n      }\n    },\n    'variable': velocity['variable']\n  });\n  Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n})(Prism);","map":{"version":3,"names":["Prism","languages","velocity","extend","pattern","lookbehind","inside","greedy","variable","insertBefore","alias","rest"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-velocity.js"],"sourcesContent":["(function (Prism) {\n\tPrism.languages.velocity = Prism.languages.extend('markup', {});\n\n\tvar velocity = {\n\t\t'variable': {\n\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {} // See below\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /\\b\\d+\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n\t\t'punctuation': /[(){}[\\]:,.]/\n\t};\n\n\tvelocity.variable.inside = {\n\t\t'string': velocity['string'],\n\t\t'function': {\n\t\t\tpattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': velocity['number'],\n\t\t'boolean': velocity['boolean'],\n\t\t'punctuation': velocity['punctuation']\n\t};\n\n\tPrism.languages.insertBefore('velocity', 'comment', {\n\t\t'unparsed': {\n\t\t\tpattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^#\\[\\[|\\]\\]#$/\n\t\t\t}\n\t\t},\n\t\t'velocity-comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'comment'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])##.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'comment'\n\t\t\t}\n\t\t],\n\t\t'directive': {\n\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[{}]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trest: velocity\n\t\t\t}\n\t\t},\n\t\t'variable': velocity['variable']\n\t});\n\n\tPrism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n\n}(Prism));\n"],"mappings":"AAAC,WAAUA,KAAK,EAAE;EACjBA,KAAK,CAACC,SAAS,CAACC,QAAQ,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAE/D,IAAID,QAAQ,GAAG;IACd,UAAU,EAAE;MACXE,OAAO,EAAE,2GAA2G;MACpHC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,CAAC,CAAC,CAAC;IACZ,CAAC;;IACD,QAAQ,EAAE;MACTF,OAAO,EAAE,iBAAiB;MAC1BG,MAAM,EAAE;IACT,CAAC;IACD,QAAQ,EAAE,SAAS;IACnB,SAAS,EAAE,oBAAoB;IAC/B,UAAU,EAAE,gEAAgE;IAC5E,aAAa,EAAE;EAChB,CAAC;EAEDL,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG;IAC1B,QAAQ,EAAEJ,QAAQ,CAAC,QAAQ,CAAC;IAC5B,UAAU,EAAE;MACXE,OAAO,EAAE,2BAA2B;MACpCC,UAAU,EAAE;IACb,CAAC;IACD,QAAQ,EAAEH,QAAQ,CAAC,QAAQ,CAAC;IAC5B,SAAS,EAAEA,QAAQ,CAAC,SAAS,CAAC;IAC9B,aAAa,EAAEA,QAAQ,CAAC,aAAa;EACtC,CAAC;EAEDF,KAAK,CAACC,SAAS,CAACQ,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;IACnD,UAAU,EAAE;MACXL,OAAO,EAAE,6BAA6B;MACtCC,UAAU,EAAE,IAAI;MAChBE,MAAM,EAAE,IAAI;MACZD,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,kBAAkB,EAAE,CACnB;MACCF,OAAO,EAAE,yBAAyB;MAClCC,UAAU,EAAE,IAAI;MAChBE,MAAM,EAAE,IAAI;MACZG,KAAK,EAAE;IACR,CAAC,EACD;MACCN,OAAO,EAAE,eAAe;MACxBC,UAAU,EAAE,IAAI;MAChBE,MAAM,EAAE,IAAI;MACZG,KAAK,EAAE;IACR,CAAC,CACD;IACD,WAAW,EAAE;MACZN,OAAO,EAAE,wFAAwF;MACjGC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACP,SAAS,EAAE;UACVF,OAAO,EAAE,4CAA4C;UACrDE,MAAM,EAAE;YACP,aAAa,EAAE;UAChB;QACD,CAAC;QACDK,IAAI,EAAET;MACP;IACD,CAAC;IACD,UAAU,EAAEA,QAAQ,CAAC,UAAU;EAChC,CAAC,CAAC;EAEFF,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,CAACI,MAAM,CAAC,YAAY,CAAC,CAACA,MAAM,CAACK,IAAI,GAAGX,KAAK,CAACC,SAAS,CAACC,QAAQ;AAE5F,CAAC,EAACF,KAAK,CAAC"},"metadata":{},"sourceType":"script"}