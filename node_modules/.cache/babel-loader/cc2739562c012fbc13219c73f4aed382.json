{"ast":null,"code":"!function (n) {\n  for (var i = \"[^<()\\\"']|\\\\((?:<expr>)*\\\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*--\\x3e|\\\"(?:[^\\\\\\\\\\\"]|\\\\\\\\.)*\\\"|'(?:[^\\\\\\\\']|\\\\\\\\.)*'\", e = 0; e < 2; e++) i = i.replace(/<expr>/g, function () {\n    return i;\n  });\n  i = i.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n  var t = {\n    comment: /<#--[\\s\\S]*?-->/,\n    string: [{\n      pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n      greedy: !0\n    }, {\n      pattern: RegExp(\"(\\\"|')(?:(?!\\\\1|\\\\$\\\\{)[^\\\\\\\\]|\\\\\\\\.|\\\\$\\\\{(?:(?!\\\\})(?:<expr>))*\\\\})*\\\\1\".replace(/<expr>/g, function () {\n        return i;\n      })),\n      greedy: !0,\n      inside: {\n        interpolation: {\n          pattern: RegExp(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\\\\\\\\\)*)\\\\$\\\\{(?:(?!\\\\})(?:<expr>))*\\\\}\".replace(/<expr>/g, function () {\n            return i;\n          })),\n          lookbehind: !0,\n          inside: {\n            \"interpolation-punctuation\": {\n              pattern: /^\\$\\{|\\}$/,\n              alias: \"punctuation\"\n            },\n            rest: null\n          }\n        }\n      }\n    }],\n    keyword: /\\b(?:as)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    \"builtin-function\": {\n      pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n      lookbehind: !0,\n      alias: \"function\"\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n    punctuation: /[,;.:()[\\]{}]/\n  };\n  t.string[1].inside.interpolation.inside.rest = t, n.languages.ftl = {\n    \"ftl-comment\": {\n      pattern: /^<#--[\\s\\S]*/,\n      alias: \"comment\"\n    },\n    \"ftl-directive\": {\n      pattern: /^<[\\s\\S]+>$/,\n      inside: {\n        directive: {\n          pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n          lookbehind: !0,\n          alias: \"keyword\"\n        },\n        punctuation: /^<\\/?|\\/?>$/,\n        content: {\n          pattern: /\\s*\\S[\\s\\S]*/,\n          alias: \"ftl\",\n          inside: t\n        }\n      }\n    },\n    \"ftl-interpolation\": {\n      pattern: /^\\$\\{[\\s\\S]*\\}$/,\n      inside: {\n        punctuation: /^\\$\\{|\\}$/,\n        content: {\n          pattern: /\\s*\\S[\\s\\S]*/,\n          alias: \"ftl\",\n          inside: t\n        }\n      }\n    }\n  }, n.hooks.add(\"before-tokenize\", function (e) {\n    var t = RegExp(\"<#--[^]*?--\\x3e|</?[#@][a-zA-Z](?:<expr>)*?>|\\\\$\\\\{(?:<expr>)*?\\\\}\".replace(/<expr>/g, function () {\n      return i;\n    }), \"gi\");\n    n.languages[\"markup-templating\"].buildPlaceholders(e, \"ftl\", t);\n  }), n.hooks.add(\"after-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].tokenizePlaceholders(e, \"ftl\");\n  });\n}(Prism);","map":{"version":3,"names":["n","i","e","replace","t","comment","string","pattern","greedy","RegExp","inside","interpolation","lookbehind","alias","rest","keyword","boolean","function","number","operator","punctuation","languages","ftl","directive","content","hooks","add","buildPlaceholders","tokenizePlaceholders","Prism"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-ftl.min.js"],"sourcesContent":["!function(n){for(var i=\"[^<()\\\"']|\\\\((?:<expr>)*\\\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*--\\x3e|\\\"(?:[^\\\\\\\\\\\"]|\\\\\\\\.)*\\\"|'(?:[^\\\\\\\\']|\\\\\\\\.)*'\",e=0;e<2;e++)i=i.replace(/<expr>/g,function(){return i});i=i.replace(/<expr>/g,\"[^\\\\s\\\\S]\");var t={comment:/<#--[\\s\\S]*?-->/,string:[{pattern:/\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,greedy:!0},{pattern:RegExp(\"(\\\"|')(?:(?!\\\\1|\\\\$\\\\{)[^\\\\\\\\]|\\\\\\\\.|\\\\$\\\\{(?:(?!\\\\})(?:<expr>))*\\\\})*\\\\1\".replace(/<expr>/g,function(){return i})),greedy:!0,inside:{interpolation:{pattern:RegExp(\"((?:^|[^\\\\\\\\])(?:\\\\\\\\\\\\\\\\)*)\\\\$\\\\{(?:(?!\\\\})(?:<expr>))*\\\\}\".replace(/<expr>/g,function(){return i})),lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:null}}}}],keyword:/\\b(?:as)\\b/,boolean:/\\b(?:true|false)\\b/,\"builtin-function\":{pattern:/((?:^|[^?])\\?\\s*)\\w+/,lookbehind:!0,alias:\"function\"},function:/\\b\\w+(?=\\s*\\()/,number:/\\b\\d+(?:\\.\\d+)?\\b/,operator:/\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,punctuation:/[,;.:()[\\]{}]/};t.string[1].inside.interpolation.inside.rest=t,n.languages.ftl={\"ftl-comment\":{pattern:/^<#--[\\s\\S]*/,alias:\"comment\"},\"ftl-directive\":{pattern:/^<[\\s\\S]+>$/,inside:{directive:{pattern:/(^<\\/?)[#@][a-z]\\w*/i,lookbehind:!0,alias:\"keyword\"},punctuation:/^<\\/?|\\/?>$/,content:{pattern:/\\s*\\S[\\s\\S]*/,alias:\"ftl\",inside:t}}},\"ftl-interpolation\":{pattern:/^\\$\\{[\\s\\S]*\\}$/,inside:{punctuation:/^\\$\\{|\\}$/,content:{pattern:/\\s*\\S[\\s\\S]*/,alias:\"ftl\",inside:t}}}},n.hooks.add(\"before-tokenize\",function(e){var t=RegExp(\"<#--[^]*?--\\x3e|</?[#@][a-zA-Z](?:<expr>)*?>|\\\\$\\\\{(?:<expr>)*?\\\\}\".replace(/<expr>/g,function(){return i}),\"gi\");n.languages[\"markup-templating\"].buildPlaceholders(e,\"ftl\",t)}),n.hooks.add(\"after-tokenize\",function(e){n.languages[\"markup-templating\"].tokenizePlaceholders(e,\"ftl\")})}(Prism);"],"mappings":"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"},"metadata":{},"sourceType":"script"}