{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\dev__book\\\\dev__book\\\\src\\\\components\\\\code-editor.tsx\",\n  _s = $RefreshSig$();\nimport MonacoEditor from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport { useRef } from 'react';\nimport './code-editor.css';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = _ref => {\n  _s();\n  let {\n    onChange,\n    initialValue\n  } = _ref;\n  const editorRef = useRef();\n  const onEditorDidMount = (getValue, MonacoEditor) => {\n    var _MonacoEditor$getMode;\n    editorRef.current = MonacoEditor;\n    MonacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n    (_MonacoEditor$getMode = MonacoEditor.getModel()) === null || _MonacoEditor$getMode === void 0 ? void 0 : _MonacoEditor$getMode.updateOptions({\n      tabSize: 2\n    });\n    const highlighter = new Highlighter(\n    // @ts-ignore\n    window.monaco, codeShift, MonacoEditor);\n    highlighter.highLightOnDidChangeModelContent(() => {}, () => {}, undefined, () => {});\n  };\n  const onFormatClick = () => {\n    const unformatted = editorRef.current.getModel().getValue();\n    const formatted = prettier.format(unformatted, {\n      parser: 'babel',\n      plugins: [parser],\n      useTabs: false,\n      semi: true,\n      singleQuote: true\n    }).replace(/\\n$/, '');\n    editorRef.current.setValue(formatted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button-format is-primary is-small \",\n      onClick: onFormatClick,\n      children: \"Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MonacoEditor, {\n      editorDidMount: onEditorDidMount,\n      value: initialValue,\n      height: \"100%\",\n      theme: \"dark\",\n      language: \"javascript\",\n      options: {\n        wordWrap: 'on',\n        minimap: {\n          enabled: false\n        },\n        showUnused: false,\n        folding: false,\n        lineNumbersMinChars: 3,\n        fontSize: 16,\n        scrollBeyondLastLine: false,\n        automaticLayout: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["MonacoEditor","prettier","parser","useRef","codeShift","Highlighter","jsxDEV","_jsxDEV","CodeEditor","_ref","_s","onChange","initialValue","editorRef","onEditorDidMount","getValue","_MonacoEditor$getMode","current","onDidChangeModelContent","getModel","updateOptions","tabSize","highlighter","window","monaco","highLightOnDidChangeModelContent","undefined","onFormatClick","unformatted","formatted","format","plugins","useTabs","semi","singleQuote","replace","setValue","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","editorDidMount","value","height","theme","language","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/src/components/code-editor.tsx"],"sourcesContent":["import MonacoEditor, {EditorDidMount} from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel';\r\nimport  {useRef} from 'react';\r\nimport './code-editor.css';\r\nimport codeShift from 'jscodeshift';\r\nimport Highlighter from 'monaco-jsx-highlighter';\r\n\r\n\r\ninterface CodeEditorProps {\r\n    initialValue: string;\r\n    onChange(value:string) : void;\r\n}\r\nconst CodeEditor:React.FC<CodeEditorProps> = ({ onChange , initialValue }) => {\r\n\r\n    const editorRef = useRef<any>();\r\n    const onEditorDidMount: EditorDidMount = (getValue , MonacoEditor ) => {\r\n        editorRef.current = MonacoEditor;        \r\n        MonacoEditor.onDidChangeModelContent(() => {\r\n            onChange(getValue());\r\n        });\r\n        MonacoEditor.getModel()?.updateOptions({ tabSize: 2});\r\n\r\n        const highlighter = new Highlighter(\r\n            // @ts-ignore\r\n            window.monaco,\r\n            codeShift,\r\n            MonacoEditor\r\n            );\r\n        highlighter.highLightOnDidChangeModelContent(\r\n            () => {},\r\n            () => {},\r\n            undefined,\r\n            () => {}\r\n        );\r\n               \r\n    };\r\n\r\n    const onFormatClick = () => {\r\n        const unformatted =editorRef.current.getModel().getValue();\r\n\r\n        const formatted = prettier.format(unformatted,{\r\n            parser: 'babel',\r\n            plugins:[parser],\r\n            useTabs: false,\r\n            semi: true,\r\n            singleQuote: true,\r\n        }).replace(/\\n$/,'');\r\n        editorRef.current.setValue(formatted);\r\n    };\r\n    return(\r\n    <div className='editor-wrapper'>\r\n        <button className='button button-format is-primary is-small ' onClick={onFormatClick}>Format</button>\r\n    <MonacoEditor\r\n            editorDidMount={onEditorDidMount}\r\n            value= { initialValue } \r\n            height ='100%'\r\n            theme = \"dark\"\r\n            language='javascript'\r\n            options={{\r\n                wordWrap: 'on',\r\n                minimap : {enabled : false},\r\n                showUnused:false,\r\n                folding:false,\r\n                lineNumbersMinChars:3,\r\n                fontSize: 16,\r\n                scrollBeyondLastLine:false,\r\n                automaticLayout:true\r\n             }}\r\n             />\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default CodeEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}