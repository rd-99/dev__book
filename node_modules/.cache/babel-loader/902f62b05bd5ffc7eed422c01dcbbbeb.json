{"ast":null,"code":"!function (e) {\n  e.languages.kotlin = e.languages.extend(\"clike\", {\n    keyword: {\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: !0\n    },\n    function: [{\n      pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n      greedy: !0\n    }, {\n      pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  }), delete e.languages.kotlin[\"class-name\"], e.languages.insertBefore(\"kotlin\", \"string\", {\n    \"raw-string\": {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      alias: \"string\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"keyword\", {\n    annotation: {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: \"builtin\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"function\", {\n    label: {\n      pattern: /\\b\\w+@|@\\w+\\b/,\n      alias: \"symbol\"\n    }\n  });\n  var n = [{\n    pattern: /\\$\\{[^}]+\\}/,\n    inside: {\n      delimiter: {\n        pattern: /^\\$\\{|\\}$/,\n        alias: \"variable\"\n      },\n      rest: e.languages.kotlin\n    }\n  }, {\n    pattern: /\\$\\w+/,\n    alias: \"variable\"\n  }];\n  e.languages.kotlin.string.inside = e.languages.kotlin[\"raw-string\"].inside = {\n    interpolation: n\n  }, e.languages.kt = e.languages.kotlin, e.languages.kts = e.languages.kotlin;\n}(Prism);","map":{"version":3,"names":["e","languages","kotlin","extend","keyword","pattern","lookbehind","function","greedy","number","operator","insertBefore","alias","annotation","label","n","inside","delimiter","rest","string","interpolation","kt","kts","Prism"],"sources":["C:/Users/Acer/Desktop/dev__book/dev__book/node_modules/prismjs/components/prism-kotlin.min.js"],"sourcesContent":["!function(e){e.languages.kotlin=e.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,lookbehind:!0},function:[{pattern:/(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,greedy:!0},{pattern:/(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,lookbehind:!0,greedy:!0}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/}),delete e.languages.kotlin[\"class-name\"],e.languages.insertBefore(\"kotlin\",\"string\",{\"raw-string\":{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,alias:\"string\"}}),e.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}}),e.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\b\\w+@|@\\w+\\b/,alias:\"symbol\"}});var n=[{pattern:/\\$\\{[^}]+\\}/,inside:{delimiter:{pattern:/^\\$\\{|\\}$/,alias:\"variable\"},rest:e.languages.kotlin}},{pattern:/\\$\\w+/,alias:\"variable\"}];e.languages.kotlin.string.inside=e.languages.kotlin[\"raw-string\"].inside={interpolation:n},e.languages.kt=e.languages.kotlin,e.languages.kts=e.languages.kotlin}(Prism);"],"mappings":"AAAA,CAAC,UAASA,CAAC,EAAC;EAACA,CAAC,CAACC,SAAS,CAACC,MAAM,GAACF,CAAC,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAC;IAACC,OAAO,EAAC;MAACC,OAAO,EAAC,0bAA0b;MAACC,UAAU,EAAC,CAAC;IAAC,CAAC;IAACC,QAAQ,EAAC,CAAC;MAACF,OAAO,EAAC,gCAAgC;MAACG,MAAM,EAAC,CAAC;IAAC,CAAC,EAAC;MAACH,OAAO,EAAC,kCAAkC;MAACC,UAAU,EAAC,CAAC,CAAC;MAACE,MAAM,EAAC,CAAC;IAAC,CAAC,CAAC;IAACC,MAAM,EAAC,iIAAiI;IAACC,QAAQ,EAAC;EAAsG,CAAC,CAAC,EAAC,OAAOV,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC,EAACF,CAAC,CAACC,SAAS,CAACU,YAAY,CAAC,QAAQ,EAAC,QAAQ,EAAC;IAAC,YAAY,EAAC;MAACN,OAAO,EAAC,qBAAqB;MAACO,KAAK,EAAC;IAAQ;EAAC,CAAC,CAAC,EAACZ,CAAC,CAACC,SAAS,CAACU,YAAY,CAAC,QAAQ,EAAC,SAAS,EAAC;IAACE,UAAU,EAAC;MAACR,OAAO,EAAC,qCAAqC;MAACO,KAAK,EAAC;IAAS;EAAC,CAAC,CAAC,EAACZ,CAAC,CAACC,SAAS,CAACU,YAAY,CAAC,QAAQ,EAAC,UAAU,EAAC;IAACG,KAAK,EAAC;MAACT,OAAO,EAAC,eAAe;MAACO,KAAK,EAAC;IAAQ;EAAC,CAAC,CAAC;EAAC,IAAIG,CAAC,GAAC,CAAC;IAACV,OAAO,EAAC,aAAa;IAACW,MAAM,EAAC;MAACC,SAAS,EAAC;QAACZ,OAAO,EAAC,WAAW;QAACO,KAAK,EAAC;MAAU,CAAC;MAACM,IAAI,EAAClB,CAAC,CAACC,SAAS,CAACC;IAAM;EAAC,CAAC,EAAC;IAACG,OAAO,EAAC,OAAO;IAACO,KAAK,EAAC;EAAU,CAAC,CAAC;EAACZ,CAAC,CAACC,SAAS,CAACC,MAAM,CAACiB,MAAM,CAACH,MAAM,GAAChB,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC,CAACc,MAAM,GAAC;IAACI,aAAa,EAACL;EAAC,CAAC,EAACf,CAAC,CAACC,SAAS,CAACoB,EAAE,GAACrB,CAAC,CAACC,SAAS,CAACC,MAAM,EAACF,CAAC,CAACC,SAAS,CAACqB,GAAG,GAACtB,CAAC,CAACC,SAAS,CAACC,MAAM;AAAA,CAAC,CAACqB,KAAK,CAAC"},"metadata":{},"sourceType":"script"}